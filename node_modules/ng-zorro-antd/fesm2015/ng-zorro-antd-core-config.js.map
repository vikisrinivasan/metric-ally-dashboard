{"version":3,"file":"ng-zorro-antd-core-config.js","sources":["ng-zorro-antd/core/config/config.ts","ng-zorro-antd/core/config/config.service.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { InjectionToken, TemplateRef, Type } from '@angular/core';\n\nimport { SafeUrl } from '@angular/platform-browser';\nimport { NzBreakpointEnum } from 'ng-zorro-antd/core/services';\nimport { NzSafeAny, NzShapeSCType, NzSizeDSType, NzSizeLDSType, NzSizeMDSType } from 'ng-zorro-antd/core/types';\n\nexport interface NzConfig {\n  affix?: AffixConfig;\n  select?: SelectConfig;\n  alert?: AlertConfig;\n  anchor?: AnchorConfig;\n  avatar?: AvatarConfig;\n  backTop?: BackTopConfig;\n  badge?: BadgeConfig;\n  button?: ButtonConfig;\n  card?: CardConfig;\n  carousel?: CarouselConfig;\n  cascader?: CascaderConfig;\n  codeEditor?: CodeEditorConfig;\n  collapse?: CollapseConfig;\n  collapsePanel?: CollapsePanelConfig;\n  datePicker?: DatePickerConfig;\n  descriptions?: DescriptionsConfig;\n  drawer?: DrawerConfig;\n  empty?: EmptyConfig;\n  form?: FormConfig;\n  icon?: IconConfig;\n  message?: MessageConfig;\n  modal?: ModalConfig;\n  notification?: NotificationConfig;\n  pageHeader?: PageHeaderConfig;\n  progress?: ProgressConfig;\n  rate?: RateConfig;\n  space?: SpaceConfig;\n  spin?: SpinConfig;\n  switch?: SwitchConfig;\n  table?: TableConfig;\n  tabs?: TabsConfig;\n  timePicker?: TimePickerConfig;\n  tree?: TreeConfig;\n  treeSelect?: TreeSelectConfig;\n  typography?: TypographyConfig;\n}\n\nexport interface SelectConfig {\n  nzBorderless?: boolean;\n  nzSuffixIcon?: TemplateRef<NzSafeAny> | string | null;\n}\n\nexport interface AffixConfig {\n  nzOffsetBottom?: number;\n  nzOffsetTop?: number;\n}\n\nexport interface AlertConfig {\n  nzCloseable?: boolean;\n  nzShowIcon?: boolean;\n}\n\nexport interface AvatarConfig {\n  nzShape?: NzShapeSCType;\n  nzSize?: NzSizeLDSType | number;\n}\n\nexport interface AnchorConfig {\n  nzBounds?: number;\n  nzOffsetBottom?: number;\n  nzOffsetTop?: number;\n  nzShowInkInFixed?: boolean;\n}\n\nexport interface BackTopConfig {\n  nzVisibilityHeight?: number;\n}\n\nexport interface BadgeConfig {\n  nzColor?: number;\n  nzOverflowCount?: number;\n  nzShowZero?: number;\n}\n\nexport interface ButtonConfig {\n  nzSize?: 'large' | 'default' | 'small';\n}\n\nexport interface CodeEditorConfig {\n  assetsRoot?: string | SafeUrl;\n  defaultEditorOption?: NzSafeAny;\n  useStaticLoading?: boolean;\n\n  onLoad?(): void;\n  onFirstEditorInit?(): void;\n  onInit?(): void;\n}\n\nexport interface CardConfig {\n  nzSize?: NzSizeDSType;\n  nzHoverable?: boolean;\n  nzBordered?: boolean;\n}\n\nexport interface CarouselConfig {\n  nzAutoPlay?: boolean;\n  nzAutoPlaySpeed?: boolean;\n  nzDots?: boolean;\n  nzEffect?: 'scrollx' | 'fade' | string;\n  nzEnableSwipe?: boolean;\n  nzVertical?: boolean;\n}\n\nexport interface CascaderConfig {\n  nzSize?: string;\n}\n\nexport interface CollapseConfig {\n  nzAccordion?: boolean;\n  nzBordered?: boolean;\n}\n\nexport interface CollapsePanelConfig {\n  nzShowArrow?: boolean;\n}\n\nexport interface DatePickerConfig {\n  nzSeparator?: string;\n  nzSuffixIcon?: string | TemplateRef<NzSafeAny>;\n}\n\nexport interface DescriptionsConfig {\n  nzBorder?: boolean;\n  nzColumn?: { [key in NzBreakpointEnum]?: number } | number;\n  nzSize?: 'default' | 'middle' | 'small';\n  nzColon?: boolean;\n}\n\nexport interface DrawerConfig {\n  nzMask?: boolean;\n  nzMaskClosable?: boolean;\n  nzCloseOnNavigation?: boolean;\n}\n\nexport interface EmptyConfig {\n  nzDefaultEmptyContent?: Type<NzSafeAny> | TemplateRef<string> | string | undefined;\n}\n\nexport interface FormConfig {\n  nzNoColon?: boolean;\n  nzAutoTips?: Record<string, Record<string, string>>;\n}\n\nexport interface IconConfig {\n  nzTheme?: 'fill' | 'outline' | 'twotone';\n  nzTwotoneColor?: string;\n}\n\nexport interface MessageConfig {\n  nzAnimate?: boolean;\n  nzDuration?: number;\n  nzMaxStack?: number;\n  nzPauseOnHover?: boolean;\n  nzTop?: number | string;\n}\n\nexport interface ModalConfig {\n  nzMask?: boolean;\n  nzMaskClosable?: boolean;\n  nzCloseOnNavigation?: boolean;\n}\n\nexport interface NotificationConfig extends MessageConfig {\n  nzTop?: string | number;\n  nzBottom?: string | number;\n  nzPlacement?: 'topLeft' | 'topRight' | 'bottomLeft' | 'bottomRight';\n}\n\nexport interface PageHeaderConfig {\n  nzGhost: boolean;\n}\n\nexport interface ProgressConfig {\n  nzGapDegree?: number;\n  nzGapPosition?: 'top' | 'right' | 'bottom' | 'left';\n  nzShowInfo?: boolean;\n  nzStrokeSwitch?: number;\n  nzStrokeWidth?: number;\n  nzSize?: 'default' | 'small';\n  nzStrokeLinecap?: 'round' | 'square';\n  nzStrokeColor?: string;\n}\n\nexport interface RateConfig {\n  nzAllowClear?: boolean;\n  nzAllowHalf?: boolean;\n}\n\nexport interface SpaceConfig {\n  nzSize?: 'small' | 'middle' | 'large' | number;\n}\n\nexport interface SpinConfig {\n  nzIndicator?: TemplateRef<NzSafeAny>;\n}\n\nexport interface SwitchConfig {\n  nzSize: NzSizeDSType;\n}\n\nexport interface TableConfig {\n  nzBordered?: boolean;\n  nzSize?: NzSizeMDSType;\n  nzShowQuickJumper?: boolean;\n  nzLoadingIndicator?: TemplateRef<NzSafeAny>;\n  nzShowSizeChanger?: boolean;\n  nzSimple?: boolean;\n  nzHideOnSinglePage?: boolean;\n}\n\nexport interface TabsConfig {\n  nzAnimated?:\n    | boolean\n    | {\n        inkBar: boolean;\n        tabPane: boolean;\n      };\n  nzSize?: NzSizeLDSType;\n  nzType?: 'line' | 'card';\n  nzTabBarGutter?: number;\n  nzShowPagination?: boolean;\n}\n\nexport interface TimePickerConfig {\n  nzAllowEmpty?: boolean;\n  nzClearText?: string;\n  nzFormat?: string;\n  nzHourStep?: number;\n  nzMinuteStep?: number;\n  nzSecondStep?: number;\n  nzPopupClassName?: string;\n  nzUse12Hours?: string;\n  nzSuffixIcon?: string | TemplateRef<NzSafeAny>;\n}\n\nexport interface TreeConfig {\n  nzBlockNode?: boolean;\n  nzShowIcon?: boolean;\n  nzHideUnMatched?: boolean;\n}\n\nexport interface TreeSelectConfig {\n  nzShowIcon?: string;\n  nzShowLine?: boolean;\n  nzDropdownMatchSelectWidth?: boolean;\n  nzHideUnMatched?: boolean;\n  nzSize?: 'large' | 'small' | 'default';\n}\n\nexport interface TypographyConfig {\n  nzEllipsisRows?: number;\n}\n\nexport type NzConfigKey = keyof NzConfig;\n\n/**\n * User should provide an object implements this interface to set global configurations.\n */\nexport const NZ_CONFIG = new InjectionToken<NzConfig>('nz-config');\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { Inject, Injectable, Optional } from '@angular/core';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { Observable, Subject } from 'rxjs';\n\nimport { filter, mapTo } from 'rxjs/operators';\n\nimport { NZ_CONFIG, NzConfig, NzConfigKey } from './config';\n\nconst isDefined = function (value?: NzSafeAny): boolean {\n  return value !== undefined;\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NzConfigService {\n  private configUpdated$ = new Subject<keyof NzConfig>();\n\n  /** Global config holding property. */\n  private config: NzConfig;\n\n  constructor(@Optional() @Inject(NZ_CONFIG) defaultConfig?: NzConfig) {\n    this.config = defaultConfig || {};\n  }\n\n  getConfigForComponent<T extends NzConfigKey>(componentName: T): NzConfig[T] {\n    return this.config[componentName];\n  }\n\n  getConfigChangeEventForComponent(componentName: NzConfigKey): Observable<void> {\n    return this.configUpdated$.pipe(\n      filter(n => n === componentName),\n      mapTo(undefined)\n    );\n  }\n\n  set<T extends NzConfigKey>(componentName: T, value: NzConfig[T]): void {\n    this.config[componentName] = { ...this.config[componentName], ...value };\n    this.configUpdated$.next(componentName);\n  }\n}\n\n// tslint:disable:no-invalid-this\n\n/**\n * This decorator is used to decorate properties. If a property is decorated, it would try to load default value from\n * config.\n */\n// tslint:disable-next-line:typedef\nexport function WithConfig<T>(componentName: NzConfigKey) {\n  return function ConfigDecorator(target: NzSafeAny, propName: NzSafeAny, originalDescriptor?: TypedPropertyDescriptor<T>): NzSafeAny {\n    const privatePropName = `$$__assignedValue__${propName}`;\n\n    Object.defineProperty(target, privatePropName, {\n      configurable: true,\n      writable: true,\n      enumerable: false\n    });\n\n    return {\n      get(): T | undefined {\n        const originalValue = originalDescriptor?.get ? originalDescriptor.get.bind(this)() : this[privatePropName];\n        const assignedByUser = ((this.assignmentCount || {})[propName] || 0) > 1;\n\n        if (assignedByUser && isDefined(originalValue)) {\n          return originalValue;\n        }\n\n        const componentConfig = this.nzConfigService.getConfigForComponent(componentName) || {};\n        const configValue = componentConfig[propName];\n        const ret = isDefined(configValue) ? configValue : originalValue;\n\n        return ret;\n      },\n      set(value?: T): void {\n        // If the value is assigned, we consider the newly assigned value as 'assigned by user'.\n        this.assignmentCount = this.assignmentCount || {};\n        this.assignmentCount[propName] = (this.assignmentCount[propName] || 0) + 1;\n\n        if (originalDescriptor?.set) {\n          originalDescriptor.set.bind(this)(value);\n        } else {\n          this[privatePropName] = value;\n        }\n      },\n      configurable: true,\n      enumerable: true\n    };\n  };\n}\n"]}