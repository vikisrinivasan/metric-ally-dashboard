{"version":3,"file":"ng-zorro-antd-message.js","sources":["ng-zorro-antd/message/base.ts","ng-zorro-antd/message/message-container.component.ts","ng-zorro-antd/message/message.service.module.ts","ng-zorro-antd/message/message.service.ts","ng-zorro-antd/message/message.component.ts","ng-zorro-antd/message/message.module.ts","ng-zorro-antd/message/typings.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAcI,aAAa,GAAG,CAAC;AACrB;AACG;AAAa;AAAI,MAAE,WAAW;AACjC;AAAQ;AAAqC;AACpB;AAEtB;AAAQ,IAAT,YAAsB,kBAAsC,EAAY,OAAgB,EAAU,QAAkB;AAAI,QAAlG,uBAAkB,GAAlB,kBAAkB,CAAoB;AAAC,QAAW,YAAO,GAAP,OAAO,CAAS;AAAC,QAAS,aAAQ,GAAR,QAAQ,CAAU;AAAC,KAAG;AAC1H;AACO;AAAsB;AACX;AAClB,IAFE,MAAM,CAAC,EAAW;AAAI,QACpB,IAAI,IAAI,CAAC,SAAS,EAAE;AACxB,YAAM,IAAI,EAAE,EAAE;AACd,gBAAQ,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;AAClC,aAAO;AAAC,iBAAK;AACb,gBAAQ,IAAI,CAAC,SAAS,CAAC,SAAS,EAAE,CAAC;AACnC,aAAO;AACP,SAAK;AACL,KAAG;AACH;AACO;AAAkB;AACnB;AAAQ,IADF,aAAa;AAAK,QAC1B,OAAO,GAAG,IAAI,CAAC,eAAe,IAAI,aAAa,EAAE,EAAE,CAAC;AACxD,KAAG;AACH;AACO;AAAkB;AAAmB;AAAuB;AAAmB;AACjF,IADO,aAAa,CAAmC,IAAsB;AAAI;AAChE,YAAd,iBAAiB,GAAG,IAAI,CAAC,kBAAkB,CAAC,mBAAmB,CAAC,IAAI,CAAC,eAAe,CAAC;AAC7F,QAAI,IAAI,iBAAiB,EAAE;AAC3B,YAAM,0BAAO,iBAAiB,GAAM;AACpC,SAAK;AACL;AACwB,cAAd,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC;AAC3C,YAAM,WAAW,EAAE,KAAK;AACxB,YAAM,cAAc,EAAE,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,IAAI,EAAE;AAC1D,YAAM,gBAAgB,EAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC,MAAM,EAAE;AACxD,SAAK,CAAC;AACN;AAAyB,cAAf,eAAe,GAAG,IAAI,eAAe,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,QAAQ,CAAC;AAC1E;AAAyB,cAAf,YAAY,GAAG,UAAU,CAAC,MAAM,CAAC,eAAe,CAAC;AAC3D;AAAyB,cAAf,WAAW,GAAG,UAAU,CAAC,cAAc;AACjD,QAAI,WAAW,CAAC,KAAK,CAAC,MAAM,GAAG,MAAM,CAAC;AACtC,QACI,IAAI,CAAC,iBAAiB,EAAE;AAC5B,YAAM,IAAI,CAAC,SAAS,GAAG,iBAAiB,GAAG,YAAY,CAAC,QAAQ,CAAC;AACjE,YAAM,IAAI,CAAC,kBAAkB,CAAC,wBAAwB,CAAC,IAAI,CAAC,eAAe,EAAE,iBAAiB,CAAC,CAAC;AAChG,SAAK;AACL,QACI,0BAAO,iBAAiB,GAAM;AAClC,KAAG;AACH,CAAC;AACD;AACY;AAAQ;AAAiB;AAAkB;AAAQ,IA5C7D,sCAA2C;AAC7C;AAAQ;AAAiB;AAAkB;AAEzC,IAFA,gCAA6C;AAC/C;AACO;AAAiB;AAAkB;AAAQ,IAApC,yCAAgD;AAAC;AAAQ;AAAiB;AAAkB;AAAQ,IAAlD,8BAA0B;AAAC;AAAQ;AAAiB;AAE5G;AAAQ,IAF4E,+BAA0B;AAAC;AAAE;AAExH;AAAa;AAAI,MAuCI,sBAAsB;AAAG;AAAQ;AACtD;AAAkC;AAC5B,IAIL,YAAsB,GAAsB,EAAY,eAAgC;AAC1F,QADwB,QAAG,GAAH,GAAG,CAAmB;AAAC,QAAW,oBAAe,GAAf,eAAe,CAAiB;AAAC,QAJzF,cAAS,GAAmC,EAAE,CAAC;AACjD,QACqB,aAAQ,GAAG,IAAI,OAAO,EAAQ,CAAC;AACpD,QAEI,IAAI,CAAC,YAAY,EAAE,CAAC;AACxB,KAAG;AACH;AACO;AACF;AAAQ,IADX,QAAQ;AAAK,QACX,IAAI,CAAC,qBAAqB,EAAE,CAAC;AACjC,KAAG;AACH;AACO;AACL;AAAQ,IADR,WAAW;AAAK,QACd,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;AACzB,QAAI,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC;AAC7B,KAAG;AACH;AACO;AAAuB;AAAmB;AACjD,IADE,MAAM,CAAC,IAAmB;AAAI;AAChC,cAAU,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC;AACxC,QACI,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,IAAI,mBAAA,IAAI,CAAC,MAAM,GAAE,UAAU,EAAE;AAC1D,YAAM,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;AAC/C,SAAK;AACL,QACI,IAAI,CAAC,SAAS,GAAG,CAAC,GAAG,IAAI,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC;AACnD,QACI,IAAI,CAAC,cAAc,EAAE,CAAC;AAC1B,QACI,OAAO,QAAQ,CAAC;AACpB,KAAG;AACH;AACO;AAAqB;AAC5B;AAAmB;AAAQ,IADzB,MAAM,CAAC,EAAU,EAAE,aAAsB,KAAK;AAAI,QAChD,IAAI,CAAC,SAAS,CAAC,IAAI;AAAM;AAChB;AACX;AAAuB;AAAY,QAFb,CAAC,QAAQ,EAAE,KAAK;AACxC,YAAM,IAAI,QAAQ,CAAC,SAAS,KAAK,EAAE,EAAE;AACrC,gBAAQ,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;AACxC,gBAAQ,IAAI,CAAC,SAAS,GAAG,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC;AAC7C,gBAAQ,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,UAAU,CAAC,CAAC;AAC5C,gBAAQ,IAAI,CAAC,cAAc,EAAE,CAAC;AAC9B,gBAAQ,OAAO,IAAI,CAAC;AACpB,aAAO;AACP,YAAM,OAAO,KAAK,CAAC;AACnB,SAAK,EAAC,CAAC;AACP,KAAG;AACH;AACO;AACH;AAAQ,IADV,SAAS;AAAK,QACZ,IAAI,CAAC,SAAS,CAAC,OAAO;AAAM;AAAwB;AACnC;AAEd,QAHoB,CAAC,IAAI,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,KAAK,CAAC,EAAC,CAAC;AACzD,QAAI,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;AACxB,QACI,IAAI,CAAC,cAAc,EAAE,CAAC;AAC1B,KAAG;AACH;AACO;AAAkB;AAA2B;AAAmB;AACjE,IADM,QAAQ,CAAC,QAAuB;AAAI,QAC5C,QAAQ,CAAC,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;AAC3D,QAAI,QAAQ,CAAC,OAAO,GAAG,IAAI,OAAO,EAAW,CAAC;AAC9C,QAAI,0BAAO,QAAQ,GAA4B;AAC/C,KAAG;AACH;AACO;AAAkB;AAA2B;AAA6B;AAClE;AAAQ,IADX,QAAQ,CAAC,QAAiC,EAAE,UAAmB;AAAI,QAC3E,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;AACtC,QAAI,QAAQ,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC;AAChC,KAAG;AACH;AACO;AAAkB;AAClB;AAAQ,IADH,cAAc;AAAK,QAC3B,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC;AAC7B,KAAG;AACH;AACO;AAAkB;AAEjB;AAAmB;AAAQ,IAEvB,YAAY,CAAC,OAA8B;AAAI,cACjD,EAAE,UAAU,EAAE,SAAS,EAAE,cAAc,EAAE,sBAAG,IAAI,CAAC,MAAM,EAAC;AAClE,QAAI,uBAAS,UAAU,EAAE,SAAS,EAAE,cAAc,IAAK,OAAO,EAAG;AACjE,KAAG;AACH;;;AAAC;AACD;AACY;AAAqB,IA7E/B,wCAAiC;AACnC;AAAqB,IAAnB,2CAA+C;AACjD;AACO;AAAiB;AAAkB;AAAQ,IAAhD,0CAAkD;AACpD;AACO;AAAiB;AAAkB;AAAQ,IAApC,qCAAgC;AAAC;AAAQ;AAAiB;AAAkB;AACtF,IAD4C,iDAA0C;AAAC;AACtF;AAAiB;AAGZ;AACF;AAAQ,IAyDd,gEAAwC;AAC1C;AACO;AAAiB;AAAkB;AAElC;AAAQ,IAFd,yEAAiD;AACnD;AACC;AAAI;AAAa;AAAI,MAMA,aAAa;AAAG;AAAQ;AAC7C;AAAQ,IAWP,YAAsB,GAAsB;AAAI,QAA1B,QAAG,GAAH,GAAG,CAAmB;AAAC,QARpC,cAAS,GAAG,IAAI,YAAY,EAAuC,CAAC;AAC/E,QAGY,eAAU,GAAkB,IAAI,CAAC;AAC7C,KAGkD;AAClD;AACO;AACF;AAAQ,IADX,QAAQ;AAAK,QACX,IAAI,CAAC,OAAO,sBAAG,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAkC,CAAC;AAC3E,QACI,IAAI,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE;AAChC,YAAM,IAAI,CAAC,QAAQ,CAAC,KAAK,GAAG,OAAO,CAAC;AACpC,SAAK;AACL,QACI,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,GAAG,CAAC,CAAC;AACjD,QACI,IAAI,IAAI,CAAC,SAAS,EAAE;AACxB,YAAM,IAAI,CAAC,SAAS,EAAE,CAAC;AACvB,YAAM,IAAI,CAAC,iBAAiB,EAAE,CAAC;AAC/B,SAAK;AACL,KAAG;AACH;AACO;AACL;AAAQ,IADR,WAAW;AAAK,QACd,IAAI,IAAI,CAAC,SAAS,EAAE;AACxB,YAAM,IAAI,CAAC,iBAAiB,EAAE,CAAC;AAC/B,SAAK;AACL,KAAG;AACH;AACO;AACD;AAAQ,IADZ,OAAO;AAAK,QACV,IAAI,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,OAAO,CAAC,cAAc,EAAE;AACvD,YAAM,IAAI,CAAC,iBAAiB,EAAE,CAAC;AAC/B,YAAM,IAAI,CAAC,SAAS,EAAE,CAAC;AACvB,SAAK;AACL,KAAG;AACH;AACO;AACD;AAAQ,IADZ,OAAO;AAAK,QACV,IAAI,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,OAAO,CAAC,cAAc,EAAE;AACvD,YAAM,IAAI,CAAC,iBAAiB,EAAE,CAAC;AAC/B,SAAK;AACL,KAAG;AACH;AACO;AAAkB;AAA8B;AACtC;AAAQ,IADb,OAAO,CAAC,aAAsB,KAAK;AAAI,QAC/C,IAAI,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE;AAChC,YAAM,IAAI,CAAC,QAAQ,CAAC,KAAK,GAAG,OAAO,CAAC;AACpC,YAAM,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC;AAC/B,YAAM,UAAU;AAAM;AACE;AAAgB,YADvB;AACjB,gBAAQ,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,EAAE,EAAE,IAAI,CAAC,QAAQ,CAAC,SAAS,EAAE,UAAU,EAAE,UAAU,EAAE,CAAC,CAAC;AACrF,aAAO,GAAE,GAAG,CAAC,CAAC;AACd,SAAK;AAAC,aAAK;AACX,YAAM,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,EAAE,EAAE,IAAI,CAAC,QAAQ,CAAC,SAAS,EAAE,UAAU,EAAE,UAAU,EAAE,CAAC,CAAC;AACnF,SAAK;AACL,KAAG;AACH;AACO;AAAgB;AACX;AAAQ,IADV,SAAS;AAAK,QACpB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC;AAC5C,QAAI,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AACvC,KAAG;AACH;AACO;AAAgB;AACX;AAAQ,IADV,SAAS;AAAK,QACpB,IAAI,IAAI,CAAC,SAAS,EAAE;AACxB,YAAM,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,GAAG,EAAE,sBAAG,IAAI,CAAC,gBAAgB,EAAC,CAAC;AAC3D,SAAK;AACL,KAAG;AACH;AACO;AAAgB;AACnB;AAAQ,IADF,iBAAiB;AAAK,QAC5B,IAAI,IAAI,CAAC,QAAQ,GAAG,CAAC,EAAE;AAC3B,YAAM,IAAI,CAAC,iBAAiB,EAAE,CAAC;AAC/B,YAAM,IAAI,CAAC,UAAU,GAAG,UAAU;AAAM;AAA2B;AACzD,YADyB,MAAM,IAAI,CAAC,OAAO,EAAE,GAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;AACxE,YAAM,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AACzC,SAAK;AAAC,aAAK;AACX,YAAM,IAAI,CAAC,OAAO,EAAE,CAAC;AACrB,SAAK;AACL,KAAG;AACH;AACO;AAAgB;AACnB;AAAQ,IADF,iBAAiB;AAAK,QAC5B,IAAI,IAAI,CAAC,UAAU,KAAK,IAAI,EAAE;AAClC,YAAM,YAAY,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;AACpC,YAAM,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;AAC7B,SAAK;AACL,KAAG;AACH;;;AAAC;AACD;AAAa;AAAqB,IAvFhC,iCAAmC;AACrC;AAEE,IAFA,8BAAe;AACjB;AACoB,IAAlB,kCAA6E;AAC/E;AACO;AAAiB;AAAkB;AAAQ,IAAhD,gCAAmD;AACrD;AAAQ;AAAiB;AACf;AAAQ,IADhB,kCAA8B;AAChC;AAAQ;AAAiB;AAAkB;AACtC,IADH,mCAA2C;AAC7C;AAAQ;AAAiB;AACrB;AAAQ,IADV,yCAAoC;AACtC;AAAQ;AAAiB;AAEd;AAAQ,IAFjB,iCAA4B;AAC9B;AACO;AAAiB;AAAkB;AAAQ,IAApC,4BAAgC;AAAC;AAAE;AAAC;AAEhD;AACa;AAAkD;AAMrB;AAAI;AAElC,MCpJR,wBAAwB,GAAG,SAAS;AAC1C;AACgB,MAAV,yBAAyB,GAA4B;AAC3D,IAAE,SAAS,EAAE,IAAI;AACjB,IAAE,UAAU,EAAE,IAAI;AAClB,IAAE,UAAU,EAAE,CAAC;AACf,IAAE,cAAc,EAAE,IAAI;AACtB,IAAE,KAAK,EAAE,EAAE;AACX,CAAC;AACD,MAaa,2BAA4B,SAAQ,sBAAsB;AACvE;AAAQ;AAAsB;AAEV;AAAQ,IAG1B,YAAY,GAAsB,EAAE,eAAgC;AACtE,QAAI,KAAK,CAAC,GAAG,EAAE,eAAe,CAAC,CAAC;AAChC,QAPW,aAAQ,GAAG,IAAI,OAAO,EAAQ,CAAC;AAC1C,QACE,cAAS,GAAmC,EAAE,CAAC;AACjD,KAIG;AACH;AACO;AAAkB;AACzB;AAAQ,IADI,qBAAqB;AAAK,QAClC,IAAI,CAAC,eAAe;AACxB,aAAO,gCAAgC,CAAC,wBAAwB,CAAC;AACjE,aAAO,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;AACrC,aAAO,SAAS;AAAM;AACtB;AAEO,QAHU,MAAM,IAAI,CAAC,YAAY,EAAE,EAAC,CAAC;AAC5C,KAAG;AACH;AACO;AAAkB;AAChB;AAAQ,IADL,YAAY;AAAK,QACzB,IAAI,CAAC,MAAM,iDACN,yBAAyB,GACzB,IAAI,CAAC,MAAM,GACX,IAAI,CAAC,eAAe,CAAC,qBAAqB,CAAC,wBAAwB,CAAC,CACxE,CAAC;AACN,QACI,IAAI,CAAC,GAAG,GAAG,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;AAC7C,QAAI,IAAI,CAAC,GAAG,CAAC,YAAY,EAAE,CAAC;AAC5B,KAAG;AACH;uDAvCC,SAAS,SAAC,kBACT,eAAe,EAAE,uBAAuB,CAAC,MAAM,kBAC/C,aAAa,EAAE,iBAAiB,CAAC,IAAI,kBACrC,QAAQ,EAAE;MAAsB,kBAChC,QAAQ,EAAE,oBAAoB,kBAC9B,mBAAmB,EAAE,KAAK,kBAC1B,QAAQ,EAAE,4MAIT,cACF;;;;;;;;2HACG;AAAC;AAAmB;AACrB,YAhC+B,iBAAiB;AAAI,YAC/B,eAAe;AAAG;;;;;;;;;;;;;;;oHAAE;AAAC;AAAa;AACvD,IA8BD,+CAAwC;AAC1C;AACoB,IAAlB,gDAA+C;AACjD;AAAqB,IAAnB,0CAAoB;AACtB;AACC;AAAC;AAAI;AAAkC;AAC7B;AAK2B;AAAI,MCxC7B,sBAAsB;AAAG;kDADrC,QAAQ;;;;0BACP;AAAC;AAAC;AAAI;AACL;AAAsC;AAAsI;AAAI,MCQtK,gBAAiB,SAAQ,WAAW;AACjD;AAAQ;AAAqC;AAC3B;AAEhB;AAAQ,IAAR,YAAY,kBAAsC,EAAE,OAAgB,EAAE,QAAkB;AAC1F,QAAI,KAAK,CAAC,kBAAkB,EAAE,OAAO,EAAE,QAAQ,CAAC,CAAC;AACjD,QAJY,oBAAe,GAAG,UAAU,CAAC;AACzC,KAGG;AACH;AACO;AAA0B;AAA2B;AAAmB;AAAQ,IAArF,OAAO,CAAC,OAAmC,EAAE,OAA8B;AAAI,QAC7E,OAAO,IAAI,CAAC,cAAc,CAAC,EAAE,IAAI,EAAE,SAAS,EAAE,OAAO,EAAE,EAAE,OAAO,CAAC,CAAC;AACtE,KAAG;AACH;AACO;AAA0B;AAA2B;AAAmB;AAAQ,IAArF,KAAK,CAAC,OAAmC,EAAE,OAA8B;AAAI,QAC3E,OAAO,IAAI,CAAC,cAAc,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,EAAE,OAAO,CAAC,CAAC;AACpE,KAAG;AACH;AACO;AAA0B;AAA2B;AAAmB;AAAQ,IAArF,IAAI,CAAC,OAAmC,EAAE,OAA8B;AAAI,QAC1E,OAAO,IAAI,CAAC,cAAc,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,OAAO,EAAE,EAAE,OAAO,CAAC,CAAC;AACnE,KAAG;AACH;AACO;AAA0B;AAA2B;AAAmB;AAAQ,IAArF,OAAO,CAAC,OAAmC,EAAE,OAA8B;AAAI,QAC7E,OAAO,IAAI,CAAC,cAAc,CAAC,EAAE,IAAI,EAAE,SAAS,EAAE,OAAO,EAAE,EAAE,OAAO,CAAC,CAAC;AACtE,KAAG;AACH;AACO;AAA0B;AAA2B;AAAmB;AAAQ,IAArF,OAAO,CAAC,OAAmC,EAAE,OAA8B;AAAI,QAC7E,OAAO,IAAI,CAAC,cAAc,CAAC,EAAE,IAAI,EAAE,SAAS,EAAE,OAAO,EAAE,EAAE,OAAO,CAAC,CAAC;AACtE,KAAG;AACH;AACO;AACa;AAA0B;AAC9C;AAAmB;AAAQ,IAFzB,MAAM,CACJ,IAAmE,EACnE,OAAmC,EACnC,OAA8B;AAC/B,QACC,OAAO,IAAI,CAAC,cAAc,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,EAAE,OAAO,CAAC,CAAC;AAC3D,KAAG;AACH;AACO;AAAgB;AAA0B;AAA2B;AAAmB;AACzF,IADI,cAAc,CAAC,OAAsB,EAAE,OAA8B;AAAI,QAC/E,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,aAAa,CAAC,2BAA2B,CAAC,CAAC;AACrE,QACI,OAAO,IAAI,CAAC,SAAS,CAAC,MAAM,iCACvB,OAAO,GACP;AACT,YAAQ,SAAS,EAAE,IAAI,IAAI,EAAE;AAC7B,YAAQ,SAAS,EAAE,IAAI,CAAC,aAAa,EAAE;AACvC,YAAQ,OAAO;AACf,SAAO,EACD,CAAC;AACP,KAAG;AACH;4CAnDC,UAAU,SAAC,kBACV,UAAU,EAAE,sBAAsB,cACnC,mFACI;AAAC;AAAmB;AACV,YAXN,kBAAkB;AAAI,YAFtB,OAAO;AAAI,YACC,QAAQ;AAAG;AAAG;;;;;;wIAK2B;AAAC;AACtD;AAAQ;AAAiB;AAAkB;AAAQ,IAM1D,qCAAkD;AACpD;AAAQ;AAAiB;AAEzB;AAAQ,IAFN,2CAAuC;AACzC;AACC;AAAC;AAAI;AAAkC;AAAwC;AAIf;AAAI,MCsBxD,kBAAmB,SAAQ,aAAa;AAAG;AAAQ;AAC/D;AAAQ,IAGP,YAAY,GAAsB;AACpC,QAAI,KAAK,CAAC,GAAG,CAAC,CAAC;AACf,QAJqB,cAAS,GAAG,IAAI,YAAY,EAAuC,CAAC;AACzF,KAGG;AACH;8CAjCC,SAAS,SAAC,kBACT,eAAe,EAAE,uBAAuB,CAAC,MAAM,kBAC/C;AAAa,EAAE,iBAAiB,CAAC,IAAI,kBACrC,QAAQ,EAAE,YAAY,kBACtB,QAAQ,EAAE,WAAW,kBACrB,mBAAmB,EAAE,KAAK,kBAC1B,UAAU,EAAE,CAAC,YAAY,CAAC,kBAC1B,QAAQ,EAAE;wCAiBT;UACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;0NACG;AAAC;AAAmB;AAA4C,YAxClE,iBAAiB;AAClB;AAAG;AAGA,uBAqCD,KAAK;AAAK,wBACV,MAAM;AAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;oBAAE;AAAC;AAAa;AAAqB,IADhD,sCAA4C;AAC9C;AAAqB,IAAnB,uCAAuF;AACzF;AACC;AAAC;AAAI;AACN;AAGe;AAAsI;AAAI,MCpC5I,eAAe;AAAG;2CAL9B,QAAQ,SAAC;GACR,OAAO,EAAE,CAAC,YAAY,EAAE,aAAa,EAAE,YAAY,EAAE,cAAc,EAAE,sBAAsB,CAAC,kBAC5F,YAAY,EAAE,CAAC,2BAA2B,EAAE,kBAAkB,CAAC,kBAC/D,eAAe,EAAE,CAAC;IAA2B,CAAC,cAC/C;;;;;;;;0BACI;AAAC;AAAC;AAAI;AACE;AAA8B;AAAsI;AAAI;AAAI;AAA2E;AAA8F;AAAI;AAAI;AAAW;AAAI,mCCNxX;AACD;AACY;AACF,IANR,0CAAoB;AACtB;AACQ,IADN,yCAAoB;AACtB;AAGA,IAHE,8CAAyB;AAC3B;AACA;AACG;AAAW;AAAI,4BASjB;AACD;AACY;AAA+B,IAVzC,6BAA8B;AAChC;AAA+B,IAA7B,gCAAqC;AACvC;AACS,IADP,kCAAmB;AACrB;AACW,IADT,kCAAiB;AACnB;AAA+B,IAA7B,gCAA+B;AACjC;AAEC,IAFC,8BAA0B;AAC5B;AAEA,IADE,gCAA2B;AAC7B;AACA;AACA;AAAI;AAAkC;AAAiC;AAM3B;AAC5C;AAAC;AAAI;AAAkC;AAA4C;AAAsI;AAAI;AAAC;AAA2K","sourcesContent":["/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { ComponentType, Overlay } from '@angular/cdk/overlay';\nimport { ComponentPortal } from '@angular/cdk/portal';\nimport { ChangeDetectorRef, EventEmitter, Injector, OnDestroy, OnInit } from '@angular/core';\nimport { MessageConfig, NzConfigService } from 'ng-zorro-antd/core/config';\nimport { NzSingletonService } from 'ng-zorro-antd/core/services';\nimport { Subject } from 'rxjs';\n\nimport { NzMessageData, NzMessageDataOptions } from './typings';\n\nlet globalCounter = 0;\n\nexport abstract class NzMNService {\n  protected abstract componentPrefix: string;\n  protected container?: NzMNContainerComponent;\n\n  constructor(protected nzSingletonService: NzSingletonService, protected overlay: Overlay, private injector: Injector) {}\n\n  remove(id?: string): void {\n    if (this.container) {\n      if (id) {\n        this.container.remove(id);\n      } else {\n        this.container.removeAll();\n      }\n    }\n  }\n\n  protected getInstanceId(): string {\n    return `${this.componentPrefix}-${globalCounter++}`;\n  }\n\n  protected withContainer<T extends NzMNContainerComponent>(ctor: ComponentType<T>): T {\n    let containerInstance = this.nzSingletonService.getSingletonWithKey(this.componentPrefix);\n    if (containerInstance) {\n      return containerInstance as T;\n    }\n\n    const overlayRef = this.overlay.create({\n      hasBackdrop: false,\n      scrollStrategy: this.overlay.scrollStrategies.noop(),\n      positionStrategy: this.overlay.position().global()\n    });\n    const componentPortal = new ComponentPortal(ctor, null, this.injector);\n    const componentRef = overlayRef.attach(componentPortal);\n    const overlayPane = overlayRef.overlayElement;\n    overlayPane.style.zIndex = '1010';\n\n    if (!containerInstance) {\n      this.container = containerInstance = componentRef.instance;\n      this.nzSingletonService.registerSingletonWithKey(this.componentPrefix, containerInstance);\n    }\n\n    return containerInstance as T;\n  }\n}\n\nexport abstract class NzMNContainerComponent implements OnInit, OnDestroy {\n  config?: Required<MessageConfig>;\n  instances: Array<Required<NzMessageData>> = [];\n\n  protected readonly destroy$ = new Subject<void>();\n\n  constructor(protected cdr: ChangeDetectorRef, protected nzConfigService: NzConfigService) {\n    this.updateConfig();\n  }\n\n  ngOnInit(): void {\n    this.subscribeConfigChange();\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  create(data: NzMessageData): Required<NzMessageData> {\n    const instance = this.onCreate(data);\n\n    if (this.instances.length >= this.config!.nzMaxStack) {\n      this.instances = this.instances.slice(1);\n    }\n\n    this.instances = [...this.instances, instance];\n\n    this.readyInstances();\n\n    return instance;\n  }\n\n  remove(id: string, userAction: boolean = false): void {\n    this.instances.some((instance, index) => {\n      if (instance.messageId === id) {\n        this.instances.splice(index, 1);\n        this.instances = [...this.instances];\n        this.onRemove(instance, userAction);\n        this.readyInstances();\n        return true;\n      }\n      return false;\n    });\n  }\n\n  removeAll(): void {\n    this.instances.forEach(i => this.onRemove(i, false));\n    this.instances = [];\n\n    this.readyInstances();\n  }\n\n  protected onCreate(instance: NzMessageData): Required<NzMessageData> {\n    instance.options = this.mergeOptions(instance.options);\n    instance.onClose = new Subject<boolean>();\n    return instance as Required<NzMessageData>;\n  }\n\n  protected onRemove(instance: Required<NzMessageData>, userAction: boolean): void {\n    instance.onClose.next(userAction);\n    instance.onClose.complete();\n  }\n\n  protected readyInstances(): void {\n    this.cdr.detectChanges();\n  }\n\n  protected abstract updateConfig(): void;\n\n  protected abstract subscribeConfigChange(): void;\n\n  protected mergeOptions(options?: NzMessageDataOptions): NzMessageDataOptions {\n    const { nzDuration, nzAnimate, nzPauseOnHover } = this.config!;\n    return { nzDuration, nzAnimate, nzPauseOnHover, ...options };\n  }\n}\n\nexport abstract class NzMNComponent implements OnInit, OnDestroy {\n  instance!: Required<NzMessageData>;\n  index?: number;\n\n  readonly destroyed = new EventEmitter<{ id: string; userAction: boolean }>();\n\n  protected options!: Required<NzMessageDataOptions>;\n  protected autoClose?: boolean;\n  protected eraseTimer: number | null = null;\n  protected eraseTimingStart?: number;\n  protected eraseTTL!: number;\n\n  constructor(protected cdr: ChangeDetectorRef) {}\n\n  ngOnInit(): void {\n    this.options = this.instance.options as Required<NzMessageDataOptions>;\n\n    if (this.options.nzAnimate) {\n      this.instance.state = 'enter';\n    }\n\n    this.autoClose = this.options.nzDuration > 0;\n\n    if (this.autoClose) {\n      this.initErase();\n      this.startEraseTimeout();\n    }\n  }\n\n  ngOnDestroy(): void {\n    if (this.autoClose) {\n      this.clearEraseTimeout();\n    }\n  }\n\n  onEnter(): void {\n    if (this.autoClose && this.options.nzPauseOnHover) {\n      this.clearEraseTimeout();\n      this.updateTTL();\n    }\n  }\n\n  onLeave(): void {\n    if (this.autoClose && this.options.nzPauseOnHover) {\n      this.startEraseTimeout();\n    }\n  }\n\n  protected destroy(userAction: boolean = false): void {\n    if (this.options.nzAnimate) {\n      this.instance.state = 'leave';\n      this.cdr.detectChanges();\n      setTimeout(() => {\n        this.destroyed.next({ id: this.instance.messageId, userAction: userAction });\n      }, 200);\n    } else {\n      this.destroyed.next({ id: this.instance.messageId, userAction: userAction });\n    }\n  }\n\n  private initErase(): void {\n    this.eraseTTL = this.options.nzDuration;\n    this.eraseTimingStart = Date.now();\n  }\n\n  private updateTTL(): void {\n    if (this.autoClose) {\n      this.eraseTTL -= Date.now() - this.eraseTimingStart!;\n    }\n  }\n\n  private startEraseTimeout(): void {\n    if (this.eraseTTL > 0) {\n      this.clearEraseTimeout();\n      this.eraseTimer = setTimeout(() => this.destroy(), this.eraseTTL);\n      this.eraseTimingStart = Date.now();\n    } else {\n      this.destroy();\n    }\n  }\n\n  private clearEraseTimeout(): void {\n    if (this.eraseTimer !== null) {\n      clearTimeout(this.eraseTimer);\n      this.eraseTimer = null;\n    }\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, ViewEncapsulation } from '@angular/core';\nimport { MessageConfig, NzConfigService } from 'ng-zorro-antd/core/config';\nimport { toCssPixel } from 'ng-zorro-antd/core/util';\nimport { Subject } from 'rxjs';\n\nimport { takeUntil } from 'rxjs/operators';\nimport { NzMNContainerComponent } from './base';\nimport { NzMessageData } from './typings';\n\nconst NZ_CONFIG_COMPONENT_NAME = 'message';\n\nconst NZ_MESSAGE_DEFAULT_CONFIG: Required<MessageConfig> = {\n  nzAnimate: true,\n  nzDuration: 3000,\n  nzMaxStack: 7,\n  nzPauseOnHover: true,\n  nzTop: 24\n};\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  selector: 'nz-message-container',\n  exportAs: 'nzMessageContainer',\n  preserveWhitespaces: false,\n  template: `\n    <div class=\"ant-message\" [style.top]=\"top\">\n      <nz-message *ngFor=\"let instance of instances\" [instance]=\"instance\" (destroyed)=\"remove($event.id, $event.userAction)\"></nz-message>\n    </div>\n  `\n})\nexport class NzMessageContainerComponent extends NzMNContainerComponent {\n  readonly destroy$ = new Subject<void>();\n\n  instances: Array<Required<NzMessageData>> = [];\n  top?: string | null;\n\n  constructor(cdr: ChangeDetectorRef, nzConfigService: NzConfigService) {\n    super(cdr, nzConfigService);\n  }\n\n  protected subscribeConfigChange(): void {\n    this.nzConfigService\n      .getConfigChangeEventForComponent(NZ_CONFIG_COMPONENT_NAME)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(() => this.updateConfig());\n  }\n\n  protected updateConfig(): void {\n    this.config = {\n      ...NZ_MESSAGE_DEFAULT_CONFIG,\n      ...this.config,\n      ...this.nzConfigService.getConfigForComponent(NZ_CONFIG_COMPONENT_NAME)\n    };\n\n    this.top = toCssPixel(this.config.nzTop);\n    this.cdr.markForCheck();\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { NgModule } from '@angular/core';\n\n@NgModule()\nexport class NzMessageServiceModule {}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { Overlay } from '@angular/cdk/overlay';\nimport { Injectable, Injector, TemplateRef } from '@angular/core';\nimport { NzSingletonService } from 'ng-zorro-antd/core/services';\n\nimport { NzMNService } from './base';\nimport { NzMessageContainerComponent } from './message-container.component';\nimport { NzMessageServiceModule } from './message.service.module';\nimport { NzMessageData, NzMessageDataOptions, NzMessageRef } from './typings';\n\n@Injectable({\n  providedIn: NzMessageServiceModule\n})\nexport class NzMessageService extends NzMNService {\n  protected container?: NzMessageContainerComponent;\n  protected componentPrefix = 'message-';\n\n  constructor(nzSingletonService: NzSingletonService, overlay: Overlay, injector: Injector) {\n    super(nzSingletonService, overlay, injector);\n  }\n\n  success(content: string | TemplateRef<void>, options?: NzMessageDataOptions): NzMessageRef {\n    return this.createInstance({ type: 'success', content }, options);\n  }\n\n  error(content: string | TemplateRef<void>, options?: NzMessageDataOptions): NzMessageRef {\n    return this.createInstance({ type: 'error', content }, options);\n  }\n\n  info(content: string | TemplateRef<void>, options?: NzMessageDataOptions): NzMessageRef {\n    return this.createInstance({ type: 'info', content }, options);\n  }\n\n  warning(content: string | TemplateRef<void>, options?: NzMessageDataOptions): NzMessageRef {\n    return this.createInstance({ type: 'warning', content }, options);\n  }\n\n  loading(content: string | TemplateRef<void>, options?: NzMessageDataOptions): NzMessageRef {\n    return this.createInstance({ type: 'loading', content }, options);\n  }\n\n  create(\n    type: 'success' | 'info' | 'warning' | 'error' | 'loading' | string,\n    content: string | TemplateRef<void>,\n    options?: NzMessageDataOptions\n  ): NzMessageRef {\n    return this.createInstance({ type, content }, options);\n  }\n\n  private createInstance(message: NzMessageData, options?: NzMessageDataOptions): NzMessageRef {\n    this.container = this.withContainer(NzMessageContainerComponent);\n\n    return this.container.create({\n      ...message,\n      ...{\n        createdAt: new Date(),\n        messageId: this.getInstanceId(),\n        options\n      }\n    });\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  ViewEncapsulation\n} from '@angular/core';\nimport { moveUpMotion } from 'ng-zorro-antd/core/animation';\n\nimport { NzMNComponent } from './base';\nimport { NzMessageData } from './typings';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  selector: 'nz-message',\n  exportAs: 'nzMessage',\n  preserveWhitespaces: false,\n  animations: [moveUpMotion],\n  template: `\n    <div class=\"ant-message-notice\" [@moveUpMotion]=\"instance.state\" (mouseenter)=\"onEnter()\" (mouseleave)=\"onLeave()\">\n      <div class=\"ant-message-notice-content\">\n        <div class=\"ant-message-custom-content\" [ngClass]=\"'ant-message-' + instance.type\">\n          <ng-container [ngSwitch]=\"instance.type\">\n            <i *ngSwitchCase=\"'success'\" nz-icon nzType=\"check-circle\"></i>\n            <i *ngSwitchCase=\"'info'\" nz-icon nzType=\"info-circle\"></i>\n            <i *ngSwitchCase=\"'warning'\" nz-icon nzType=\"exclamation-circle\"></i>\n            <i *ngSwitchCase=\"'error'\" nz-icon nzType=\"close-circle\"></i>\n            <i *ngSwitchCase=\"'loading'\" nz-icon nzType=\"loading\"></i>\n          </ng-container>\n          <ng-container *nzStringTemplateOutlet=\"instance.content\">\n            <span [innerHTML]=\"instance.content\"></span>\n          </ng-container>\n        </div>\n      </div>\n    </div>\n  `\n})\nexport class NzMessageComponent extends NzMNComponent implements OnInit, OnDestroy {\n  @Input() instance!: Required<NzMessageData>;\n  @Output() readonly destroyed = new EventEmitter<{ id: string; userAction: boolean }>();\n\n  constructor(cdr: ChangeDetectorRef) {\n    super(cdr);\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { NzOutletModule } from 'ng-zorro-antd/core/outlet';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\nimport { NzMessageContainerComponent } from './message-container.component';\nimport { NzMessageComponent } from './message.component';\nimport { NzMessageServiceModule } from './message.service.module';\n\n@NgModule({\n  imports: [CommonModule, OverlayModule, NzIconModule, NzOutletModule, NzMessageServiceModule],\n  declarations: [NzMessageContainerComponent, NzMessageComponent],\n  entryComponents: [NzMessageContainerComponent]\n})\nexport class NzMessageModule {}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { TemplateRef } from '@angular/core';\nimport { Subject } from 'rxjs';\n\nexport type NzMessageType = 'success' | 'info' | 'warning' | 'error' | 'loading';\n\nexport interface NzMessageDataOptions {\n  nzDuration?: number;\n  nzAnimate?: boolean;\n  nzPauseOnHover?: boolean;\n}\n\nexport interface NzMessageData {\n  type?: NzMessageType | string;\n  content?: string | TemplateRef<void>;\n  messageId?: string;\n  createdAt?: Date;\n  options?: NzMessageDataOptions;\n  state?: 'enter' | 'leave';\n\n  onClose?: Subject<boolean>;\n}\n\nexport type NzMessageRef = Pick<Required<NzMessageData>, 'onClose' | 'messageId'>;\n\n/**\n * @deprecated use `NzMessageRef` instead\n * @breaking-change 10.0.0\n */\nexport type NzMessageDataFilled = NzMessageRef;\n"]}