{"version":3,"file":"ng-zorro-antd-list.js","sources":["ng-zorro-antd/list/interface.ts","ng-zorro-antd/list/list-item-meta-cell.ts","ng-zorro-antd/list/list-item-meta.component.ts","ng-zorro-antd/list/list-item-cell.ts","ng-zorro-antd/list/list-cell.ts","ng-zorro-antd/list/list.component.ts","ng-zorro-antd/list/list-item.component.ts","ng-zorro-antd/list/list.module.ts"],"names":["DescriptionComponent","TitleComponent"],"mappings":"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","sourcesContent":["/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nexport type ColumnCount = 1 | 2 | 3 | 4 | 6 | 8 | 12 | 24;\n\nexport interface NzListGrid {\n  gutter?: number;\n  span?: number;\n  column?: ColumnCount;\n  xs?: ColumnCount;\n  sm?: ColumnCount;\n  md?: ColumnCount;\n  lg?: ColumnCount;\n  xl?: ColumnCount;\n  xxl?: ColumnCount;\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { ChangeDetectionStrategy, Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'nz-list-item-meta-title',\n  exportAs: 'nzListItemMetaTitle',\n  template: `\n    <h4 class=\"ant-list-item-meta-title\">\n      <ng-content></ng-content>\n    </h4>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NzListItemMetaTitleComponent {}\n\n@Component({\n  selector: 'nz-list-item-meta-description',\n  exportAs: 'nzListItemMetaDescription',\n  template: `\n    <div class=\"ant-list-item-meta-description\">\n      <ng-content></ng-content>\n    </div>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NzListItemMetaDescriptionComponent {}\n\n@Component({\n  selector: 'nz-list-item-meta-avatar',\n  exportAs: 'nzListItemMetaAvatar',\n  template: `\n    <div class=\"ant-list-item-meta-avatar\">\n      <nz-avatar *ngIf=\"nzSrc\" [nzSrc]=\"nzSrc\"></nz-avatar>\n      <ng-content *ngIf=\"!nzSrc\"></ng-content>\n    </div>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NzListItemMetaAvatarComponent {\n  @Input() nzSrc?: string;\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  ContentChild,\n  ElementRef,\n  Input,\n  Renderer2,\n  TemplateRef,\n  ViewEncapsulation\n} from '@angular/core';\nimport {\n  NzListItemMetaDescriptionComponent as DescriptionComponent,\n  NzListItemMetaTitleComponent as TitleComponent\n} from './list-item-meta-cell';\n\n@Component({\n  selector: 'nz-list-item-meta, [nz-list-item-meta]',\n  exportAs: 'nzListItemMeta',\n  template: `\n    <!--Old API Start-->\n    <nz-list-item-meta-avatar *ngIf=\"avatarStr\" [nzSrc]=\"avatarStr\"></nz-list-item-meta-avatar>\n    <nz-list-item-meta-avatar *ngIf=\"avatarTpl\">\n      <ng-container [ngTemplateOutlet]=\"avatarTpl\"></ng-container>\n    </nz-list-item-meta-avatar>\n    <!--Old API End-->\n\n    <ng-content select=\"nz-list-item-meta-avatar\"></ng-content>\n\n    <div *ngIf=\"nzTitle || nzDescription || descriptionComponent || titleComponent\" class=\"ant-list-item-meta-content\">\n      <!--Old API Start-->\n      <nz-list-item-meta-title *ngIf=\"nzTitle && !titleComponent\">\n        <ng-container *nzStringTemplateOutlet=\"nzTitle\">{{ nzTitle }}</ng-container>\n      </nz-list-item-meta-title>\n      <nz-list-item-meta-description *ngIf=\"nzDescription && !descriptionComponent\">\n        <ng-container *nzStringTemplateOutlet=\"nzDescription\">{{ nzDescription }}</ng-container>\n      </nz-list-item-meta-description>\n      <!--Old API End-->\n\n      <ng-content select=\"nz-list-item-meta-title\"></ng-content>\n      <ng-content select=\"nz-list-item-meta-description\"></ng-content>\n    </div>\n  `,\n  preserveWhitespaces: false,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None\n})\nexport class NzListItemMetaComponent {\n  avatarStr = '';\n  avatarTpl?: TemplateRef<void>;\n\n  @Input()\n  set nzAvatar(value: string | TemplateRef<void>) {\n    if (value instanceof TemplateRef) {\n      this.avatarStr = '';\n      this.avatarTpl = value;\n    } else {\n      this.avatarStr = value;\n    }\n  }\n\n  @Input() nzTitle?: string | TemplateRef<void>;\n\n  @Input() nzDescription?: string | TemplateRef<void>;\n\n  @ContentChild(DescriptionComponent) descriptionComponent?: DescriptionComponent;\n  @ContentChild(TitleComponent) titleComponent?: TitleComponent;\n  constructor(public elementRef: ElementRef, private renderer: Renderer2) {\n    this.renderer.addClass(elementRef.nativeElement, 'ant-list-item-meta');\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChildren,\n  Input,\n  NgZone,\n  OnChanges,\n  OnDestroy,\n  QueryList,\n  TemplateRef,\n  ViewChild\n} from '@angular/core';\nimport { defer, merge, Observable, of, Subject } from 'rxjs';\nimport { switchMap, take, takeUntil } from 'rxjs/operators';\n\n@Component({\n  selector: 'nz-list-item-extra, [nz-list-item-extra]',\n  exportAs: 'nzListItemExtra',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: ` <ng-content></ng-content> `,\n  host: {\n    class: 'ant-list-item-extra'\n  }\n})\nexport class NzListItemExtraComponent {\n  constructor() {}\n}\n\n@Component({\n  selector: 'nz-list-item-action',\n  exportAs: 'nzListItemAction',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: ` <ng-template><ng-content></ng-content></ng-template> `\n})\nexport class NzListItemActionComponent {\n  @ViewChild(TemplateRef) templateRef?: TemplateRef<void>;\n  constructor() {}\n}\n\n@Component({\n  selector: 'ul[nz-list-item-actions]',\n  exportAs: 'nzListItemActions',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: `\n    <li *ngFor=\"let i of actions; let last = last\">\n      <ng-template [ngTemplateOutlet]=\"i\"></ng-template>\n      <em *ngIf=\"!last\" class=\"ant-list-item-action-split\"></em>\n    </li>\n  `,\n  host: {\n    class: 'ant-list-item-action'\n  }\n})\nexport class NzListItemActionsComponent implements OnChanges, OnDestroy {\n  @Input() nzActions: Array<TemplateRef<void>> = [];\n  @ContentChildren(NzListItemActionComponent) nzListItemActions!: QueryList<NzListItemActionComponent>;\n\n  actions: Array<TemplateRef<void>> = [];\n  private destroy$ = new Subject();\n  private inputActionChanges$ = new Subject<null>();\n  private contentChildrenChanges$: Observable<null> = defer(() => {\n    if (this.nzListItemActions) {\n      return of(null);\n    }\n    return this.ngZone.onStable.asObservable().pipe(\n      take(1),\n      switchMap(() => this.contentChildrenChanges$)\n    );\n  });\n\n  constructor(private ngZone: NgZone, private cdr: ChangeDetectorRef) {\n    merge(this.contentChildrenChanges$, this.inputActionChanges$)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(() => {\n        if (this.nzActions.length) {\n          this.actions = this.nzActions;\n        } else {\n          this.actions = this.nzListItemActions.map(action => action.templateRef!);\n        }\n        this.cdr.detectChanges();\n      });\n  }\n\n  ngOnChanges(): void {\n    this.inputActionChanges$.next(null);\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { ChangeDetectionStrategy, Component, Directive, Input, TemplateRef } from '@angular/core';\n\n@Component({\n  selector: 'nz-list-empty',\n  exportAs: 'nzListHeader',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: ` <nz-embed-empty [nzComponentName]=\"'list'\" [specificContent]=\"nzNoResult\"></nz-embed-empty> `,\n  host: {\n    class: 'ant-list-empty-text'\n  }\n})\nexport class NzListEmptyComponent {\n  @Input() nzNoResult?: string | TemplateRef<void>;\n}\n\n@Component({\n  selector: 'nz-list-header',\n  exportAs: 'nzListHeader',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: ` <ng-content></ng-content> `,\n  host: {\n    class: 'ant-list-header'\n  }\n})\nexport class NzListHeaderComponent {}\n\n@Component({\n  selector: 'nz-list-footer',\n  exportAs: 'nzListFooter',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: ` <ng-content></ng-content> `,\n  host: {\n    class: 'ant-list-footer'\n  }\n})\nexport class NzListFooterComponent {}\n\n@Component({\n  selector: 'nz-list-pagination',\n  exportAs: 'nzListPagination',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: ` <ng-content></ng-content> `,\n  host: {\n    class: 'ant-list-pagination'\n  }\n})\nexport class NzListPaginationComponent {}\n\n@Directive({\n  selector: 'nz-list-load-more',\n  exportAs: 'nzListLoadMoreDirective'\n})\nexport class NzListLoadMoreDirective {}\n\n@Directive({\n  selector: 'nz-list[nzGrid]',\n  host: {\n    class: 'ant-list-grid'\n  }\n})\nexport class NzListGridDirective {}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  Component,\n  ContentChild,\n  Input,\n  OnChanges,\n  OnDestroy,\n  SimpleChanges,\n  TemplateRef,\n  ViewEncapsulation\n} from '@angular/core';\nimport { BooleanInput, NzDirectionVHType, NzSafeAny, NzSizeLDSType } from 'ng-zorro-antd/core/types';\nimport { InputBoolean } from 'ng-zorro-antd/core/util';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { NzListGrid } from './interface';\nimport { NzListFooterComponent, NzListLoadMoreDirective, NzListPaginationComponent } from './list-cell';\n\n@Component({\n  selector: 'nz-list, [nz-list]',\n  exportAs: 'nzList',\n  template: `\n    <ng-template #itemsTpl>\n      <div class=\"ant-list-items\">\n        <ng-container *ngFor=\"let item of nzDataSource; let index = index\">\n          <ng-template [ngTemplateOutlet]=\"nzRenderItem\" [ngTemplateOutletContext]=\"{ $implicit: item, index: index }\"></ng-template>\n        </ng-container>\n        <ng-content select=\"nz-list-item, [nz-list-item]\"></ng-content>\n      </div>\n    </ng-template>\n\n    <nz-list-header *ngIf=\"nzHeader\">\n      <ng-container *nzStringTemplateOutlet=\"nzHeader\">{{ nzHeader }}</ng-container>\n    </nz-list-header>\n    <ng-content select=\"nz-list-header\"></ng-content>\n\n    <nz-spin [nzSpinning]=\"nzLoading\">\n      <ng-container>\n        <div *ngIf=\"nzLoading && nzDataSource && nzDataSource.length === 0\" [style.min-height.px]=\"53\"></div>\n        <div *ngIf=\"nzGrid && nzDataSource; else itemsTpl\" nz-row [nzGutter]=\"nzGrid.gutter || null\">\n          <div\n            nz-col\n            [nzSpan]=\"nzGrid.span || null\"\n            [nzXs]=\"nzGrid.xs || null\"\n            [nzSm]=\"nzGrid.sm || null\"\n            [nzMd]=\"nzGrid.md || null\"\n            [nzLg]=\"nzGrid.lg || null\"\n            [nzXl]=\"nzGrid.xl || null\"\n            [nzXXl]=\"nzGrid.xxl || null\"\n            *ngFor=\"let item of nzDataSource; let index = index\"\n          >\n            <ng-template [ngTemplateOutlet]=\"nzRenderItem\" [ngTemplateOutletContext]=\"{ $implicit: item, index: index }\"></ng-template>\n          </div>\n        </div>\n        <nz-list-empty *ngIf=\"!nzLoading && nzDataSource && nzDataSource.length === 0\" [nzNoResult]=\"nzNoResult\"></nz-list-empty>\n      </ng-container>\n      <ng-content></ng-content>\n    </nz-spin>\n\n    <nz-list-footer *ngIf=\"nzFooter\">\n      <ng-container *nzStringTemplateOutlet=\"nzFooter\">{{ nzFooter }}</ng-container>\n    </nz-list-footer>\n    <ng-content select=\"nz-list-footer, [nz-list-footer]\"></ng-content>\n\n    <ng-template [ngTemplateOutlet]=\"nzLoadMore\"></ng-template>\n    <ng-content select=\"nz-list-load-more, [nz-list-load-more]\"></ng-content>\n\n    <nz-list-pagination *ngIf=\"nzPagination\">\n      <ng-template [ngTemplateOutlet]=\"nzPagination\"></ng-template>\n    </nz-list-pagination>\n    <ng-content select=\"nz-list-pagination, [nz-list-pagination]\"></ng-content>\n  `,\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    '[class.ant-list]': 'true',\n    '[class.ant-list-vertical]': 'nzItemLayout === \"vertical\"',\n    '[class.ant-list-lg]': 'nzSize === \"large\"',\n    '[class.ant-list-sm]': 'nzSize === \"small\"',\n    '[class.ant-list-split]': 'nzSplit',\n    '[class.ant-list-bordered]': 'nzBordered',\n    '[class.ant-list-loading]': 'nzLoading',\n    '[class.ant-list-something-after-last-item]': 'hasSomethingAfterLastItem'\n  }\n})\nexport class NzListComponent implements AfterContentInit, OnChanges, OnDestroy {\n  static ngAcceptInputType_nzBordered: BooleanInput;\n  static ngAcceptInputType_nzLoading: BooleanInput;\n  static ngAcceptInputType_nzSplit: BooleanInput;\n  static ngAcceptInputType_nzGrid: '' | NzListGrid | null | undefined;\n\n  @Input() nzDataSource?: NzSafeAny[];\n  @Input() @InputBoolean() nzBordered = false;\n  @Input() nzGrid?: NzListGrid | '' = '';\n  @Input() nzHeader?: string | TemplateRef<void>;\n  @Input() nzFooter?: string | TemplateRef<void>;\n  @Input() nzItemLayout: NzDirectionVHType = 'horizontal';\n  @Input() nzRenderItem: TemplateRef<void> | null = null;\n  @Input() @InputBoolean() nzLoading = false;\n  @Input() nzLoadMore: TemplateRef<void> | null = null;\n  @Input() nzPagination?: TemplateRef<void>;\n  @Input() nzSize: NzSizeLDSType = 'default';\n  @Input() @InputBoolean() nzSplit = true;\n  @Input() nzNoResult?: string | TemplateRef<void>;\n\n  @ContentChild(NzListFooterComponent) nzListFooterComponent!: NzListFooterComponent;\n  @ContentChild(NzListPaginationComponent) nzListPaginationComponent!: NzListPaginationComponent;\n  @ContentChild(NzListLoadMoreDirective) nzListLoadMoreDirective!: NzListLoadMoreDirective;\n\n  hasSomethingAfterLastItem = false;\n\n  private itemLayoutNotifySource = new BehaviorSubject<NzDirectionVHType>(this.nzItemLayout);\n\n  get itemLayoutNotify$(): Observable<NzDirectionVHType> {\n    return this.itemLayoutNotifySource.asObservable();\n  }\n\n  constructor() {}\n\n  getSomethingAfterLastItem(): boolean {\n    return !!(\n      this.nzLoadMore ||\n      this.nzPagination ||\n      this.nzFooter ||\n      this.nzListFooterComponent ||\n      this.nzListPaginationComponent ||\n      this.nzListLoadMoreDirective\n    );\n  }\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.nzItemLayout) {\n      this.itemLayoutNotifySource.next(this.nzItemLayout);\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.itemLayoutNotifySource.unsubscribe();\n  }\n\n  ngAfterContentInit(): void {\n    this.hasSomethingAfterLastItem = this.getSomethingAfterLastItem();\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChild,\n  ElementRef,\n  HostBinding,\n  Input,\n  OnDestroy,\n  Renderer2,\n  TemplateRef,\n  ViewEncapsulation\n} from '@angular/core';\nimport { BooleanInput, NzDirectionVHType } from 'ng-zorro-antd/core/types';\n\nimport { InputBoolean } from 'ng-zorro-antd/core/util';\nimport { Subscription } from 'rxjs';\nimport { NzListItemExtraComponent } from './list-item-cell';\nimport { NzListComponent } from './list.component';\n\n@Component({\n  selector: 'nz-list-item, [nz-list-item]',\n  exportAs: 'nzListItem',\n  template: `\n    <ng-template #actionsTpl>\n      <ul nz-list-item-actions *ngIf=\"nzActions && nzActions.length > 0\" [nzActions]=\"nzActions\"></ul>\n      <ng-content select=\"nz-list-item-actions, [nz-list-item-actions]\"></ng-content>\n    </ng-template>\n    <ng-template #contentTpl>\n      <ng-content select=\"nz-list-item-meta, [nz-list-item-meta]\"></ng-content>\n      <ng-content></ng-content>\n      <ng-container *ngIf=\"nzContent\">\n        <ng-container *nzStringTemplateOutlet=\"nzContent\">{{ nzContent }}</ng-container>\n      </ng-container>\n    </ng-template>\n    <ng-template #extraTpl>\n      <ng-content select=\"nz-list-item-extra, [nz-list-item-extra]\"></ng-content>\n    </ng-template>\n    <ng-template #simpleTpl>\n      <ng-template [ngTemplateOutlet]=\"contentTpl\"></ng-template>\n      <ng-template [ngTemplateOutlet]=\"nzExtra\"></ng-template>\n      <ng-template [ngTemplateOutlet]=\"extraTpl\"></ng-template>\n      <ng-template [ngTemplateOutlet]=\"actionsTpl\"></ng-template>\n    </ng-template>\n\n    <ng-container *ngIf=\"isVerticalAndExtra; else simpleTpl\">\n      <div class=\"ant-list-item-main\">\n        <ng-template [ngTemplateOutlet]=\"contentTpl\"></ng-template>\n        <ng-template [ngTemplateOutlet]=\"actionsTpl\"></ng-template>\n      </div>\n      <nz-list-item-extra *ngIf=\"nzExtra\">\n        <ng-template [ngTemplateOutlet]=\"nzExtra\"></ng-template>\n      </nz-list-item-extra>\n      <ng-template [ngTemplateOutlet]=\"extraTpl\"></ng-template>\n    </ng-container>\n  `,\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NzListItemComponent implements OnDestroy, AfterViewInit {\n  static ngAcceptInputType_nzNoFlex: BooleanInput;\n\n  @Input() nzActions: Array<TemplateRef<void>> = [];\n  @Input() nzContent?: string | TemplateRef<void>;\n  @Input() nzExtra: TemplateRef<void> | null = null;\n  @Input() @InputBoolean() @HostBinding('class.ant-list-item-no-flex') nzNoFlex: boolean = false;\n\n  @ContentChild(NzListItemExtraComponent) listItemExtraDirective?: NzListItemExtraComponent;\n\n  private itemLayout?: NzDirectionVHType;\n  private itemLayout$?: Subscription;\n\n  get isVerticalAndExtra(): boolean {\n    return this.itemLayout === 'vertical' && (!!this.listItemExtraDirective || !!this.nzExtra);\n  }\n\n  constructor(elementRef: ElementRef, renderer: Renderer2, private parentComp: NzListComponent, private cdr: ChangeDetectorRef) {\n    renderer.addClass(elementRef.nativeElement, 'ant-list-item');\n  }\n\n  ngAfterViewInit(): void {\n    this.itemLayout$ = this.parentComp.itemLayoutNotify$.subscribe(val => {\n      this.itemLayout = val;\n      this.cdr.detectChanges();\n    });\n  }\n\n  ngOnDestroy(): void {\n    if (this.itemLayout$) {\n      this.itemLayout$.unsubscribe();\n    }\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NzAvatarModule } from 'ng-zorro-antd/avatar';\nimport { NzOutletModule } from 'ng-zorro-antd/core/outlet';\nimport { NzEmptyModule } from 'ng-zorro-antd/empty';\nimport { NzGridModule } from 'ng-zorro-antd/grid';\nimport { NzSpinModule } from 'ng-zorro-antd/spin';\n\nimport {\n  NzListEmptyComponent,\n  NzListFooterComponent,\n  NzListGridDirective,\n  NzListHeaderComponent,\n  NzListLoadMoreDirective,\n  NzListPaginationComponent\n} from './list-cell';\nimport { NzListItemActionComponent, NzListItemActionsComponent, NzListItemExtraComponent } from './list-item-cell';\nimport { NzListItemMetaAvatarComponent, NzListItemMetaDescriptionComponent, NzListItemMetaTitleComponent } from './list-item-meta-cell';\nimport { NzListItemMetaComponent } from './list-item-meta.component';\nimport { NzListItemComponent } from './list-item.component';\nimport { NzListComponent } from './list.component';\n\nconst DIRECTIVES = [\n  NzListComponent,\n  NzListHeaderComponent,\n  NzListFooterComponent,\n  NzListPaginationComponent,\n  NzListEmptyComponent,\n  NzListItemComponent,\n  NzListItemMetaComponent,\n  NzListItemMetaTitleComponent,\n  NzListItemMetaDescriptionComponent,\n  NzListItemMetaAvatarComponent,\n  NzListItemActionsComponent,\n  NzListItemActionComponent,\n  NzListItemExtraComponent,\n  NzListLoadMoreDirective,\n  NzListGridDirective\n];\n\n@NgModule({\n  imports: [CommonModule, NzSpinModule, NzGridModule, NzAvatarModule, NzOutletModule, NzEmptyModule],\n  declarations: [DIRECTIVES],\n  exports: [DIRECTIVES]\n})\nexport class NzListModule {}\n"]}