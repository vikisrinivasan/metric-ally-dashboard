{"version":3,"file":"ng-zorro-antd-form.js","sources":["ng-zorro-antd/form/form.directive.ts","ng-zorro-antd/form/form-item.component.ts","ng-zorro-antd/form/form-control.component.ts","ng-zorro-antd/form/form-label.component.ts","ng-zorro-antd/form/form-split.component.ts","ng-zorro-antd/form/form-text.component.ts","ng-zorro-antd/form/form.module.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { Directive, ElementRef, Input, OnChanges, OnDestroy, Renderer2, SimpleChange, SimpleChanges } from '@angular/core';\n\nimport { NzConfigService, WithConfig } from 'ng-zorro-antd/core/config';\nimport { BooleanInput, InputObservable } from 'ng-zorro-antd/core/types';\nimport { InputBoolean } from 'ng-zorro-antd/core/util';\nimport { Observable, Subject } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nconst NZ_CONFIG_COMPONENT_NAME = 'form';\n\n@Directive({\n  selector: '[nz-form]',\n  exportAs: 'nzForm',\n  host: {\n    '[class.ant-form-horizontal]': `nzLayout === 'horizontal'`,\n    '[class.ant-form-vertical]': `nzLayout === 'vertical'`,\n    '[class.ant-form-inline]': `nzLayout === 'inline'`\n  }\n})\nexport class NzFormDirective implements OnChanges, OnDestroy, InputObservable {\n  static ngAcceptInputType_nzNoColon: BooleanInput;\n  static ngAcceptInputType_nzDisableAutoTips: BooleanInput;\n\n  @Input() nzLayout: 'horizontal' | 'vertical' | 'inline' = 'horizontal';\n  @Input() @WithConfig(NZ_CONFIG_COMPONENT_NAME) @InputBoolean() nzNoColon: boolean = false;\n  @Input() @WithConfig(NZ_CONFIG_COMPONENT_NAME) nzAutoTips: Record<string, Record<string, string>> = {};\n  @Input() @InputBoolean() nzDisableAutoTips = false;\n\n  destroy$ = new Subject();\n  private inputChanges$ = new Subject<SimpleChanges>();\n\n  getInputObservable<K extends keyof this>(changeType: K): Observable<SimpleChange> {\n    return this.inputChanges$.pipe(\n      filter(changes => changeType in changes),\n      map(value => value[changeType as string])\n    );\n  }\n\n  constructor(public nzConfigService: NzConfigService, elementRef: ElementRef, private renderer: Renderer2) {\n    this.renderer.addClass(elementRef.nativeElement, 'ant-form');\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.inputChanges$.next(changes);\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  Input,\n  OnDestroy,\n  Renderer2,\n  ViewEncapsulation\n} from '@angular/core';\n\nimport { warnDeprecation } from 'ng-zorro-antd/core/logger';\nimport { Subject } from 'rxjs';\n\nexport type NzFormControlStatusType = 'success' | 'error' | 'warning' | 'validating' | null;\n\n/** should add nz-row directive to host, track https://github.com/angular/angular/issues/8785 **/\n@Component({\n  selector: 'nz-form-item',\n  exportAs: 'nzFormItem',\n  preserveWhitespaces: false,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  host: {\n    '[class.ant-form-item-has-success]': 'status === \"success\"',\n    '[class.ant-form-item-has-warning]': 'status === \"warning\"',\n    '[class.ant-form-item-has-error]': 'status === \"error\"',\n    '[class.ant-form-item-is-validating]': 'status === \"validating\"',\n    '[class.ant-form-item-has-feedback]': 'hasFeedback && status',\n    '[class.ant-form-item-with-help]': 'withHelpClass'\n  },\n  template: ` <ng-content></ng-content> `\n})\nexport class NzFormItemComponent implements OnDestroy, OnDestroy {\n  /**\n   * @deprecated 10.0.0. 'nzFlex' is deprecated and going to be removed in 10.0.0.\n   */\n  @Input() set nzFlex(_: boolean) {\n    warnDeprecation(`'nzFlex' is deprecated and going to be removed in 10.0.0.`);\n  }\n\n  status: NzFormControlStatusType = null;\n  hasFeedback = false;\n  withHelpClass = false;\n\n  private destroy$ = new Subject();\n\n  setWithHelpViaTips(value: boolean): void {\n    this.withHelpClass = value;\n    this.cdr.markForCheck();\n  }\n\n  setStatus(status: NzFormControlStatusType): void {\n    this.status = status;\n    this.cdr.markForCheck();\n  }\n\n  setHasFeedback(hasFeedback: boolean): void {\n    this.hasFeedback = hasFeedback;\n    this.cdr.markForCheck();\n  }\n\n  constructor(elementRef: ElementRef, renderer: Renderer2, private cdr: ChangeDetectorRef) {\n    renderer.addClass(elementRef.nativeElement, 'ant-form-item');\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChild,\n  ElementRef,\n  Host,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Renderer2,\n  SimpleChanges,\n  TemplateRef,\n  ViewEncapsulation\n} from '@angular/core';\nimport { AbstractControl, FormControlDirective, FormControlName, NgControl, NgModel } from '@angular/forms';\nimport { helpMotion } from 'ng-zorro-antd/core/animation';\nimport { BooleanInput, NzSafeAny } from 'ng-zorro-antd/core/types';\n\nimport { toBoolean } from 'ng-zorro-antd/core/util';\nimport { NzI18nService } from 'ng-zorro-antd/i18n';\nimport { Observable, Subject, Subscription } from 'rxjs';\nimport { filter, startWith, takeUntil, tap } from 'rxjs/operators';\nimport { NzFormDirective } from './form.directive';\n\nimport { NzFormControlStatusType, NzFormItemComponent } from './form-item.component';\n\nconst iconTypeMap = {\n  error: 'close-circle-fill',\n  validating: 'loading',\n  success: 'check-circle-fill',\n  warning: 'exclamation-circle-fill'\n} as const;\n\n@Component({\n  selector: 'nz-form-control',\n  exportAs: 'nzFormControl',\n  preserveWhitespaces: false,\n  animations: [helpMotion],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: `\n    <div class=\"ant-form-item-control-input\">\n      <div class=\"ant-form-item-control-input-content\">\n        <ng-content></ng-content>\n      </div>\n      <span class=\"ant-form-item-children-icon\">\n        <i *ngIf=\"nzHasFeedback && iconType\" nz-icon [nzType]=\"iconType\"></i>\n      </span>\n    </div>\n    <div class=\"ant-form-item-explain\" *ngIf=\"innerTip\">\n      <div @helpMotion>\n        <ng-container *nzStringTemplateOutlet=\"innerTip; context: { $implicit: validateControl }\">{{ innerTip }}</ng-container>\n      </div>\n    </div>\n    <div class=\"ant-form-item-extra\" *ngIf=\"nzExtra\">\n      <ng-container *nzStringTemplateOutlet=\"nzExtra\">{{ nzExtra }}</ng-container>\n    </div>\n  `\n})\nexport class NzFormControlComponent implements OnChanges, OnDestroy, OnInit, AfterContentInit, OnDestroy {\n  static ngAcceptInputType_nzHasFeedback: BooleanInput;\n  static ngAcceptInputType_nzRequired: BooleanInput;\n  static ngAcceptInputType_nzNoColon: BooleanInput;\n  static ngAcceptInputType_nzDisableAutoTips: BooleanInput;\n\n  private _hasFeedback = false;\n  private validateChanges: Subscription = Subscription.EMPTY;\n  private validateString: string | null = null;\n  private status: NzFormControlStatusType = null;\n  private destroyed$ = new Subject<void>();\n  private localeId!: string;\n  private autoErrorTip?: string;\n\n  private get disableAutoTips(): boolean {\n    return this.nzDisableAutoTips !== 'default' ? toBoolean(this.nzDisableAutoTips) : this.nzFormDirective?.nzDisableAutoTips;\n  }\n\n  validateControl: AbstractControl | NgModel | null = null;\n  iconType: typeof iconTypeMap[keyof typeof iconTypeMap] | null = null;\n  innerTip: string | TemplateRef<{ $implicit: AbstractControl | NgModel }> | null = null;\n\n  @ContentChild(NgControl, { static: false }) defaultValidateControl?: FormControlName | FormControlDirective;\n  @Input() nzSuccessTip?: string | TemplateRef<{ $implicit: AbstractControl | NgModel }>;\n  @Input() nzWarningTip?: string | TemplateRef<{ $implicit: AbstractControl | NgModel }>;\n  @Input() nzErrorTip?: string | TemplateRef<{ $implicit: AbstractControl | NgModel }>;\n  @Input() nzValidatingTip?: string | TemplateRef<{ $implicit: AbstractControl | NgModel }>;\n  @Input() nzExtra?: string | TemplateRef<void>;\n  @Input() nzAutoTips: Record<string, Record<string, string>> = {};\n  @Input() nzDisableAutoTips: boolean | 'default' = 'default';\n\n  @Input()\n  set nzHasFeedback(value: boolean) {\n    this._hasFeedback = toBoolean(value);\n    if (this.nzFormItemComponent) {\n      this.nzFormItemComponent.setHasFeedback(this._hasFeedback);\n    }\n  }\n\n  get nzHasFeedback(): boolean {\n    return this._hasFeedback;\n  }\n\n  @Input()\n  set nzValidateStatus(value: string | AbstractControl | FormControlName | NgModel) {\n    if (value instanceof AbstractControl || value instanceof NgModel) {\n      this.validateControl = value;\n      this.validateString = null;\n      this.watchControl();\n    } else if (value instanceof FormControlName) {\n      this.validateControl = value.control;\n      this.validateString = null;\n      this.watchControl();\n    } else {\n      this.validateString = value;\n      this.validateControl = null;\n      this.setStatus();\n    }\n  }\n\n  private watchControl(): void {\n    this.validateChanges.unsubscribe();\n    /** miss detect https://github.com/angular/angular/issues/10887 **/\n    if (this.validateControl && this.validateControl.statusChanges) {\n      this.validateChanges = this.validateControl.statusChanges.pipe(startWith(null), takeUntil(this.destroyed$)).subscribe(_ => {\n        if (!this.disableAutoTips) {\n          this.updateAutoErrorTip();\n        }\n        this.setStatus();\n        this.cdr.markForCheck();\n      });\n    }\n  }\n\n  private setStatus(): void {\n    this.status = this.getControlStatus(this.validateString);\n    this.iconType = this.status ? iconTypeMap[this.status] : null;\n    this.innerTip = this.getInnerTip(this.status);\n    if (this.nzFormItemComponent) {\n      this.nzFormItemComponent.setWithHelpViaTips(!!this.innerTip);\n      this.nzFormItemComponent.setStatus(this.status);\n    }\n  }\n\n  private getControlStatus(validateString: string | null): NzFormControlStatusType {\n    let status: NzFormControlStatusType;\n\n    if (validateString === 'warning' || this.validateControlStatus('INVALID', 'warning')) {\n      status = 'warning';\n    } else if (validateString === 'error' || this.validateControlStatus('INVALID')) {\n      status = 'error';\n    } else if (validateString === 'validating' || validateString === 'pending' || this.validateControlStatus('PENDING')) {\n      status = 'validating';\n    } else if (validateString === 'success' || this.validateControlStatus('VALID')) {\n      status = 'success';\n    } else {\n      status = null;\n    }\n\n    return status;\n  }\n\n  private validateControlStatus(validStatus: string, statusType?: NzFormControlStatusType): boolean {\n    if (!this.validateControl) {\n      return false;\n    } else {\n      const { dirty, touched, status } = this.validateControl;\n      return (!!dirty || !!touched) && (statusType ? this.validateControl.hasError(statusType) : status === validStatus);\n    }\n  }\n\n  private getInnerTip(status: NzFormControlStatusType): string | TemplateRef<{ $implicit: AbstractControl | NgModel }> | null {\n    switch (status) {\n      case 'error':\n        return (!this.disableAutoTips && this.autoErrorTip) || this.nzErrorTip || null;\n      case 'validating':\n        return this.nzValidatingTip || null;\n      case 'success':\n        return this.nzSuccessTip || null;\n      case 'warning':\n        return this.nzWarningTip || null;\n      default:\n        return null;\n    }\n  }\n\n  private updateAutoErrorTip(): void {\n    if (this.validateControl) {\n      const errors = this.validateControl.errors || {};\n      let autoErrorTip = '';\n      for (const key in errors) {\n        if (errors.hasOwnProperty(key)) {\n          autoErrorTip =\n            errors[key][this.localeId] ??\n            this.nzAutoTips?.[this.localeId]?.[key] ??\n            this.nzFormDirective?.nzAutoTips?.[this.localeId]?.[key];\n        }\n        if (!!autoErrorTip) {\n          break;\n        }\n      }\n      this.autoErrorTip = autoErrorTip;\n    }\n  }\n\n  private subscribeAutoTips(observable: Observable<NzSafeAny>): void {\n    observable?.pipe(takeUntil(this.destroyed$)).subscribe(() => {\n      if (!this.disableAutoTips) {\n        this.updateAutoErrorTip();\n        this.setStatus();\n        this.cdr.markForCheck();\n      }\n    });\n  }\n\n  constructor(\n    elementRef: ElementRef,\n    @Optional() @Host() private nzFormItemComponent: NzFormItemComponent,\n    private cdr: ChangeDetectorRef,\n    renderer: Renderer2,\n    i18n: NzI18nService,\n    @Optional() @Host() private nzFormDirective: NzFormDirective\n  ) {\n    renderer.addClass(elementRef.nativeElement, 'ant-form-item-control');\n\n    this.subscribeAutoTips(i18n.localeChange.pipe(tap(locale => (this.localeId = locale.locale))));\n    this.subscribeAutoTips(this.nzFormDirective?.getInputObservable('nzAutoTips'));\n    this.subscribeAutoTips(\n      this.nzFormDirective?.getInputObservable('nzDisableAutoTips').pipe(filter(() => this.nzDisableAutoTips === 'default'))\n    );\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    const { nzDisableAutoTips, nzAutoTips, nzSuccessTip, nzWarningTip, nzErrorTip, nzValidatingTip } = changes;\n\n    if (nzDisableAutoTips || nzAutoTips) {\n      this.updateAutoErrorTip();\n      this.setStatus();\n    } else if (nzSuccessTip || nzWarningTip || nzErrorTip || nzValidatingTip) {\n      this.setStatus();\n    }\n  }\n\n  ngOnInit(): void {\n    this.setStatus();\n  }\n\n  ngOnDestroy(): void {\n    this.destroyed$.next();\n    this.destroyed$.complete();\n  }\n\n  ngAfterContentInit(): void {\n    if (!this.validateControl && !this.validateString) {\n      if (this.defaultValidateControl instanceof FormControlDirective) {\n        this.nzValidateStatus = this.defaultValidateControl.control;\n      } else {\n        this.nzValidateStatus = this.defaultValidateControl!;\n      }\n    }\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  Input,\n  OnDestroy,\n  Optional,\n  Renderer2,\n  SkipSelf,\n  ViewEncapsulation\n} from '@angular/core';\nimport { BooleanInput } from 'ng-zorro-antd/core/types';\n\nimport { InputBoolean, toBoolean } from 'ng-zorro-antd/core/util';\nimport { Subject } from 'rxjs';\nimport { filter, takeUntil } from 'rxjs/operators';\nimport { NzFormDirective } from './form.directive';\n\n@Component({\n  selector: 'nz-form-label',\n  exportAs: 'nzFormLabel',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: `\n    <label [attr.for]=\"nzFor\" [class.ant-form-item-no-colon]=\"nzNoColon\" [class.ant-form-item-required]=\"nzRequired\">\n      <ng-content></ng-content>\n    </label>\n  `\n})\nexport class NzFormLabelComponent implements OnDestroy {\n  static ngAcceptInputType_nzRequired: BooleanInput;\n  static ngAcceptInputType_nzNoColon: BooleanInput;\n\n  @Input() nzFor?: string;\n  @Input() @InputBoolean() nzRequired = false;\n  @Input()\n  set nzNoColon(value: boolean) {\n    this.noColon = toBoolean(value);\n  }\n  get nzNoColon(): boolean {\n    return this.noColon !== 'default' ? this.noColon : this.nzFormDirective?.nzNoColon;\n  }\n\n  noColon: boolean | 'default' = 'default';\n\n  private destroy$ = new Subject();\n\n  constructor(\n    elementRef: ElementRef,\n    renderer: Renderer2,\n    private cdr: ChangeDetectorRef,\n    @Optional() @SkipSelf() private nzFormDirective: NzFormDirective\n  ) {\n    renderer.addClass(elementRef.nativeElement, 'ant-form-item-label');\n\n    if (this.nzFormDirective) {\n      this.nzFormDirective\n        .getInputObservable('nzNoColon')\n        .pipe(\n          filter(() => this.noColon === 'default'),\n          takeUntil(this.destroy$)\n        )\n        .subscribe(() => this.cdr.markForCheck());\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { ChangeDetectionStrategy, Component, ElementRef, Renderer2, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  selector: 'nz-form-split',\n  exportAs: 'nzFormSplit',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: ` <ng-content></ng-content> `\n})\nexport class NzFormSplitComponent {\n  constructor(public elementRef: ElementRef, private renderer: Renderer2) {\n    this.renderer.addClass(this.elementRef.nativeElement, 'ant-form-split');\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { ChangeDetectionStrategy, Component, ElementRef, Renderer2, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  selector: 'nz-form-text',\n  exportAs: 'nzFormText',\n  preserveWhitespaces: false,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  template: ` <ng-content></ng-content> `\n})\nexport class NzFormTextComponent {\n  constructor(public elementRef: ElementRef, private renderer: Renderer2) {\n    this.renderer.addClass(this.elementRef.nativeElement, 'ant-form-text');\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { LayoutModule } from '@angular/cdk/layout';\nimport { PlatformModule } from '@angular/cdk/platform';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NzOutletModule } from 'ng-zorro-antd/core/outlet';\nimport { NzGridModule } from 'ng-zorro-antd/grid';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\n\nimport { NzFormControlComponent } from './form-control.component';\nimport { NzFormItemComponent } from './form-item.component';\nimport { NzFormLabelComponent } from './form-label.component';\nimport { NzFormSplitComponent } from './form-split.component';\nimport { NzFormTextComponent } from './form-text.component';\nimport { NzFormDirective } from './form.directive';\n\n@NgModule({\n  declarations: [\n    NzFormDirective,\n    NzFormItemComponent,\n    NzFormLabelComponent,\n    NzFormControlComponent,\n    NzFormTextComponent,\n    NzFormSplitComponent\n  ],\n  exports: [\n    NzGridModule,\n    NzFormDirective,\n    NzFormItemComponent,\n    NzFormLabelComponent,\n    NzFormControlComponent,\n    NzFormTextComponent,\n    NzFormSplitComponent\n  ],\n  imports: [CommonModule, NzGridModule, NzIconModule, LayoutModule, PlatformModule, NzOutletModule]\n})\nexport class NzFormModule {}\n"]}