{"version":3,"file":"ng-zorro-antd-switch.js","sources":["ng-zorro-antd/switch/switch.component.ts","ng-zorro-antd/switch/switch.module.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { ENTER, LEFT_ARROW, RIGHT_ARROW, SPACE } from '@angular/cdk/keycodes';\nimport {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  forwardRef,\n  Input,\n  OnDestroy,\n  TemplateRef,\n  ViewChild,\n  ViewEncapsulation\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport { NzConfigService, WithConfig } from 'ng-zorro-antd/core/config';\nimport { BooleanInput, NzSizeDSType, OnChangeType, OnTouchedType } from 'ng-zorro-antd/core/types';\nimport { InputBoolean } from 'ng-zorro-antd/core/util';\n\nconst NZ_CONFIG_COMPONENT_NAME = 'switch';\n\n@Component({\n  selector: 'nz-switch',\n  exportAs: 'nzSwitch',\n  preserveWhitespaces: false,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => NzSwitchComponent),\n      multi: true\n    }\n  ],\n  template: `\n    <button\n      nz-wave\n      type=\"button\"\n      class=\"ant-switch\"\n      #switchElement\n      [disabled]=\"nzDisabled\"\n      [class.ant-switch-checked]=\"isChecked\"\n      [class.ant-switch-loading]=\"nzLoading\"\n      [class.ant-switch-disabled]=\"nzDisabled\"\n      [class.ant-switch-small]=\"nzSize === 'small'\"\n      [nzWaveExtraNode]=\"true\"\n      (keydown)=\"onKeyDown($event)\"\n    >\n      <i *ngIf=\"nzLoading\" nz-icon nzType=\"loading\" class=\"ant-switch-loading-icon\"></i>\n      <span class=\"ant-switch-inner\">\n        <ng-container *ngIf=\"isChecked; else uncheckTemplate\">\n          <ng-container *nzStringTemplateOutlet=\"nzCheckedChildren\">{{ nzCheckedChildren }}</ng-container>\n        </ng-container>\n        <ng-template #uncheckTemplate>\n          <ng-container *nzStringTemplateOutlet=\"nzUnCheckedChildren\">{{ nzUnCheckedChildren }}</ng-container>\n        </ng-template>\n      </span>\n      <div class=\"ant-click-animating-node\"></div>\n    </button>\n  `,\n  host: {\n    '(click)': 'onHostClick($event)'\n  }\n})\nexport class NzSwitchComponent implements ControlValueAccessor, AfterViewInit, OnDestroy {\n  static ngAcceptInputType_nzLoading: BooleanInput;\n  static ngAcceptInputType_nzDisabled: BooleanInput;\n  static ngAcceptInputType_nzControl: BooleanInput;\n\n  isChecked = false;\n  onChange: OnChangeType = () => {};\n  onTouched: OnTouchedType = () => {};\n  @ViewChild('switchElement', { static: true }) private switchElement?: ElementRef;\n  @Input() @InputBoolean() nzLoading = false;\n  @Input() @InputBoolean() nzDisabled = false;\n  @Input() @InputBoolean() nzControl = false;\n  @Input() nzCheckedChildren: string | TemplateRef<void> | null = null;\n  @Input() nzUnCheckedChildren: string | TemplateRef<void> | null = null;\n  @Input() @WithConfig(NZ_CONFIG_COMPONENT_NAME) nzSize: NzSizeDSType = 'default';\n\n  onHostClick(e: MouseEvent): void {\n    e.preventDefault();\n    if (!this.nzDisabled && !this.nzLoading && !this.nzControl) {\n      this.updateValue(!this.isChecked);\n    }\n  }\n\n  updateValue(value: boolean): void {\n    if (this.isChecked !== value) {\n      this.isChecked = value;\n      this.onChange(this.isChecked);\n    }\n  }\n\n  onKeyDown(e: KeyboardEvent): void {\n    if (!this.nzControl && !this.nzDisabled && !this.nzLoading) {\n      if (e.keyCode === LEFT_ARROW) {\n        this.updateValue(false);\n        e.preventDefault();\n      } else if (e.keyCode === RIGHT_ARROW) {\n        this.updateValue(true);\n        e.preventDefault();\n      } else if (e.keyCode === SPACE || e.keyCode === ENTER) {\n        this.updateValue(!this.isChecked);\n        e.preventDefault();\n      }\n    }\n  }\n\n  focus(): void {\n    this.focusMonitor.focusVia(this.switchElement?.nativeElement, 'keyboard');\n  }\n\n  blur(): void {\n    this.switchElement?.nativeElement.blur();\n  }\n\n  constructor(public nzConfigService: NzConfigService, private cdr: ChangeDetectorRef, private focusMonitor: FocusMonitor) {}\n\n  ngAfterViewInit(): void {\n    this.focusMonitor.monitor(this.switchElement!.nativeElement, true).subscribe(focusOrigin => {\n      if (!focusOrigin) {\n        /** https://github.com/angular/angular/issues/17793 **/\n        Promise.resolve().then(() => this.onTouched());\n      }\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.focusMonitor.stopMonitoring(this.switchElement!.nativeElement);\n  }\n\n  writeValue(value: boolean): void {\n    this.isChecked = value;\n    this.cdr.markForCheck();\n  }\n\n  registerOnChange(fn: OnChangeType): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: OnTouchedType): void {\n    this.onTouched = fn;\n  }\n\n  setDisabledState(disabled: boolean): void {\n    this.nzDisabled = disabled;\n    this.cdr.markForCheck();\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { NzOutletModule } from 'ng-zorro-antd/core/outlet';\nimport { NzWaveModule } from 'ng-zorro-antd/core/wave';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\nimport { NzSwitchComponent } from './switch.component';\n\n@NgModule({\n  exports: [NzSwitchComponent],\n  declarations: [NzSwitchComponent],\n  imports: [CommonModule, NzWaveModule, NzIconModule, NzOutletModule]\n})\nexport class NzSwitchModule {}\n"]}