{"version":3,"file":"ng-zorro-antd-icon.js","sources":["ng-zorro-antd/icon/icons.ts","ng-zorro-antd/icon/icon.service.ts","ng-zorro-antd/icon/icon.directive.ts","ng-zorro-antd/icon/icon.module.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { IconDefinition } from '@ant-design/icons-angular';\nimport {\n  BarsOutline,\n  CalendarOutline,\n  CaretDownFill,\n  CaretDownOutline,\n  CaretUpFill,\n  CaretUpOutline,\n  CheckCircleFill,\n  CheckCircleOutline,\n  CheckOutline,\n  ClockCircleOutline,\n  CloseCircleFill,\n  CloseCircleOutline,\n  CloseOutline,\n  CopyOutline,\n  DoubleLeftOutline,\n  DoubleRightOutline,\n  DownOutline,\n  EditOutline,\n  EllipsisOutline,\n  ExclamationCircleFill,\n  ExclamationCircleOutline,\n  EyeOutline,\n  FileFill,\n  FileOutline,\n  FilterFill,\n  InfoCircleFill,\n  InfoCircleOutline,\n  LeftOutline,\n  LoadingOutline,\n  PaperClipOutline,\n  QuestionCircleOutline,\n  RightOutline,\n  SearchOutline,\n  StarFill,\n  SwapRightOutline,\n  UploadOutline,\n  UpOutline\n} from '@ant-design/icons-angular/icons';\n\nexport const NZ_ICONS_USED_BY_ZORRO: IconDefinition[] = [\n  BarsOutline,\n  CalendarOutline,\n  CaretUpFill,\n  CaretUpOutline,\n  CaretDownFill,\n  CaretDownOutline,\n  CheckCircleFill,\n  CheckCircleOutline,\n  CheckOutline,\n  ClockCircleOutline,\n  CloseCircleOutline,\n  CloseCircleFill,\n  CloseOutline,\n  CopyOutline,\n  DoubleLeftOutline,\n  DoubleRightOutline,\n  DownOutline,\n  EditOutline,\n  EllipsisOutline,\n  ExclamationCircleFill,\n  ExclamationCircleOutline,\n  EyeOutline,\n  FileFill,\n  FileOutline,\n  FilterFill,\n  InfoCircleFill,\n  InfoCircleOutline,\n  LeftOutline,\n  LoadingOutline,\n  PaperClipOutline,\n  QuestionCircleOutline,\n  RightOutline,\n  StarFill,\n  SearchOutline,\n  StarFill,\n  UploadOutline,\n  UpOutline,\n  SwapRightOutline\n];\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { DOCUMENT } from '@angular/common';\nimport { HttpBackend } from '@angular/common/http';\nimport { Inject, Injectable, InjectionToken, Optional, RendererFactory2, Self } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { IconDefinition, IconService } from '@ant-design/icons-angular';\nimport { IconConfig, NzConfigService } from 'ng-zorro-antd/core/config';\nimport { warn } from 'ng-zorro-antd/core/logger';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { Subject } from 'rxjs';\nimport { NZ_ICONS_USED_BY_ZORRO } from './icons';\n\nexport interface NzIconfontOption {\n  scriptUrl: string;\n}\n\nexport const NZ_ICONS = new InjectionToken('nz_icons');\nexport const NZ_ICON_DEFAULT_TWOTONE_COLOR = new InjectionToken('nz_icon_default_twotone_color');\nexport const DEFAULT_TWOTONE_COLOR = '#1890ff';\n\n/**\n * It should be a global singleton, otherwise registered icons could not be found.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class NzIconService extends IconService {\n  configUpdated$ = new Subject<void>();\n\n  private iconfontCache = new Set<string>();\n\n  normalizeSvgElement(svg: SVGElement): void {\n    if (!svg.getAttribute('viewBox')) {\n      this._renderer.setAttribute(svg, 'viewBox', '0 0 1024 1024');\n    }\n    if (!svg.getAttribute('width') || !svg.getAttribute('height')) {\n      this._renderer.setAttribute(svg, 'width', '1em');\n      this._renderer.setAttribute(svg, 'height', '1em');\n    }\n    if (!svg.getAttribute('fill')) {\n      this._renderer.setAttribute(svg, 'fill', 'currentColor');\n    }\n  }\n\n  fetchFromIconfont(opt: NzIconfontOption): void {\n    const { scriptUrl } = opt;\n    if (this._document && !this.iconfontCache.has(scriptUrl)) {\n      const script = this._renderer.createElement('script');\n      this._renderer.setAttribute(script, 'src', scriptUrl);\n      this._renderer.setAttribute(script, 'data-namespace', scriptUrl.replace(/^(https?|http):/g, ''));\n      this._renderer.appendChild(this._document.body, script);\n      this.iconfontCache.add(scriptUrl);\n    }\n  }\n\n  createIconfontIcon(type: string): SVGElement {\n    return this._createSVGElementFromString(`<svg><use xlink:href=\"${type}\"></svg>`);\n  }\n\n  constructor(\n    rendererFactory: RendererFactory2,\n    sanitizer: DomSanitizer,\n    protected nzConfigService: NzConfigService,\n    @Optional() handler: HttpBackend,\n    @Optional() @Inject(DOCUMENT) _document: NzSafeAny,\n    @Optional() @Inject(NZ_ICONS) icons?: IconDefinition[]\n  ) {\n    super(rendererFactory, handler, _document, sanitizer);\n\n    this.onConfigChange();\n    this.addIcon(...NZ_ICONS_USED_BY_ZORRO, ...(icons || []));\n    this.configDefaultTwotoneColor();\n    this.configDefaultTheme();\n  }\n\n  private onConfigChange(): void {\n    this.nzConfigService.getConfigChangeEventForComponent('icon').subscribe(() => {\n      this.configDefaultTwotoneColor();\n      this.configDefaultTheme();\n      this.configUpdated$.next();\n    });\n  }\n\n  private configDefaultTheme(): void {\n    const iconConfig = this.getConfig();\n    this.defaultTheme = iconConfig.nzTheme || 'outline';\n  }\n\n  private configDefaultTwotoneColor(): void {\n    const iconConfig = this.getConfig();\n    const defaultTwotoneColor = iconConfig.nzTwotoneColor || DEFAULT_TWOTONE_COLOR;\n\n    let primaryColor = DEFAULT_TWOTONE_COLOR;\n\n    if (defaultTwotoneColor) {\n      if (defaultTwotoneColor.startsWith('#')) {\n        primaryColor = defaultTwotoneColor;\n      } else {\n        warn('Twotone color must be a hex color!');\n      }\n    }\n\n    this.twoToneColor = { primaryColor };\n  }\n\n  private getConfig(): IconConfig {\n    return this.nzConfigService.getConfigForComponent('icon') || {};\n  }\n}\n\nexport const NZ_ICONS_PATCH = new InjectionToken('nz_icons_patch');\n\n@Injectable()\nexport class NzIconPatchService {\n  patched = false;\n\n  constructor(@Self() @Inject(NZ_ICONS_PATCH) private extraIcons: IconDefinition[], private rootIconService: NzIconService) {}\n\n  doPatch(): void {\n    if (this.patched) {\n      return;\n    }\n\n    this.extraIcons.forEach(iconDefinition => this.rootIconService.addIcon(iconDefinition));\n    this.patched = true;\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { AfterContentChecked, Directive, ElementRef, Input, OnChanges, OnInit, Optional, Renderer2, SimpleChanges } from '@angular/core';\nimport { IconDirective, ThemeType } from '@ant-design/icons-angular';\nimport { InputBoolean } from 'ng-zorro-antd/core/util';\n\nimport { NzIconPatchService, NzIconService } from './icon.service';\n\n@Directive({\n  selector: '[nz-icon]',\n  exportAs: 'nzIcon',\n  host: {\n    '[class.anticon]': 'true'\n  }\n})\nexport class NzIconDirective extends IconDirective implements OnInit, OnChanges, AfterContentChecked {\n  cacheClassName: string | null = null;\n  @Input()\n  @InputBoolean()\n  set nzSpin(value: boolean) {\n    this.spin = value;\n  }\n\n  @Input() nzRotate: number = 0;\n\n  @Input()\n  set nzType(value: string) {\n    this.type = value;\n  }\n\n  @Input()\n  set nzTheme(value: ThemeType) {\n    this.theme = value;\n  }\n\n  @Input()\n  set nzTwotoneColor(value: string) {\n    this.twoToneColor = value;\n  }\n\n  @Input()\n  set nzIconfont(value: string) {\n    this.iconfont = value;\n  }\n\n  hostClass?: string;\n\n  private readonly el: HTMLElement;\n  private iconfont?: string;\n  private spin: boolean = false;\n\n  constructor(\n    elementRef: ElementRef,\n    public iconService: NzIconService,\n    public renderer: Renderer2,\n    @Optional() iconPatch: NzIconPatchService\n  ) {\n    super(iconService, elementRef, renderer);\n\n    if (iconPatch) {\n      iconPatch.doPatch();\n    }\n\n    this.el = elementRef.nativeElement;\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    const { nzType, nzTwotoneColor, nzSpin, nzTheme, nzRotate } = changes;\n\n    if (nzType || nzTwotoneColor || nzSpin || nzTheme) {\n      this.changeIcon2();\n    } else if (nzRotate) {\n      this.handleRotate(this.el.firstChild as SVGElement);\n    } else {\n      this._setSVGElement(this.iconService.createIconfontIcon(`#${this.iconfont}`));\n    }\n  }\n\n  ngOnInit(): void {\n    this.renderer.setAttribute(this.el, 'class', `anticon ${this.el.className}`.trim());\n  }\n\n  /**\n   * If custom content is provided, try to normalize SVG elements.\n   */\n  ngAfterContentChecked(): void {\n    if (!this.type) {\n      const children = this.el.children;\n      let length = children.length;\n      if (!this.type && children.length) {\n        while (length--) {\n          const child = children[length];\n          if (child.tagName.toLowerCase() === 'svg') {\n            this.iconService.normalizeSvgElement(child as SVGElement);\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Replacement of `changeIcon` for more modifications.\n   */\n  private changeIcon2(): void {\n    this.setClassName();\n    this._changeIcon().then(svgOrRemove => {\n      if (svgOrRemove) {\n        this.setSVGData(svgOrRemove);\n        this.handleSpin(svgOrRemove);\n        this.handleRotate(svgOrRemove);\n      }\n    });\n  }\n\n  private handleSpin(svg: SVGElement): void {\n    if (this.spin || this.type === 'loading') {\n      this.renderer.addClass(svg, 'anticon-spin');\n    } else {\n      this.renderer.removeClass(svg, 'anticon-spin');\n    }\n  }\n\n  private handleRotate(svg: SVGElement): void {\n    if (this.nzRotate) {\n      this.renderer.setAttribute(svg, 'style', `transform: rotate(${this.nzRotate}deg)`);\n    } else {\n      this.renderer.removeAttribute(svg, 'style');\n    }\n  }\n\n  private setClassName(): void {\n    if (this.cacheClassName) {\n      this.renderer.removeClass(this.el, this.cacheClassName);\n    }\n    this.cacheClassName = `anticon-${this.type}`;\n    this.renderer.addClass(this.el, this.cacheClassName);\n  }\n\n  private setSVGData(svg: SVGElement): void {\n    this.renderer.setAttribute(svg, 'data-icon', this.type as string);\n    this.renderer.setAttribute(svg, 'aria-hidden', 'true');\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nimport { PlatformModule } from '@angular/cdk/platform';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport { IconDefinition } from '@ant-design/icons-angular';\n\nimport { NzIconDirective } from './icon.directive';\nimport { NZ_ICONS, NZ_ICONS_PATCH, NzIconPatchService } from './icon.service';\n\n@NgModule({\n  exports: [NzIconDirective],\n  declarations: [NzIconDirective],\n  imports: [PlatformModule]\n})\nexport class NzIconModule {\n  static forRoot(icons: IconDefinition[]): ModuleWithProviders<NzIconModule> {\n    return {\n      ngModule: NzIconModule,\n      providers: [\n        {\n          provide: NZ_ICONS,\n          useValue: icons\n        }\n      ]\n    };\n  }\n\n  static forChild(icons: IconDefinition[]): ModuleWithProviders<NzIconModule> {\n    return {\n      ngModule: NzIconModule,\n      providers: [\n        NzIconPatchService,\n        {\n          provide: NZ_ICONS_PATCH,\n          useValue: icons\n        }\n      ]\n    };\n  }\n}\n"]}