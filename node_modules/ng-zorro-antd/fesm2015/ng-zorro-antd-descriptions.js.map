{"version":3,"file":"ng-zorro-antd-descriptions.js","sources":["ng-zorro-antd/descriptions/descriptions-item.component.ts","ng-zorro-antd/descriptions/descriptions.component.ts","ng-zorro-antd/descriptions/descriptions.module.ts","ng-zorro-antd/descriptions/typings.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { ChangeDetectionStrategy, Component, Input, OnChanges, OnDestroy, TemplateRef, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { NumberInput } from 'ng-zorro-antd/core/types';\nimport { InputNumber } from 'ng-zorro-antd/core/util';\n\nimport { Subject } from 'rxjs';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  selector: 'nz-descriptions-item',\n  template: `\n    <ng-template>\n      <ng-content></ng-content>\n    </ng-template>\n  `,\n  exportAs: 'nzDescriptionsItem',\n  preserveWhitespaces: false\n})\nexport class NzDescriptionsItemComponent implements OnChanges, OnDestroy {\n  static ngAcceptInputType_nzSpan: NumberInput;\n\n  @ViewChild(TemplateRef, { static: true }) content!: TemplateRef<void>;\n\n  @Input() @InputNumber() nzSpan = 1;\n  @Input() nzTitle: string | TemplateRef<void> = '';\n\n  readonly inputChange$ = new Subject<void>();\n\n  ngOnChanges(): void {\n    this.inputChange$.next();\n  }\n\n  ngOnDestroy(): void {\n    this.inputChange$.complete();\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChildren,\n  Input,\n  OnChanges,\n  OnDestroy,\n  QueryList,\n  SimpleChanges,\n  TemplateRef,\n  ViewEncapsulation\n} from '@angular/core';\nimport { NzConfigService, WithConfig } from 'ng-zorro-antd/core/config';\nimport { warn } from 'ng-zorro-antd/core/logger';\nimport { gridResponsiveMap, NzBreakpointEnum, NzBreakpointService } from 'ng-zorro-antd/core/services';\nimport { BooleanInput } from 'ng-zorro-antd/core/types';\nimport { InputBoolean } from 'ng-zorro-antd/core/util';\n\nimport { merge, Subject } from 'rxjs';\nimport { auditTime, startWith, switchMap, takeUntil, tap } from 'rxjs/operators';\nimport { NzDescriptionsItemComponent } from './descriptions-item.component';\nimport { NzDescriptionsItemRenderProps, NzDescriptionsLayout, NzDescriptionsSize } from './typings';\n\nconst NZ_CONFIG_COMPONENT_NAME = 'descriptions';\nconst defaultColumnMap: { [key in NzBreakpointEnum]: number } = {\n  xxl: 3,\n  xl: 3,\n  lg: 3,\n  md: 3,\n  sm: 2,\n  xs: 1\n};\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  selector: 'nz-descriptions',\n  exportAs: 'nzDescriptions',\n  preserveWhitespaces: false,\n  template: `\n    <div *ngIf=\"nzTitle\" class=\"ant-descriptions-title\">\n      <ng-container *nzStringTemplateOutlet=\"nzTitle\">{{ nzTitle }}</ng-container>\n    </div>\n    <div class=\"ant-descriptions-view\">\n      <table>\n        <tbody>\n          <ng-container *ngIf=\"nzLayout === 'horizontal'\">\n            <tr class=\"ant-descriptions-row\" *ngFor=\"let row of itemMatrix; let i = index\">\n              <ng-container *ngFor=\"let item of row; let isLast = last\">\n                <!-- Horizontal & NOT Bordered -->\n                <ng-container *ngIf=\"!nzBordered\">\n                  <td class=\"ant-descriptions-item\" [colSpan]=\"item.span\">\n                    <span class=\"ant-descriptions-item-label\" [class.ant-descriptions-item-colon]=\"nzColon\">\n                      <ng-container *nzStringTemplateOutlet=\"item.title\">\n                        {{ item.title }}\n                      </ng-container>\n                    </span>\n                    <span class=\"ant-descriptions-item-content\">\n                      <ng-template [ngTemplateOutlet]=\"item.content\"></ng-template>\n                    </span>\n                  </td>\n                </ng-container>\n                <!-- Horizontal & Bordered -->\n                <ng-container *ngIf=\"nzBordered\">\n                  <td class=\"ant-descriptions-item-label\" *nzStringTemplateOutlet=\"item.title\">\n                    <ng-container *nzStringTemplateOutlet=\"item.title\">\n                      {{ item.title }}\n                    </ng-container>\n                  </td>\n                  <td class=\"ant-descriptions-item-content\" [colSpan]=\"item.span * 2 - 1\">\n                    <ng-template [ngTemplateOutlet]=\"item.content\"></ng-template>\n                  </td>\n                </ng-container>\n              </ng-container>\n            </tr>\n          </ng-container>\n\n          <ng-container *ngIf=\"nzLayout === 'vertical'\">\n            <!-- Vertical & NOT Bordered -->\n            <ng-container *ngIf=\"!nzBordered\">\n              <ng-container *ngFor=\"let row of itemMatrix; let i = index\">\n                <tr class=\"ant-descriptions-row\">\n                  <ng-container *ngFor=\"let item of row; let isLast = last\">\n                    <td class=\"ant-descriptions-item\" [colSpan]=\"item.span\">\n                      <span class=\"ant-descriptions-item-label\" [class.ant-descriptions-item-colon]=\"nzColon\">\n                        <ng-container *nzStringTemplateOutlet=\"item.title\">\n                          {{ item.title }}\n                        </ng-container>\n                      </span>\n                    </td>\n                  </ng-container>\n                </tr>\n                <tr class=\"ant-descriptions-row\">\n                  <ng-container *ngFor=\"let item of row; let isLast = last\">\n                    <td class=\"ant-descriptions-item\" [colSpan]=\"item.span\">\n                      <span class=\"ant-descriptions-item-content\">\n                        <ng-template [ngTemplateOutlet]=\"item.content\"></ng-template>\n                      </span>\n                    </td>\n                  </ng-container>\n                </tr>\n              </ng-container>\n            </ng-container>\n            <!-- Vertical & Bordered -->\n            <ng-container *ngIf=\"nzBordered\">\n              <ng-container *ngFor=\"let row of itemMatrix; let i = index\">\n                <tr class=\"ant-descriptions-row\">\n                  <ng-container *ngFor=\"let item of row; let isLast = last\">\n                    <td class=\"ant-descriptions-item-label\" [colSpan]=\"item.span\">\n                      <ng-container *nzStringTemplateOutlet=\"item.title\">\n                        {{ item.title }}\n                      </ng-container>\n                    </td>\n                  </ng-container>\n                </tr>\n                <tr class=\"ant-descriptions-row\">\n                  <ng-container *ngFor=\"let item of row; let isLast = last\">\n                    <td class=\"ant-descriptions-item-content\" [colSpan]=\"item.span\">\n                      <ng-template [ngTemplateOutlet]=\"item.content\"></ng-template>\n                    </td>\n                  </ng-container>\n                </tr>\n              </ng-container>\n            </ng-container>\n          </ng-container>\n        </tbody>\n      </table>\n    </div>\n  `,\n  host: {\n    class: 'ant-descriptions',\n    '[class.ant-descriptions-bordered]': 'nzBordered',\n    '[class.ant-descriptions-middle]': 'nzSize === \"middle\"',\n    '[class.ant-descriptions-small]': 'nzSize === \"small\"'\n  }\n})\nexport class NzDescriptionsComponent implements OnChanges, OnDestroy, AfterContentInit {\n  static ngAcceptInputType_nzBordered: BooleanInput;\n  static ngAcceptInputType_nzColon: BooleanInput;\n\n  @ContentChildren(NzDescriptionsItemComponent) items!: QueryList<NzDescriptionsItemComponent>;\n\n  @Input() @InputBoolean() @WithConfig(NZ_CONFIG_COMPONENT_NAME) nzBordered: boolean = false;\n  @Input() nzLayout: NzDescriptionsLayout = 'horizontal';\n  @Input() @WithConfig(NZ_CONFIG_COMPONENT_NAME) nzColumn: number | { [key in NzBreakpointEnum]: number } = defaultColumnMap;\n  @Input() @WithConfig(NZ_CONFIG_COMPONENT_NAME) nzSize: NzDescriptionsSize = 'default';\n  @Input() nzTitle: string | TemplateRef<void> = '';\n  @Input() @WithConfig(NZ_CONFIG_COMPONENT_NAME) @InputBoolean() nzColon: boolean = true;\n\n  itemMatrix: NzDescriptionsItemRenderProps[][] = [];\n  realColumn = 3;\n\n  private breakpoint: NzBreakpointEnum = NzBreakpointEnum.md;\n  private destroy$ = new Subject<void>();\n\n  constructor(public nzConfigService: NzConfigService, private cdr: ChangeDetectorRef, private breakpointService: NzBreakpointService) {}\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.nzColumn) {\n      this.prepareMatrix();\n    }\n  }\n\n  ngAfterContentInit(): void {\n    const contentChange$ = this.items.changes.pipe(startWith(this.items), takeUntil(this.destroy$));\n\n    merge(\n      contentChange$,\n      contentChange$.pipe(switchMap(() => merge(...this.items.map(i => i.inputChange$)).pipe(auditTime(16)))),\n      this.breakpointService.subscribe(gridResponsiveMap).pipe(tap(bp => (this.breakpoint = bp)))\n    )\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(() => {\n        this.prepareMatrix();\n        this.cdr.markForCheck();\n      });\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  /**\n   * Prepare the render matrix according to description items' spans.\n   */\n  private prepareMatrix(): void {\n    if (!this.items) {\n      return;\n    }\n\n    let currentRow: NzDescriptionsItemRenderProps[] = [];\n    let width = 0;\n\n    const column = (this.realColumn = this.getColumn());\n    const items = this.items.toArray();\n    const length = items.length;\n    const matrix: NzDescriptionsItemRenderProps[][] = [];\n    const flushRow = () => {\n      matrix.push(currentRow);\n      currentRow = [];\n      width = 0;\n    };\n\n    for (let i = 0; i < length; i++) {\n      const item = items[i];\n      const { nzTitle: title, content, nzSpan: span } = item;\n\n      width += span;\n\n      // If the last item make the row's length exceeds `nzColumn`, the last\n      // item should take all the space left. This logic is implemented in the template.\n      // Warn user about that.\n      if (width >= column) {\n        if (width > column) {\n          warn(`\"nzColumn\" is ${column} but we have row length ${width}`);\n        }\n        currentRow.push({ title, content, span: column - (width - span) });\n        flushRow();\n      } else if (i === length - 1) {\n        currentRow.push({ title, content, span: column - (width - span) });\n        flushRow();\n      } else {\n        currentRow.push({ title, content, span });\n      }\n    }\n\n    this.itemMatrix = matrix;\n  }\n\n  private getColumn(): number {\n    if (typeof this.nzColumn !== 'number') {\n      return this.nzColumn[this.breakpoint];\n    }\n\n    return this.nzColumn;\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nimport { PlatformModule } from '@angular/cdk/platform';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { NzOutletModule } from 'ng-zorro-antd/core/outlet';\n\nimport { NzDescriptionsItemComponent } from './descriptions-item.component';\nimport { NzDescriptionsComponent } from './descriptions.component';\n\n@NgModule({\n  imports: [CommonModule, NzOutletModule, PlatformModule],\n  declarations: [NzDescriptionsComponent, NzDescriptionsItemComponent],\n  exports: [NzDescriptionsComponent, NzDescriptionsItemComponent]\n})\nexport class NzDescriptionsModule {}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { TemplateRef } from '@angular/core';\n\nexport type NzDescriptionsSize = 'default' | 'middle' | 'small';\n\nexport type NzDescriptionsLayout = 'horizontal' | 'vertical';\n\nexport interface NzDescriptionsItemRenderProps {\n  title: string | TemplateRef<void>;\n  span: number;\n  content: TemplateRef<void>;\n}\n"]}