{"version":3,"file":"time-picker.component.d.ts","sources":["time-picker.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nimport { CdkOverlayOrigin, ConnectionPositionPair } from '@angular/cdk/overlay';\nimport { AfterViewInit, ChangeDetectorRef, ElementRef, EventEmitter, OnChanges, OnInit, Renderer2, SimpleChanges, TemplateRef } from '@angular/core';\nimport { ControlValueAccessor } from '@angular/forms';\nimport { NzConfigService } from 'ng-zorro-antd/core/config';\nimport { BooleanInput, NzSafeAny } from 'ng-zorro-antd/core/types';\nexport declare class NzTimePickerComponent implements ControlValueAccessor, OnInit, AfterViewInit, OnChanges {\n    nzConfigService: NzConfigService;\n    private element;\n    private renderer;\n    cdr: ChangeDetectorRef;\n    static ngAcceptInputType_nzUse12Hours: BooleanInput;\n    static ngAcceptInputType_nzHideDisabledOptions: BooleanInput;\n    static ngAcceptInputType_nzAllowEmpty: BooleanInput;\n    static ngAcceptInputType_nzDisabled: BooleanInput;\n    static ngAcceptInputType_nzAutoFocus: BooleanInput;\n    private _onChange?;\n    private _onTouched?;\n    isInit: boolean;\n    focused: boolean;\n    value: Date | null;\n    origin: CdkOverlayOrigin;\n    inputSize?: number;\n    overlayPositions: ConnectionPositionPair[];\n    inputRef: ElementRef<HTMLInputElement>;\n    nzSize: string | null;\n    nzHourStep: number;\n    nzMinuteStep: number;\n    nzSecondStep: number;\n    nzClearText: string;\n    nzPopupClassName: string;\n    nzPlaceHolder: string;\n    nzAddOn?: TemplateRef<void>;\n    nzDefaultOpenValue?: Date;\n    nzDisabledHours?: () => number[];\n    nzDisabledMinutes?: (hour: number) => number[];\n    nzDisabledSeconds?: (hour: number, minute: number) => number[];\n    nzFormat: string;\n    nzOpen: boolean;\n    nzUse12Hours: boolean;\n    nzSuffixIcon: string | TemplateRef<NzSafeAny>;\n    readonly nzOpenChange: EventEmitter<boolean>;\n    nzHideDisabledOptions: boolean;\n    nzAllowEmpty: boolean;\n    nzDisabled: boolean;\n    nzAutoFocus: boolean;\n    setValue(value: Date | null): void;\n    open(): void;\n    close(): void;\n    updateAutoFocus(): void;\n    onClickClearBtn(event: MouseEvent): void;\n    onFocus(value: boolean): void;\n    focus(): void;\n    blur(): void;\n    constructor(nzConfigService: NzConfigService, element: ElementRef, renderer: Renderer2, cdr: ChangeDetectorRef);\n    ngOnInit(): void;\n    ngOnChanges(changes: SimpleChanges): void;\n    ngAfterViewInit(): void;\n    writeValue(time: Date | null | undefined): void;\n    registerOnChange(fn: (time: Date | null) => void): void;\n    registerOnTouched(fn: () => void): void;\n    setDisabledState(isDisabled: boolean): void;\n}\n"]}