{"version":3,"file":"ng-zorro-antd-date-picker.js","sources":["ng://ng-zorro-antd/date-picker/standard-types.ts","ng://ng-zorro-antd/date-picker/util.ts","ng://ng-zorro-antd/date-picker/lib/util.ts","ng://ng-zorro-antd/date-picker/calendar-footer.component.ts","ng://ng-zorro-antd/date-picker/date-picker.service.ts","ng://ng-zorro-antd/date-picker/date-range-popup.component.ts","ng://ng-zorro-antd/date-picker/picker.component.ts","ng://ng-zorro-antd/date-picker/date-picker.component.ts","ng://ng-zorro-antd/date-picker/inner-popup.component.ts","ng://ng-zorro-antd/date-picker/lib/abstract-panel-header.ts","ng://ng-zorro-antd/date-picker/lib/date-header.component.ts","ng://ng-zorro-antd/date-picker/lib/abstract-table.ts","ng://ng-zorro-antd/date-picker/lib/date-table.component.ts","ng://ng-zorro-antd/date-picker/lib/decade-header.component.ts","ng://ng-zorro-antd/date-picker/lib/decade-table.component.ts","ng://ng-zorro-antd/date-picker/lib/month-header.component.ts","ng://ng-zorro-antd/date-picker/lib/month-table.component.ts","ng://ng-zorro-antd/date-picker/lib/year-header.component.ts","ng://ng-zorro-antd/date-picker/lib/year-table.component.ts","ng://ng-zorro-antd/date-picker/lib/lib-packer.module.ts","ng://ng-zorro-antd/date-picker/month-picker.component.ts","ng://ng-zorro-antd/date-picker/range-picker.component.ts","ng://ng-zorro-antd/date-picker/week-picker.component.ts","ng://ng-zorro-antd/date-picker/year-picker.component.ts","ng://ng-zorro-antd/date-picker/date-picker.module.ts"],"sourcesContent":["/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { TemplateRef } from '@angular/core';\n\nexport type DisabledDateFn = (d: Date) => boolean;\n\nexport type DisabledTimePartial = 'start' | 'end';\n\nexport type NzDateMode = 'decade' | 'year' | 'month' | 'week' | 'date' | 'time';\n\nexport type RangePartType = 'left' | 'right';\n\nexport type CompatibleDate = Date | Date[];\n\nexport type DisabledTimeFn = (current: Date | Date[], partial?: DisabledTimePartial) => DisabledTimeConfig | undefined;\n\nexport interface DisabledTimeConfig {\n  nzDisabledHours(): number[];\n  nzDisabledMinutes(hour: number): number[];\n  nzDisabledSeconds(hour: number, minute: number): number[];\n}\n\nexport interface SupportTimeOptions {\n  nzFormat?: string;\n  nzHourStep?: number;\n  nzMinuteStep?: number;\n  nzSecondStep?: number;\n  nzDisabledHours?(): number[];\n  nzDisabledMinutes?(hour: number): number[];\n  nzDisabledSeconds?(hour: number, minute: number): number[];\n  nzHideDisabledOptions?: boolean;\n  nzDefaultOpenValue?: Date;\n  nzAddOn?: TemplateRef<void>;\n  nzUse12Hours?: boolean;\n}\n\nexport interface PresetRanges {\n  [key: string]: Date[] | (() => Date[]);\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { CandyDate } from 'ng-zorro-antd/core/time';\nimport { DisabledDateFn, DisabledTimeConfig, DisabledTimeFn } from './standard-types';\n\nexport const PREFIX_CLASS = 'ant-picker';\n\nconst defaultDisabledTime: DisabledTimeConfig = {\n  nzDisabledHours(): number[] {\n    return [];\n  },\n  nzDisabledMinutes(): number[] {\n    return [];\n  },\n  nzDisabledSeconds(): number[] {\n    return [];\n  }\n};\n\nexport function getTimeConfig(value: CandyDate, disabledTime?: DisabledTimeFn): DisabledTimeConfig {\n  let disabledTimeConfig = disabledTime ? disabledTime(value && value.nativeDate) : ({} as DisabledTimeConfig);\n  disabledTimeConfig = {\n    ...defaultDisabledTime,\n    ...disabledTimeConfig\n  };\n  return disabledTimeConfig;\n}\n\nexport function isTimeValidByConfig(value: CandyDate, disabledTimeConfig: DisabledTimeConfig): boolean {\n  let invalidTime = false;\n  if (value) {\n    const hour = value.getHours();\n    const minutes = value.getMinutes();\n    const seconds = value.getSeconds();\n    const disabledHours = disabledTimeConfig.nzDisabledHours();\n    if (disabledHours.indexOf(hour) === -1) {\n      const disabledMinutes = disabledTimeConfig.nzDisabledMinutes(hour);\n      if (disabledMinutes.indexOf(minutes) === -1) {\n        const disabledSeconds = disabledTimeConfig.nzDisabledSeconds(hour, minutes);\n        invalidTime = disabledSeconds.indexOf(seconds) !== -1;\n      } else {\n        invalidTime = true;\n      }\n    } else {\n      invalidTime = true;\n    }\n  }\n  return !invalidTime;\n}\n\nexport function isTimeValid(value: CandyDate, disabledTime: DisabledTimeFn): boolean {\n  const disabledTimeConfig = getTimeConfig(value, disabledTime);\n  return isTimeValidByConfig(value, disabledTimeConfig);\n}\n\nexport function isAllowedDate(value: CandyDate, disabledDate?: DisabledDateFn, disabledTime?: DisabledTimeFn): boolean {\n  if (!value) {\n    return false;\n  }\n  if (disabledDate) {\n    if (disabledDate(value.nativeDate)) {\n      return false;\n    }\n  }\n  if (disabledTime) {\n    if (!isTimeValid(value, disabledTime)) {\n      return false;\n    }\n  }\n  return true;\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Compatible translate the moment-like format pattern to angular's pattern\n * Why? For now, we need to support the existing language formats in AntD, and AntD uses the default temporal syntax.\n *\n * TODO: compare and complete all format patterns\n * Each format docs as below:\n * @link https://momentjs.com/docs/#/displaying/format/\n * @link https://angular.io/api/common/DatePipe#description\n * @param format input format pattern\n */\nexport function transCompatFormat(format: string): string {\n  return (\n    format &&\n    format\n      .replace(/Y/g, 'y') // only support y, yy, yyy, yyyy\n      .replace(/D/g, 'd')\n  ); // d, dd represent of D, DD for momentjs, others are not support\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  OnChanges,\n  Output,\n  SimpleChanges,\n  TemplateRef,\n  ViewEncapsulation\n} from '@angular/core';\nimport { CandyDate } from 'ng-zorro-antd/core/time';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\n\nimport { isNonEmptyString, isTemplateRef } from 'ng-zorro-antd/core/util';\nimport { DateHelperService, NzCalendarI18nInterface } from 'ng-zorro-antd/i18n';\nimport { transCompatFormat } from './lib/util';\nimport { PREFIX_CLASS } from './util';\n\n@Component({\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  // tslint:disable-next-line:component-selector\n  selector: 'calendar-footer',\n  exportAs: 'calendarFooter',\n  template: `\n    <div class=\"{{ prefixCls }}-footer\">\n      <div *ngIf=\"extraFooter\" class=\"{{ prefixCls }}-footer-extra\">\n        <ng-container [ngSwitch]=\"true\">\n          <ng-container *ngSwitchCase=\"isTemplateRef(extraFooter)\">\n            <ng-container *ngTemplateOutlet=\"$any(extraFooter)\"></ng-container>\n          </ng-container>\n          <ng-container *ngSwitchCase=\"isNonEmptyString(extraFooter)\">\n            <span [innerHTML]=\"extraFooter\"></span>\n          </ng-container>\n        </ng-container>\n      </div>\n      <a\n        *ngIf=\"showToday && !hasTimePicker\"\n        class=\"{{ prefixCls }}-today-btn {{ isTodayDisabled ? prefixCls + '-today-btn-disabled' : '' }}\"\n        role=\"button\"\n        (click)=\"isTodayDisabled ? null : onClickToday()\"\n        title=\"{{ todayTitle }}\"\n      >\n        {{ locale.today }}\n      </a>\n      <ul *ngIf=\"hasTimePicker || rangeQuickSelector\" class=\"{{ prefixCls }}-ranges\">\n        <ng-container *ngTemplateOutlet=\"rangeQuickSelector\"></ng-container>\n        <li *ngIf=\"hasTimePicker && !isRange\" class=\"{{ prefixCls }}-now\">\n          <a class=\"{{ prefixCls }}-now-btn\" (click)=\"isTodayDisabled ? null : onClickToday()\">\n            {{ locale.now }}\n          </a>\n        </li>\n        <li *ngIf=\"hasTimePicker\" class=\"{{ prefixCls }}-ok\">\n          <button\n            nz-button\n            type=\"button\"\n            nzType=\"primary\"\n            nzSize=\"small\"\n            [disabled]=\"okDisabled\"\n            (click)=\"okDisabled ? null : clickOk.emit()\"\n          >\n            {{ locale.ok }}\n          </button>\n        </li>\n      </ul>\n    </div>\n  `\n})\nexport class CalendarFooterComponent implements OnChanges {\n  @Input() locale!: NzCalendarI18nInterface;\n  @Input() showToday: boolean = false;\n  @Input() hasTimePicker: boolean = false;\n  @Input() isRange: boolean = false;\n\n  @Input() okDisabled: boolean = false;\n  @Input() disabledDate?: (d: Date) => boolean;\n  @Input() extraFooter?: TemplateRef<void> | string;\n  @Input() rangeQuickSelector: TemplateRef<NzSafeAny> | null = null;\n\n  @Output() readonly clickOk = new EventEmitter<void>();\n  @Output() readonly clickToday = new EventEmitter<CandyDate>();\n\n  prefixCls: string = PREFIX_CLASS;\n  isTemplateRef = isTemplateRef;\n  isNonEmptyString = isNonEmptyString;\n  isTodayDisabled: boolean = false;\n  todayTitle: string = '';\n  private now: CandyDate = new CandyDate();\n\n  constructor(private dateHelper: DateHelperService) {}\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.disabledDate) {\n      this.isTodayDisabled = !!(this.disabledDate && this.disabledDate(this.now.nativeDate));\n    }\n    if (changes.locale) {\n      // NOTE: Compat for DatePipe formatting rules\n      const dateFormat: string = transCompatFormat(this.locale.dateFormat);\n      this.todayTitle = this.dateHelper.format(this.now.nativeDate, dateFormat);\n    }\n  }\n\n  onClickToday(): void {\n    this.clickToday.emit(this.now.clone()); // To prevent the \"now\" being modified from outside, we use clone\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { Injectable, OnDestroy } from '@angular/core';\nimport { CandyDate, cloneDate, CompatibleValue, normalizeRangeValue } from 'ng-zorro-antd/core/time';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { ReplaySubject, Subject } from 'rxjs';\nimport { CompatibleDate, RangePartType } from './standard-types';\n\n@Injectable()\nexport class DatePickerService implements OnDestroy {\n  initialValue?: CompatibleValue;\n  value!: CompatibleValue;\n  activeDate?: CompatibleValue;\n  activeInput: RangePartType = 'left';\n  arrowPositionStyle: { [klass: string]: NzSafeAny } | null = {};\n  isRange = false;\n\n  valueChange$ = new ReplaySubject<CompatibleValue>(1);\n  emitValue$ = new Subject<void>();\n  inputPartChange$ = new Subject<RangePartType>();\n\n  initValue(): void {\n    if (this.isRange) {\n      this.setActiveDate([]);\n      this.value = this.initialValue = [];\n    } else {\n      this.value = this.initialValue = null;\n    }\n  }\n\n  hasValue(value: CompatibleValue = this.value): boolean {\n    if (Array.isArray(value)) {\n      return !!value[0] && !!value[1];\n    } else {\n      return !!value;\n    }\n  }\n\n  makeValue(value?: CompatibleDate): CompatibleValue {\n    if (this.isRange) {\n      return value ? (value as Date[]).map(val => new CandyDate(val)) : [];\n    } else {\n      return value ? new CandyDate(value as Date) : null;\n    }\n  }\n\n  setActiveDate(value: CompatibleValue, normalize: boolean = false): void {\n    if (this.isRange) {\n      this.activeDate = normalize ? normalizeRangeValue(value as CandyDate[]) : value;\n    } else {\n      this.activeDate = cloneDate(value);\n    }\n  }\n\n  setValue(value: CompatibleValue): void {\n    this.value = value;\n    this.valueChange$.next(this.value);\n  }\n\n  getActiveIndex(part: RangePartType = this.activeInput): number {\n    return { left: 0, right: 1 }[part];\n  }\n\n  ngOnDestroy(): void {\n    this.valueChange$.complete();\n    this.emitValue$.complete();\n    this.inputPartChange$.complete();\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n  SimpleChanges,\n  TemplateRef,\n  ViewEncapsulation\n} from '@angular/core';\n\nimport { CandyDate, cloneDate, CompatibleValue, SingleValue, sortRangeValue } from 'ng-zorro-antd/core/time';\nimport { FunctionProp } from 'ng-zorro-antd/core/types';\nimport { NzCalendarI18nInterface } from 'ng-zorro-antd/i18n';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { DatePickerService } from './date-picker.service';\nimport {\n  CompatibleDate,\n  DisabledDateFn,\n  DisabledTimeFn,\n  DisabledTimePartial,\n  NzDateMode,\n  PresetRanges,\n  RangePartType,\n  SupportTimeOptions\n} from './standard-types';\nimport { getTimeConfig, isAllowedDate, PREFIX_CLASS } from './util';\n\n@Component({\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  // tslint:disable-next-line:component-selector\n  selector: 'date-range-popup',\n  exportAs: 'dateRangePopup',\n  template: `\n    <ng-container *ngIf=\"isRange; else singlePanel\">\n      <div class=\"{{ prefixCls }}-range-wrapper {{ prefixCls }}-date-range-wrapper\">\n        <div class=\"{{ prefixCls }}-range-arrow\" [ngStyle]=\"datePickerService?.arrowPositionStyle!\"></div>\n        <div class=\"{{ prefixCls }}-panel-container\">\n          <div class=\"{{ prefixCls }}-panels\">\n            <ng-container *ngTemplateOutlet=\"tplRangePart; context: { partType: 'left' }\"></ng-container>\n            <ng-container *ngTemplateOutlet=\"tplRangePart; context: { partType: 'right' }\"></ng-container>\n          </div>\n          <ng-container *ngTemplateOutlet=\"tplFooter\"></ng-container>\n        </div>\n      </div>\n    </ng-container>\n    <ng-template #singlePanel>\n      <div\n        class=\"{{ prefixCls }}-panel-container {{ showWeek ? prefixCls + '-week-number' : '' }} {{\n          hasTimePicker ? prefixCls + '-time' : ''\n        }} {{ isRange ? prefixCls + '-range' : '' }}\"\n      >\n        <div class=\"{{ prefixCls }}-panel\" tabindex=\"-1\">\n          <!-- Single ONLY -->\n          <ng-container *ngTemplateOutlet=\"tplInnerPopup\"></ng-container>\n          <ng-container *ngTemplateOutlet=\"tplFooter\"></ng-container>\n        </div>\n      </div>\n    </ng-template>\n\n    <ng-template #tplInnerPopup let-partType=\"partType\">\n      <!-- TODO(@wenqi73) [selectedValue] [hoverValue] types-->\n      <inner-popup\n        *ngIf=\"show(partType)\"\n        [showWeek]=\"showWeek\"\n        [endPanelMode]=\"getPanelMode(endPanelMode, partType)\"\n        [partType]=\"partType\"\n        [locale]=\"locale!\"\n        [showTimePicker]=\"hasTimePicker\"\n        [timeOptions]=\"getTimeOptions(partType)\"\n        [panelMode]=\"getPanelMode(panelMode, partType)\"\n        (panelModeChange)=\"onPanelModeChange($event, partType)\"\n        [activeDate]=\"getActiveDate(partType)\"\n        [value]=\"getValue(partType)\"\n        [disabledDate]=\"disabledDate\"\n        [dateRender]=\"dateRender\"\n        [selectedValue]=\"$any(datePickerService?.value)\"\n        [hoverValue]=\"$any(hoverValue)\"\n        (dayHover)=\"onDayHover($event)\"\n        (selectDate)=\"changeValueFromSelect($event, !showTime)\"\n        (selectTime)=\"onSelectTime($event, partType)\"\n        (headerChange)=\"onActiveDateChange($event, partType)\"\n      ></inner-popup>\n    </ng-template>\n\n    <ng-template #tplFooter>\n      <calendar-footer\n        *ngIf=\"hasFooter\"\n        [locale]=\"locale!\"\n        [isRange]=\"isRange\"\n        [showToday]=\"showToday\"\n        [hasTimePicker]=\"hasTimePicker\"\n        [okDisabled]=\"!isAllowed($any(datePickerService?.value))\"\n        [extraFooter]=\"extraFooter\"\n        [rangeQuickSelector]=\"ranges ? tplRangeQuickSelector : null\"\n        (clickOk)=\"onClickOk()\"\n        (clickToday)=\"onClickToday($event)\"\n      ></calendar-footer>\n    </ng-template>\n\n    <ng-template #tplRangePart let-partType=\"partType\">\n      <div class=\"{{ prefixCls }}-panel\">\n        <ng-container *ngTemplateOutlet=\"tplInnerPopup; context: { partType: partType }\"></ng-container>\n      </div>\n    </ng-template>\n\n    <!-- Range ONLY: Range Quick Selector -->\n    <ng-template #tplRangeQuickSelector>\n      <li\n        *ngFor=\"let name of getObjectKeys(ranges)\"\n        class=\"{{ prefixCls }}-preset\"\n        (click)=\"onClickPresetRange(ranges![name])\"\n        (mouseenter)=\"onHoverPresetRange(ranges![name])\"\n        (mouseleave)=\"onPresetRangeMouseLeave()\"\n      >\n        <span class=\"ant-tag ant-tag-blue\">{{ name }}</span>\n      </li>\n    </ng-template>\n  `\n})\nexport class DateRangePopupComponent implements OnInit, OnChanges, OnDestroy {\n  @Input() isRange!: boolean;\n  @Input() showWeek!: boolean;\n  @Input() locale!: NzCalendarI18nInterface | undefined;\n  @Input() format!: string;\n  @Input() placeholder!: string | string[];\n  @Input() disabledDate?: DisabledDateFn;\n  @Input() disabledTime?: DisabledTimeFn; // This will lead to rebuild time options\n  @Input() showToday!: boolean;\n  @Input() showTime!: SupportTimeOptions | boolean;\n  @Input() extraFooter?: TemplateRef<void> | string;\n  @Input() ranges?: PresetRanges;\n  @Input() dateRender?: string | TemplateRef<Date> | FunctionProp<TemplateRef<Date> | string>;\n  @Input() panelMode!: NzDateMode | NzDateMode[];\n  @Input() defaultPickerValue!: CompatibleDate | undefined | null;\n  @Output() readonly panelModeChange = new EventEmitter<NzDateMode | NzDateMode[]>();\n  @Output() readonly calendarChange = new EventEmitter<CompatibleValue>();\n  @Output() readonly resultOk = new EventEmitter<void>(); // Emitted when done with date selecting\n\n  prefixCls: string = PREFIX_CLASS;\n  endPanelMode: NzDateMode | NzDateMode[] = 'date';\n  timeOptions: SupportTimeOptions | SupportTimeOptions[] | null = null;\n  hoverValue: SingleValue[] = []; // Range ONLY\n  destroy$ = new Subject();\n\n  get hasTimePicker(): boolean {\n    return !!this.showTime;\n  }\n\n  get hasFooter(): boolean {\n    return this.showToday || this.hasTimePicker || !!this.extraFooter || !!this.ranges;\n  }\n\n  constructor(public datePickerService: DatePickerService, public cdr: ChangeDetectorRef) {}\n\n  ngOnInit(): void {\n    this.datePickerService.valueChange$.pipe(takeUntil(this.destroy$)).subscribe(() => {\n      this.initActiveDate();\n      this.cdr.markForCheck();\n    });\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    // Parse showTime options\n    if (changes.showTime || changes.disabledTime) {\n      if (this.showTime) {\n        this.buildTimeOptions();\n      }\n    }\n    if (changes.panelMode) {\n      this.endPanelMode = this.panelMode;\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  initActiveDate(): void {\n    const activeDate = this.datePickerService.hasValue()\n      ? this.datePickerService.value\n      : this.datePickerService.makeValue(this.defaultPickerValue!);\n    this.datePickerService.setActiveDate(activeDate, !this.showTime);\n  }\n\n  onClickOk(): void {\n    const otherPart = this.datePickerService.activeInput === 'left' ? 'right' : 'left';\n    const selectedValue = this.datePickerService.value;\n    if (this.isAllowed(selectedValue, true)) {\n      this.resultOk.emit();\n    } else {\n      if (this.isRange && this.isOneAllowed(selectedValue as CandyDate[])) {\n        this.datePickerService.inputPartChange$.next(otherPart);\n      } else {\n        this.datePickerService.inputPartChange$.next();\n      }\n    }\n  }\n\n  onClickToday(value: CandyDate): void {\n    this.changeValueFromSelect(value, !this.showTime);\n  }\n\n  onDayHover(value: CandyDate): void {\n    if (!this.isRange) {\n      return;\n    }\n    const otherInputIndex = { left: 1, right: 0 }[this.datePickerService.activeInput];\n    const base = (this.datePickerService.value as CandyDate[])[otherInputIndex]!;\n    if (base) {\n      if (base.isBeforeDay(value)) {\n        this.hoverValue = [base, value];\n      } else {\n        this.hoverValue = [value, base];\n      }\n    }\n  }\n\n  onPanelModeChange(mode: NzDateMode, partType?: RangePartType): void {\n    if (this.isRange) {\n      const index = this.datePickerService.getActiveIndex(partType);\n      if (index === 0) {\n        this.panelMode = [mode, this.panelMode[1]] as NzDateMode[];\n      } else {\n        this.panelMode = [this.panelMode[0], mode] as NzDateMode[];\n      }\n    } else {\n      this.panelMode = mode;\n    }\n    // this.cdr.markForCheck();\n    this.panelModeChange.emit(this.panelMode);\n  }\n\n  onActiveDateChange(value: CandyDate, partType: RangePartType): void {\n    if (this.isRange) {\n      if (partType === 'left') {\n        this.datePickerService.activeDate = [value, value.addMonths(1)];\n      } else {\n        this.datePickerService.activeDate = [value.addMonths(-1), value];\n      }\n    } else {\n      this.datePickerService.activeDate = value;\n    }\n  }\n\n  onSelectTime(value: CandyDate, partType?: RangePartType): void {\n    if (this.isRange) {\n      const newValue = cloneDate(this.datePickerService.value) as SingleValue[];\n      const index = this.datePickerService.getActiveIndex(partType);\n      newValue[index] = this.overrideHms(value, newValue[index]);\n      this.datePickerService.setValue(newValue);\n    } else {\n      const newValue = this.overrideHms(value, this.datePickerService.value as CandyDate);\n      this.datePickerService.setValue(newValue); // If not select a date currently, use today\n    }\n    this.datePickerService.inputPartChange$.next();\n    this.buildTimeOptions();\n  }\n\n  changeValueFromSelect(value: CandyDate, emitValue: boolean = true): void {\n    if (this.isRange) {\n      let selectedValue: SingleValue[] = cloneDate(this.datePickerService.value) as CandyDate[];\n      let otherPart: RangePartType;\n      if (this.datePickerService.activeInput === 'left') {\n        otherPart = 'right';\n        selectedValue[0] = value;\n      } else {\n        otherPart = 'left';\n        selectedValue[1] = value;\n      }\n\n      selectedValue = sortRangeValue(selectedValue);\n      this.hoverValue = selectedValue;\n      this.datePickerService.setValue(selectedValue);\n      this.datePickerService.setActiveDate(selectedValue, !this.showTime);\n      this.datePickerService.inputPartChange$.next();\n\n      if (!this.isAllowed(selectedValue)) {\n        return;\n      }\n\n      if (emitValue) {\n        // If the other input has value\n        if (this.isBothAllowed(selectedValue)) {\n          this.calendarChange.emit(selectedValue);\n          this.clearHoverValue();\n          this.datePickerService.emitValue$.next();\n        } else {\n          this.calendarChange.emit([value.clone()]);\n          this.datePickerService.inputPartChange$.next(otherPart!);\n        }\n      }\n    } else {\n      this.datePickerService.setValue(value);\n      this.datePickerService.setActiveDate(value, !this.showTime);\n      this.datePickerService.inputPartChange$.next();\n\n      if (!this.isAllowed(value)) {\n        return;\n      }\n      if (emitValue) {\n        this.datePickerService.emitValue$.next();\n      }\n    }\n  }\n\n  getPanelMode(panelMode: NzDateMode | NzDateMode[], partType?: RangePartType): NzDateMode {\n    if (this.isRange) {\n      return panelMode[this.datePickerService.getActiveIndex(partType)] as NzDateMode;\n    } else {\n      return panelMode as NzDateMode;\n    }\n  }\n\n  // Get single value or part value of a range\n  getValue(partType?: RangePartType): CandyDate {\n    if (this.isRange) {\n      return ((this.datePickerService.value as CandyDate[]) || [])[this.datePickerService.getActiveIndex(partType)];\n    } else {\n      return this.datePickerService.value as CandyDate;\n    }\n  }\n\n  getActiveDate(partType?: RangePartType): CandyDate {\n    if (this.isRange) {\n      return (this.datePickerService.activeDate as CandyDate[])[this.datePickerService.getActiveIndex(partType)];\n    } else {\n      return this.datePickerService.activeDate as CandyDate;\n    }\n  }\n\n  disabledStartTime: DisabledTimeFn = (value: Date | Date[]) => {\n    return this.disabledTime && this.disabledTime(value, 'start');\n  };\n\n  disabledEndTime: DisabledTimeFn = (value: Date | Date[]) => {\n    return this.disabledTime && this.disabledTime(value, 'end');\n  };\n\n  isOneAllowed(selectedValue: SingleValue[]): boolean {\n    const index = this.datePickerService.getActiveIndex();\n    const disabledTimeArr = [this.disabledStartTime, this.disabledEndTime];\n    return isAllowedDate(selectedValue[index]!, this.disabledDate, disabledTimeArr[index]);\n  }\n\n  isBothAllowed(selectedValue: SingleValue[]): boolean {\n    return (\n      isAllowedDate(selectedValue[0]!, this.disabledDate, this.disabledStartTime) &&\n      isAllowedDate(selectedValue[1]!, this.disabledDate, this.disabledEndTime)\n    );\n  }\n\n  isAllowed(value: CompatibleValue, isBoth: boolean = false): boolean {\n    if (this.isRange) {\n      return isBoth ? this.isBothAllowed(value as CandyDate[]) : this.isOneAllowed(value as CandyDate[]);\n    } else {\n      return isAllowedDate(value as CandyDate, this.disabledDate, this.disabledTime);\n    }\n  }\n\n  getTimeOptions(partType?: RangePartType): SupportTimeOptions | null {\n    if (this.showTime && this.timeOptions) {\n      return this.timeOptions instanceof Array ? this.timeOptions[this.datePickerService.getActiveIndex(partType)] : this.timeOptions;\n    }\n    return null;\n  }\n\n  onClickPresetRange(val: PresetRanges[keyof PresetRanges]): void {\n    const value = typeof val === 'function' ? val() : val;\n    if (value) {\n      this.datePickerService.setValue([new CandyDate(value[0]), new CandyDate(value[1])]);\n      this.resultOk.emit();\n    }\n  }\n\n  onPresetRangeMouseLeave(): void {\n    this.clearHoverValue();\n  }\n\n  onHoverPresetRange(val: PresetRanges[keyof PresetRanges]): void {\n    if (typeof val !== 'function') {\n      this.hoverValue = [new CandyDate(val[0]), new CandyDate(val[1])];\n    }\n  }\n\n  getObjectKeys(obj?: PresetRanges): string[] {\n    return obj ? Object.keys(obj) : [];\n  }\n\n  show(partType: RangePartType): boolean {\n    const hide = this.showTime && this.isRange && this.datePickerService.activeInput !== partType;\n    return !hide;\n  }\n\n  private clearHoverValue(): void {\n    this.hoverValue = [];\n  }\n\n  private buildTimeOptions(): void {\n    if (this.showTime) {\n      const showTime = typeof this.showTime === 'object' ? this.showTime : {};\n      if (this.isRange) {\n        const value = this.datePickerService.value as CandyDate[];\n        this.timeOptions = [this.overrideTimeOptions(showTime, value[0], 'start'), this.overrideTimeOptions(showTime, value[1], 'end')];\n      } else {\n        this.timeOptions = this.overrideTimeOptions(showTime, this.datePickerService.value as CandyDate);\n      }\n    } else {\n      this.timeOptions = null;\n    }\n  }\n\n  private overrideTimeOptions(origin: SupportTimeOptions, value: CandyDate, partial?: DisabledTimePartial): SupportTimeOptions {\n    let disabledTimeFn;\n    if (partial) {\n      disabledTimeFn = partial === 'start' ? this.disabledStartTime : this.disabledEndTime;\n    } else {\n      disabledTimeFn = this.disabledTime;\n    }\n    return { ...origin, ...getTimeConfig(value, disabledTimeFn) };\n  }\n\n  private overrideHms(newValue: CandyDate | null, oldValue: CandyDate | null): CandyDate {\n    // tslint:disable-next-line:no-parameter-reassignment\n    newValue = newValue || new CandyDate();\n    // tslint:disable-next-line:no-parameter-reassignment\n    oldValue = oldValue || new CandyDate();\n    return oldValue.setHms(newValue.getHours(), newValue.getMinutes(), newValue.getSeconds());\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport {\n  CdkConnectedOverlay,\n  CdkOverlayOrigin,\n  ConnectedOverlayPositionChange,\n  ConnectionPositionPair,\n  HorizontalConnectionPos,\n  VerticalConnectionPos\n} from '@angular/cdk/overlay';\nimport { DOCUMENT } from '@angular/common';\nimport {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChild,\n  ElementRef,\n  EventEmitter,\n  Inject,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n  QueryList,\n  SimpleChanges,\n  TemplateRef,\n  ViewChild,\n  ViewChildren,\n  ViewEncapsulation\n} from '@angular/core';\nimport { slideMotion } from 'ng-zorro-antd/core/animation';\n\nimport { CandyDate, CompatibleValue } from 'ng-zorro-antd/core/time';\nimport { NgStyleInterface, NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { DateHelperService } from 'ng-zorro-antd/i18n';\nimport { fromEvent, Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { DatePickerService } from './date-picker.service';\nimport { DateRangePopupComponent } from './date-range-popup.component';\nimport { RangePartType } from './standard-types';\nimport { PREFIX_CLASS } from './util';\n\n@Component({\n  encapsulation: ViewEncapsulation.None,\n  selector: '[nz-picker]',\n  exportAs: 'nzPicker',\n  template: `\n    <!-- Content of single picker -->\n    <div *ngIf=\"!isRange\" class=\"{{ prefixCls }}-input\">\n      <input\n        #pickerInput\n        [class.ant-input-disabled]=\"disabled\"\n        [disabled]=\"disabled\"\n        [readOnly]=\"inputReadOnly\"\n        [(ngModel)]=\"inputValue\"\n        placeholder=\"{{ getPlaceholder() }}\"\n        [size]=\"inputSize\"\n        (focus)=\"onFocus()\"\n        (blur)=\"onBlur()\"\n        (input)=\"onInputKeyup($event)\"\n        (keyup.enter)=\"onInputKeyup($event, true)\"\n      />\n      <ng-container *ngTemplateOutlet=\"tplRightRest\"></ng-container>\n    </div>\n\n    <!-- Content of range picker -->\n    <ng-container *ngIf=\"isRange\">\n      <div class=\"{{ prefixCls }}-input\">\n        <ng-container *ngTemplateOutlet=\"tplRangeInput; context: { partType: 'left' }\"></ng-container>\n      </div>\n      <div #separatorElement class=\"{{ prefixCls }}-range-separator\">\n        <span class=\"{{ prefixCls }}-separator\">\n          <ng-container *ngIf=\"separator; else defaultSeparator\">{{ separator }}</ng-container>\n        </span>\n        <ng-template #defaultSeparator>\n          <i nz-icon nzType=\"swap-right\" nzTheme=\"outline\"></i>\n        </ng-template>\n      </div>\n      <div class=\"{{ prefixCls }}-input\">\n        <ng-container *ngTemplateOutlet=\"tplRangeInput; context: { partType: 'right' }\"></ng-container>\n      </div>\n      <ng-container *ngTemplateOutlet=\"tplRightRest\"></ng-container>\n    </ng-container>\n    <!-- Input for Range ONLY -->\n    <ng-template #tplRangeInput let-partType=\"partType\">\n      <input\n        #rangePickerInput\n        [disabled]=\"disabled\"\n        [readOnly]=\"inputReadOnly\"\n        [size]=\"inputSize\"\n        (click)=\"onClickInputBox($event, partType)\"\n        (blur)=\"onBlur()\"\n        (input)=\"onInputKeyup($event)\"\n        (focus)=\"onFocus(partType)\"\n        (keyup.enter)=\"onInputKeyup($event, true)\"\n        [(ngModel)]=\"inputValue[datePickerService.getActiveIndex(partType)]\"\n        placeholder=\"{{ getPlaceholder(partType) }}\"\n      />\n    </ng-template>\n\n    <!-- Right operator icons -->\n    <ng-template #tplRightRest>\n      <div class=\"{{ prefixCls }}-active-bar\" [ngStyle]=\"activeBarStyle\"></div>\n      <span *ngIf=\"showClear()\" class=\"{{ prefixCls }}-clear\" (click)=\"onClickClear($event)\">\n        <i nz-icon nzType=\"close-circle\" nzTheme=\"fill\"></i>\n      </span>\n      <span class=\"{{ prefixCls }}-suffix\">\n        <ng-container *nzStringTemplateOutlet=\"suffixIcon; let suffixIcon\">\n          <i nz-icon [nzType]=\"suffixIcon\"></i>\n        </ng-container>\n      </span>\n    </ng-template>\n\n    <!-- Overlay -->\n    <ng-template\n      cdkConnectedOverlay\n      nzConnectedOverlay\n      [cdkConnectedOverlayOrigin]=\"origin\"\n      [cdkConnectedOverlayOpen]=\"realOpenState\"\n      [cdkConnectedOverlayHasBackdrop]=\"!isOpenHandledByUser()\"\n      [cdkConnectedOverlayPositions]=\"overlayPositions\"\n      [cdkConnectedOverlayTransformOriginOn]=\"'.ant-picker-wrapper'\"\n      (positionChange)=\"onPositionChange($event)\"\n      (backdropClick)=\"onClickBackdrop()\"\n      (detach)=\"onOverlayDetach()\"\n      (overlayKeydown)=\"onOverlayKeydown($event)\"\n    >\n      <div\n        class=\"ant-picker-wrapper\"\n        [nzNoAnimation]=\"noAnimation\"\n        [@slideMotion]=\"'enter'\"\n        (@slideMotion.done)=\"animationDone()\"\n        style=\"position: relative;\"\n      >\n        <div\n          class=\"{{ prefixCls }}-dropdown {{ dropdownClassName }}\"\n          [class.ant-picker-dropdown-placement-bottomLeft]=\"currentPositionY === 'bottom' && currentPositionX === 'start'\"\n          [class.ant-picker-dropdown-placement-topLeft]=\"currentPositionY === 'top' && currentPositionX === 'start'\"\n          [class.ant-picker-dropdown-placement-bottomRight]=\"currentPositionY === 'bottom' && currentPositionX === 'end'\"\n          [class.ant-picker-dropdown-placement-topRight]=\"currentPositionY === 'top' && currentPositionX === 'end'\"\n          [class.ant-picker-dropdown-range]=\"isRange\"\n          [ngStyle]=\"popupStyle\"\n        >\n          <!-- Compatible for overlay that not support offset dynamically and immediately -->\n          <ng-content></ng-content>\n        </div>\n      </div>\n    </ng-template>\n  `,\n  animations: [slideMotion],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NzPickerComponent implements OnInit, AfterViewInit, OnChanges, OnDestroy {\n  @Input() noAnimation: boolean = false;\n  @Input() isRange: boolean = false;\n  @Input() open: boolean | undefined = undefined;\n  @Input() disabled: boolean = false;\n  @Input() inputReadOnly: boolean = false;\n  @Input() placeholder!: string | string[];\n  @Input() allowClear?: boolean;\n  @Input() autoFocus?: boolean;\n  @Input() format!: string;\n  @Input() separator?: string;\n  @Input() popupStyle: NgStyleInterface | null = null;\n  @Input() dropdownClassName?: string;\n  @Input() suffixIcon?: string | TemplateRef<NzSafeAny>;\n\n  @Output() readonly focusChange = new EventEmitter<boolean>();\n  @Output() readonly valueChange = new EventEmitter<CandyDate | CandyDate[] | null>();\n  @Output() readonly openChange = new EventEmitter<boolean>(); // Emitted when overlay's open state change\n\n  @ViewChild(CdkConnectedOverlay, { static: false }) cdkConnectedOverlay?: CdkConnectedOverlay;\n  @ViewChild('separatorElement', { static: false }) separatorElement?: ElementRef;\n  @ViewChild('pickerInput', { static: false }) pickerInput?: ElementRef<HTMLInputElement>;\n  @ViewChildren('rangePickerInput') rangePickerInputs!: QueryList<ElementRef<HTMLInputElement>>;\n  @ContentChild(DateRangePopupComponent) panel!: DateRangePopupComponent;\n\n  origin: CdkOverlayOrigin;\n  document: Document;\n  inputSize?: number;\n  inputWidth?: number;\n  arrowLeft?: number;\n  destroy$ = new Subject();\n  prefixCls = PREFIX_CLASS;\n  // Index signature in type 'string | string[]' only permits reading\n  inputValue: NzSafeAny;\n  activeBarStyle: object = { position: 'absolute' };\n  animationOpenState = false;\n  overlayOpen: boolean = false; // Available when \"open\"=undefined\n  overlayPositions: ConnectionPositionPair[] = [\n    {\n      offsetX: -12,\n      offsetY: 8,\n      originX: 'start',\n      originY: 'bottom',\n      overlayX: 'start',\n      overlayY: 'top'\n    },\n    {\n      offsetX: -12,\n      offsetY: -8,\n      originX: 'start',\n      originY: 'top',\n      overlayX: 'start',\n      overlayY: 'bottom'\n    },\n    {\n      offsetX: 12,\n      offsetY: 8,\n      originX: 'end',\n      originY: 'bottom',\n      overlayX: 'end',\n      overlayY: 'top'\n    },\n    {\n      offsetX: 12,\n      offsetY: -8,\n      originX: 'end',\n      originY: 'top',\n      overlayX: 'end',\n      overlayY: 'bottom'\n    }\n  ] as ConnectionPositionPair[];\n  currentPositionX: HorizontalConnectionPos = 'start';\n  currentPositionY: VerticalConnectionPos = 'bottom';\n\n  get realOpenState(): boolean {\n    // The value that really decide the open state of overlay\n    return this.isOpenHandledByUser() ? !!this.open : this.overlayOpen;\n  }\n\n  constructor(\n    private elementRef: ElementRef,\n    private dateHelper: DateHelperService,\n    private changeDetector: ChangeDetectorRef,\n    public datePickerService: DatePickerService,\n    @Inject(DOCUMENT) doc: NzSafeAny\n  ) {\n    this.document = doc;\n    this.origin = new CdkOverlayOrigin(this.elementRef);\n    this.updateInputValue();\n  }\n\n  ngOnInit(): void {\n    this.inputSize = Math.max(10, this.format.length) + 2;\n\n    this.datePickerService.valueChange$.pipe(takeUntil(this.destroy$)).subscribe(() => {\n      this.updateInputValue();\n      this.changeDetector.markForCheck();\n    });\n  }\n\n  ngAfterViewInit(): void {\n    if (this.autoFocus) {\n      this.focus();\n    }\n\n    if (this.isRange) {\n      fromEvent(window, 'resize')\n        .pipe(takeUntil(this.destroy$))\n        .subscribe(() => {\n          this.resetInputWidthAndArrowLeft();\n        });\n    }\n    this.datePickerService.inputPartChange$.pipe(takeUntil(this.destroy$)).subscribe(partType => {\n      if (partType) {\n        this.datePickerService.activeInput = partType;\n      }\n      this.datePickerService.arrowPositionStyle = {\n        left: this.datePickerService.activeInput === 'left' ? '0px' : `${this.arrowLeft}px`\n      };\n      this.activeBarStyle = {\n        ...this.activeBarStyle,\n        ...this.datePickerService.arrowPositionStyle,\n        width: `${this.inputWidth}px`\n      };\n      if (this.document.activeElement !== this.getInput(this.datePickerService.activeInput)) {\n        this.focus();\n      }\n      this.panel?.cdr.markForCheck();\n      this.changeDetector.markForCheck();\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.open) {\n      this.animationStart();\n    }\n  }\n\n  resetInputWidthAndArrowLeft(): void {\n    this.inputWidth = this.rangePickerInputs?.first?.nativeElement.offsetWidth || 0;\n    this.arrowLeft = this.inputWidth + this.separatorElement?.nativeElement.offsetWidth || 0;\n  }\n\n  getInput(partType?: RangePartType): HTMLInputElement {\n    return this.isRange\n      ? partType === 'left'\n        ? this.rangePickerInputs.first.nativeElement\n        : this.rangePickerInputs.last.nativeElement\n      : this.pickerInput!.nativeElement;\n  }\n\n  focus(): void {\n    this.getInput(this.datePickerService.activeInput).focus(); // Focus on the first input\n  }\n\n  onFocus(partType?: RangePartType): void {\n    if (partType) {\n      this.datePickerService.inputPartChange$.next(partType);\n    }\n    this.focusChange.emit(true);\n  }\n\n  onBlur(): void {\n    this.focusChange.emit(false);\n  }\n\n  // Show overlay content\n  showOverlay(): void {\n    if (!this.realOpenState) {\n      this.resetInputWidthAndArrowLeft();\n      this.overlayOpen = true;\n      this.animationStart();\n      this.focus();\n      this.openChange.emit(true);\n    }\n  }\n\n  hideOverlay(): void {\n    if (this.realOpenState) {\n      this.overlayOpen = false;\n      this.openChange.emit(false);\n      this.focus();\n    }\n  }\n\n  showClear(): boolean {\n    return !this.disabled && !this.isEmptyValue(this.datePickerService.value) && !!this.allowClear;\n  }\n\n  onClickInputBox(event: MouseEvent, partType?: RangePartType): void {\n    event.stopPropagation();\n\n    if (!this.disabled && !this.isOpenHandledByUser()) {\n      this.showOverlay();\n    }\n    this.onFocus(partType);\n  }\n\n  onClickBackdrop(): void {\n    if (this.panel.isAllowed(this.datePickerService.value!, true)) {\n      this.updateInputValue();\n      this.datePickerService.emitValue$.next();\n    } else {\n      this.datePickerService.setValue(this.datePickerService.initialValue!);\n      this.hideOverlay();\n    }\n  }\n\n  onOverlayDetach(): void {\n    this.hideOverlay();\n  }\n\n  onOverlayKeydown(event: KeyboardEvent): void {\n    if (event.key === 'Escape') {\n      this.datePickerService.setValue(this.datePickerService.initialValue!);\n    }\n  }\n\n  // NOTE: A issue here, the first time position change, the animation will not be triggered.\n  // Because the overlay's \"positionChange\" event is emitted after the content's full shown up.\n  // All other components like \"nz-dropdown\" which depends on overlay also has the same issue.\n  // See: https://github.com/NG-ZORRO/ng-zorro-antd/issues/1429\n  onPositionChange(position: ConnectedOverlayPositionChange): void {\n    this.currentPositionX = position.connectionPair.originX;\n    this.currentPositionY = position.connectionPair.originY;\n    this.changeDetector.detectChanges(); // Take side-effects to position styles\n  }\n\n  onClickClear(event: MouseEvent): void {\n    event.preventDefault();\n    event.stopPropagation();\n\n    this.datePickerService.setValue(this.isRange ? [] : null);\n    this.datePickerService.emitValue$.next();\n  }\n\n  updateInputValue(): void {\n    const newValue = this.datePickerService.value;\n    if (this.isRange) {\n      this.inputValue = newValue ? (newValue as CandyDate[]).map(v => this.formatValue(v)) : ['', ''];\n    } else {\n      this.inputValue = this.formatValue(newValue as CandyDate);\n    }\n  }\n\n  formatValue(value: CandyDate): string {\n    return this.dateHelper.format(value && (value as CandyDate).nativeDate, this.format);\n  }\n\n  onInputKeyup(event: Event, emitValue: boolean = false): void {\n    if (!this.realOpenState) {\n      this.showOverlay();\n      return;\n    }\n    const date = this.checkValidInputDate((event as KeyboardEvent).target!);\n    if (this.panel && date) {\n      this.panel.changeValueFromSelect(date, emitValue);\n    }\n  }\n\n  private checkValidInputDate(inputTarget: EventTarget): CandyDate | null {\n    const input = (inputTarget as HTMLInputElement).value;\n    const date = new CandyDate(this.dateHelper.parseDate(input, this.format));\n\n    if (!date.isValid() || input !== this.dateHelper.format(date.nativeDate, this.format)) {\n      return null;\n    }\n\n    return date;\n  }\n\n  getPlaceholder(partType?: RangePartType): string {\n    return this.isRange ? this.placeholder[this.datePickerService.getActiveIndex(partType!)] : (this.placeholder as string);\n  }\n\n  isEmptyValue(value: CompatibleValue): boolean {\n    if (value === null) {\n      return true;\n    } else if (this.isRange) {\n      return !value || !Array.isArray(value) || value.every(val => !val);\n    } else {\n      return !value;\n    }\n  }\n\n  // Whether open state is permanently controlled by user himself\n  isOpenHandledByUser(): boolean {\n    return this.open !== undefined;\n  }\n\n  animationStart(): void {\n    if (this.realOpenState) {\n      this.animationOpenState = true;\n    }\n  }\n\n  animationDone(): void {\n    if (!this.realOpenState) {\n      this.animationOpenState = false;\n      this.changeDetector.markForCheck();\n    }\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Host,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Output,\n  Renderer2,\n  SimpleChanges,\n  TemplateRef,\n  ViewChild,\n  ViewEncapsulation\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { warnDeprecation } from 'ng-zorro-antd/core/logger';\nimport { NzNoAnimationDirective } from 'ng-zorro-antd/core/no-animation';\nimport { CandyDate, cloneDate, CompatibleValue } from 'ng-zorro-antd/core/time';\nimport { BooleanInput, FunctionProp, NzSafeAny, OnChangeType, OnTouchedType } from 'ng-zorro-antd/core/types';\nimport { InputBoolean, toBoolean, valueFunctionProp } from 'ng-zorro-antd/core/util';\nimport { DateHelperService, NzDatePickerI18nInterface, NzI18nService } from 'ng-zorro-antd/i18n';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { DatePickerService } from './date-picker.service';\n\nimport { NzConfigService, WithConfig } from 'ng-zorro-antd/core/config';\nimport { NzPickerComponent } from './picker.component';\nimport { CompatibleDate, DisabledTimeFn, NzDateMode, PresetRanges, SupportTimeOptions } from './standard-types';\n\nconst POPUP_STYLE_PATCH = { position: 'relative' }; // Aim to override antd's style to support overlay's position strategy (position:absolute will cause it not working beacuse the overlay can't get the height/width of it's content)\nconst NZ_CONFIG_COMPONENT_NAME = 'datePicker';\n\n/**\n * The base picker for all common APIs\n */\n@Component({\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  selector: 'nz-date-picker,nz-week-picker,nz-month-picker,nz-year-picker,nz-range-picker',\n  exportAs: 'nzDatePicker',\n  template: `\n    <div\n      nz-picker\n      [isRange]=\"isRange\"\n      [open]=\"nzOpen\"\n      [separator]=\"nzSeparator\"\n      [disabled]=\"nzDisabled\"\n      [inputReadOnly]=\"nzInputReadOnly\"\n      [format]=\"nzFormat\"\n      [allowClear]=\"nzAllowClear\"\n      [autoFocus]=\"nzAutoFocus\"\n      [placeholder]=\"nzPlaceHolder\"\n      [ngClass]=\"nzClassName\"\n      style=\"display: inherit; align-items: center; width: 100%;\"\n      [ngStyle]=\"nzStyle\"\n      [dropdownClassName]=\"nzDropdownClassName\"\n      [popupStyle]=\"nzPopupStyle\"\n      [noAnimation]=\"!!noAnimation?.nzNoAnimation\"\n      [suffixIcon]=\"nzSuffixIcon\"\n      (openChange)=\"onOpenChange($event)\"\n      (focusChange)=\"onFocusChange($event)\"\n    >\n      <date-range-popup\n        *ngIf=\"realOpenState\"\n        [isRange]=\"isRange\"\n        [defaultPickerValue]=\"nzDefaultPickerValue\"\n        [showWeek]=\"showWeek\"\n        [panelMode]=\"nzMode\"\n        (panelModeChange)=\"onPanelModeChange($event)\"\n        (calendarChange)=\"onCalendarChange($event)\"\n        [locale]=\"nzLocale?.lang!\"\n        [showToday]=\"realShowToday\"\n        [showTime]=\"nzShowTime\"\n        [format]=\"nzFormat\"\n        [dateRender]=\"nzDateRender\"\n        [disabledDate]=\"nzDisabledDate\"\n        [disabledTime]=\"nzDisabledTime\"\n        [placeholder]=\"nzPlaceHolder\"\n        [extraFooter]=\"extraFooter\"\n        [ranges]=\"nzRanges\"\n        (resultOk)=\"onResultOk()\"\n      ></date-range-popup>\n    </div>\n  `,\n  host: {\n    '[class.ant-picker]': `true`,\n    '[class.ant-picker-range]': `isRange`,\n    '[class.ant-picker-large]': `nzSize === 'large'`,\n    '[class.ant-picker-small]': `nzSize === 'small'`,\n    '[class.ant-picker-disabled]': `nzDisabled`,\n    '(click)': 'picker.onClickInputBox($event)'\n  },\n  providers: [\n    DatePickerService,\n    {\n      provide: NG_VALUE_ACCESSOR,\n      multi: true,\n      useExisting: forwardRef(() => NzDatePickerComponent)\n    }\n  ]\n})\nexport class NzDatePickerComponent implements OnInit, OnChanges, OnDestroy, ControlValueAccessor {\n  static ngAcceptInputType_nzAllowClear: BooleanInput;\n  static ngAcceptInputType_nzAutoFocus: BooleanInput;\n  static ngAcceptInputType_nzDisabled: BooleanInput;\n  static ngAcceptInputType_nzInputReadOnly: BooleanInput;\n  static ngAcceptInputType_nzOpen: BooleanInput;\n  static ngAcceptInputType_nzShowToday: BooleanInput;\n  static ngAcceptInputType_nzMode: NzDateMode | NzDateMode[] | string | string[] | null | undefined;\n  static ngAcceptInputType_nzShowTime: BooleanInput | SupportTimeOptions | null | undefined;\n\n  isRange: boolean = false; // Indicate whether the value is a range value\n  showWeek: boolean = false; // Should show as week picker\n  focused: boolean = false;\n  extraFooter?: TemplateRef<NzSafeAny> | string;\n\n  protected destroyed$: Subject<void> = new Subject();\n  protected isCustomPlaceHolder: boolean = false;\n  private showTime: SupportTimeOptions | boolean = false;\n\n  // --- Common API\n  @Input() @InputBoolean() nzAllowClear: boolean = true;\n  @Input() @InputBoolean() nzAutoFocus: boolean = false;\n  @Input() @InputBoolean() nzDisabled: boolean = false;\n  @Input() @InputBoolean() nzInputReadOnly: boolean = false;\n  @Input() @InputBoolean() nzOpen?: boolean;\n  /**\n   * @deprecated 10.0.0. This is deprecated and going to be removed in 10.0.0.\n   */\n  @Input() nzClassName: string = '';\n  @Input() nzDisabledDate?: (d: Date) => boolean;\n  @Input() nzLocale!: NzDatePickerI18nInterface;\n  @Input() nzPlaceHolder: string | [string, string] = '';\n  @Input() nzPopupStyle: object = POPUP_STYLE_PATCH;\n  @Input() nzDropdownClassName?: string;\n  @Input() nzSize: 'large' | 'small' | 'default' = 'default';\n  /**\n   * @deprecated 10.0.0. This is deprecated and going to be removed in 10.0.0.\n   */\n  @Input() nzStyle: object | null = null;\n  @Input() nzFormat!: string;\n  @Input() nzDateRender?: TemplateRef<NzSafeAny> | string | FunctionProp<TemplateRef<Date> | string>;\n  @Input() nzDisabledTime?: DisabledTimeFn;\n  @Input() nzRenderExtraFooter?: TemplateRef<NzSafeAny> | string | FunctionProp<TemplateRef<NzSafeAny> | string>;\n  @Input() @InputBoolean() nzShowToday: boolean = true;\n  @Input() nzMode: NzDateMode | NzDateMode[] = 'date';\n  @Input() nzRanges?: PresetRanges;\n  @Input() nzDefaultPickerValue: CompatibleDate | null = null;\n  @Input() @WithConfig(NZ_CONFIG_COMPONENT_NAME) nzSeparator?: string = undefined;\n  @Input() @WithConfig(NZ_CONFIG_COMPONENT_NAME) nzSuffixIcon: string | TemplateRef<NzSafeAny> = 'calendar';\n\n  // TODO(@wenqi73) The PanelMode need named for each pickers and export\n  @Output() readonly nzOnPanelChange = new EventEmitter<NzDateMode | NzDateMode[] | string | string[]>();\n  @Output() readonly nzOnCalendarChange = new EventEmitter<Array<Date | null>>();\n  @Output() readonly nzOnOk = new EventEmitter<CompatibleDate | null>();\n  @Output() readonly nzOnOpenChange = new EventEmitter<boolean>();\n\n  @ViewChild(NzPickerComponent, { static: true }) picker!: NzPickerComponent;\n\n  @Input() get nzShowTime(): SupportTimeOptions | boolean {\n    return this.showTime;\n  }\n\n  set nzShowTime(value: SupportTimeOptions | boolean) {\n    this.showTime = typeof value === 'object' ? value : toBoolean(value);\n  }\n\n  get realOpenState(): boolean {\n    return this.picker.animationOpenState;\n  } // Use picker's real open state to let re-render the picker's content when shown up\n\n  constructor(\n    public nzConfigService: NzConfigService,\n    public datePickerService: DatePickerService,\n    protected i18n: NzI18nService,\n    protected cdr: ChangeDetectorRef,\n    private renderer: Renderer2,\n    private elementRef: ElementRef,\n    protected dateHelper: DateHelperService,\n    @Host() @Optional() public noAnimation?: NzNoAnimationDirective\n  ) {}\n\n  ngOnInit(): void {\n    // Subscribe the every locale change if the nzLocale is not handled by user\n    if (!this.nzLocale) {\n      this.i18n.localeChange.pipe(takeUntil(this.destroyed$)).subscribe(() => this.setLocale());\n    }\n\n    // Default value\n    this.datePickerService.isRange = this.isRange;\n    this.datePickerService.initValue();\n    this.datePickerService.emitValue$.pipe(takeUntil(this.destroyed$)).subscribe(_ => {\n      const value = this.datePickerService.value;\n      this.datePickerService.initialValue = cloneDate(value);\n      if (this.isRange) {\n        const vAsRange = value as CandyDate[];\n        if (vAsRange.length) {\n          this.onChangeFn([vAsRange[0].nativeDate, vAsRange[1].nativeDate]);\n        } else {\n          this.onChangeFn([]);\n        }\n      } else {\n        if (value) {\n          this.onChangeFn((value as CandyDate).nativeDate);\n        } else {\n          this.onChangeFn(null);\n        }\n      }\n      this.onTouchedFn();\n      // When value emitted, overlay will be closed\n      this.picker.hideOverlay();\n    });\n\n    // Default format when it's empty\n    if (!this.nzFormat) {\n      if (this.showWeek) {\n        this.nzFormat = 'yyyy-ww'; // Format for week\n      } else {\n        this.nzFormat = this.nzShowTime ? 'yyyy-MM-dd HH:mm:ss' : 'yyyy-MM-dd';\n      }\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.nzPopupStyle) {\n      // Always assign the popup style patch\n      this.nzPopupStyle = this.nzPopupStyle ? { ...this.nzPopupStyle, ...POPUP_STYLE_PATCH } : POPUP_STYLE_PATCH;\n    }\n\n    // Mark as customized placeholder by user once nzPlaceHolder assigned at the first time\n    if (changes.nzPlaceHolder && changes.nzPlaceHolder.firstChange && typeof this.nzPlaceHolder !== 'undefined') {\n      this.isCustomPlaceHolder = true;\n    }\n\n    if (changes.nzLocale) {\n      // The nzLocale is currently handled by user\n      this.setDefaultPlaceHolder();\n    }\n\n    if (changes.nzRenderExtraFooter) {\n      this.extraFooter = valueFunctionProp(this.nzRenderExtraFooter!);\n    }\n\n    if (changes.nzStyle) {\n      warnDeprecation(\n        `'nzStyle' in DatePicker is going to be removed in 10.0.0. Please use CSS style attribute like <nz-date-picker style=\"...\"></nz-date-picker> instead.`\n      );\n    }\n\n    if (changes.nzClassName) {\n      warnDeprecation(\n        `'nzClassName' in DatePicker is going to be removed in 10.0.0. Please use CSS class attribute like <nz-date-picker class=\"...\"></nz-date-picker> instead.`\n      );\n    }\n\n    if (changes.nzMode) {\n      this.setPanelMode();\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.destroyed$.next();\n    this.destroyed$.complete();\n  }\n\n  setPanelMode(): void {\n    if (!this.nzMode) {\n      this.nzMode = this.isRange ? ['date', 'date'] : 'date';\n    }\n  }\n\n  /**\n   * Triggered when overlayOpen changes (different with realOpenState)\n   * @param open The overlayOpen in picker component\n   */\n  onOpenChange(open: boolean): void {\n    this.nzOnOpenChange.emit(open);\n  }\n\n  // ------------------------------------------------------------------------\n  // | Control value accessor implements\n  // ------------------------------------------------------------------------\n\n  // NOTE: onChangeFn/onTouchedFn will not be assigned if user not use as ngModel\n  onChangeFn: OnChangeType = () => void 0;\n  onTouchedFn: OnTouchedType = () => void 0;\n\n  writeValue(value: CompatibleDate): void {\n    this.setValue(value);\n    this.cdr.markForCheck();\n  }\n\n  registerOnChange(fn: OnChangeType): void {\n    this.onChangeFn = fn;\n  }\n\n  registerOnTouched(fn: OnTouchedType): void {\n    this.onTouchedFn = fn;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.nzDisabled = isDisabled;\n    this.cdr.markForCheck();\n  }\n\n  // ------------------------------------------------------------------------\n  // | Internal methods\n  // ------------------------------------------------------------------------\n\n  // Reload locale from i18n with side effects\n  private setLocale(): void {\n    this.nzLocale = this.i18n.getLocaleData('DatePicker', {});\n    this.setDefaultPlaceHolder();\n    this.cdr.markForCheck();\n  }\n\n  private setDefaultPlaceHolder(): void {\n    if (!this.isCustomPlaceHolder && this.nzLocale) {\n      this.nzPlaceHolder = this.isRange ? (this.nzLocale.lang.rangePlaceholder as [string, string]) : this.nzLocale.lang.placeholder!;\n    }\n  }\n\n  // Safe way of setting value with default\n  private setValue(value: CompatibleDate): void {\n    const newValue: CompatibleValue = this.datePickerService.makeValue(value);\n    this.datePickerService.setValue(newValue);\n    this.datePickerService.initialValue = newValue;\n  }\n\n  get realShowToday(): boolean {\n    // Range only support in single date picker\n    return this.nzMode === 'date' && this.nzShowToday;\n  }\n\n  onFocusChange(value: boolean): void {\n    this.focused = value;\n    // TODO: avoid autoFocus cause change after checked error\n    if (this.focused) {\n      this.renderer.addClass(this.elementRef.nativeElement, 'ant-picker-focused');\n    } else {\n      this.renderer.removeClass(this.elementRef.nativeElement, 'ant-picker-focused');\n    }\n  }\n\n  onPanelModeChange(panelMode: NzDateMode | NzDateMode[]): void {\n    // this.nzMode = panelMode;\n    this.nzOnPanelChange.emit(panelMode);\n  }\n\n  // Emit nzOnCalendarChange when select date by nz-range-picker\n  onCalendarChange(value: CompatibleValue): void {\n    if (this.isRange && Array.isArray(value)) {\n      const rangeValue = value.filter(x => x instanceof CandyDate).map(x => x!.nativeDate);\n      this.nzOnCalendarChange.emit(rangeValue);\n    }\n  }\n\n  // Emitted when done with date selecting\n  onResultOk(): void {\n    if (this.isRange) {\n      const value = this.datePickerService.value as CandyDate[];\n      if (value.length) {\n        this.nzOnOk.emit([value[0].nativeDate, value[1].nativeDate]);\n      } else {\n        this.nzOnOk.emit([]);\n      }\n    } else {\n      if (this.datePickerService.value) {\n        this.nzOnOk.emit((this.datePickerService.value as CandyDate).nativeDate);\n      } else {\n        this.nzOnOk.emit(null);\n      }\n    }\n    this.datePickerService.emitValue$.next();\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  OnChanges,\n  Output,\n  SimpleChanges,\n  TemplateRef,\n  ViewEncapsulation\n} from '@angular/core';\n\nimport { CandyDate } from 'ng-zorro-antd/core/time';\nimport { FunctionProp } from 'ng-zorro-antd/core/types';\nimport { NzCalendarI18nInterface } from 'ng-zorro-antd/i18n';\nimport { DisabledDateFn, NzDateMode, RangePartType, SupportTimeOptions } from './standard-types';\nimport { PREFIX_CLASS } from './util';\n\n@Component({\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  // tslint:disable-next-line:component-selector\n  selector: 'inner-popup',\n  exportAs: 'innerPopup',\n  template: `\n    <div [class.ant-picker-datetime-panel]=\"showTimePicker\">\n      <div class=\"{{ prefixCls }}-{{ panelMode }}-panel\">\n        <ng-container [ngSwitch]=\"panelMode\">\n          <ng-container *ngSwitchCase=\"'decade'\">\n            <decade-header\n              [(value)]=\"activeDate\"\n              [locale]=\"locale!\"\n              [showSuperPreBtn]=\"enablePrevNext('prev', 'decade')\"\n              [showSuperNextBtn]=\"enablePrevNext('next', 'decade')\"\n              [showNextBtn]=\"false\"\n              [showPreBtn]=\"false\"\n              (panelModeChange)=\"panelModeChange.emit($event)\"\n              (valueChange)=\"headerChange.emit($event)\"\n            >\n            </decade-header>\n            <div class=\"{{ prefixCls }}-body\">\n              <decade-table\n                [showWeek]=\"showWeek\"\n                [activeDate]=\"activeDate\"\n                [value]=\"value\"\n                (valueChange)=\"onChooseDecade($event)\"\n                [disabledDate]=\"disabledDate\"\n              ></decade-table>\n            </div>\n          </ng-container>\n          <ng-container *ngSwitchCase=\"'year'\">\n            <year-header\n              [(value)]=\"activeDate\"\n              [locale]=\"locale!\"\n              [showSuperPreBtn]=\"enablePrevNext('prev', 'year')\"\n              [showSuperNextBtn]=\"enablePrevNext('next', 'year')\"\n              [showNextBtn]=\"false\"\n              [showPreBtn]=\"false\"\n              (panelModeChange)=\"panelModeChange.emit($event)\"\n              (valueChange)=\"headerChange.emit($event)\"\n            >\n            </year-header>\n            <div class=\"{{ prefixCls }}-body\">\n              <year-table\n                [showWeek]=\"showWeek\"\n                [activeDate]=\"activeDate\"\n                [value]=\"value\"\n                (valueChange)=\"onChooseYear($event)\"\n                [disabledDate]=\"disabledDate\"\n              ></year-table>\n            </div>\n          </ng-container>\n          <ng-container *ngSwitchCase=\"'month'\">\n            <month-header\n              [(value)]=\"activeDate\"\n              [locale]=\"locale!\"\n              [showNextBtn]=\"false\"\n              [showPreBtn]=\"false\"\n              (panelModeChange)=\"panelModeChange.emit($event)\"\n              (valueChange)=\"headerChange.emit($event)\"\n            >\n            </month-header>\n            <div class=\"{{ prefixCls }}-body\">\n              <month-table\n                [showWeek]=\"showWeek\"\n                [value]=\"value\"\n                [activeDate]=\"activeDate\"\n                [disabledDate]=\"disabledDate\"\n                (valueChange)=\"onChooseMonth($event)\"\n              ></month-table>\n            </div>\n          </ng-container>\n\n          <ng-container *ngSwitchDefault>\n            <date-header\n              [(value)]=\"activeDate\"\n              [locale]=\"locale!\"\n              [showSuperPreBtn]=\"enablePrevNext('prev', 'date')\"\n              [showSuperNextBtn]=\"enablePrevNext('next', 'date')\"\n              [showPreBtn]=\"enablePrevNext('prev', 'date')\"\n              [showNextBtn]=\"enablePrevNext('next', 'date')\"\n              (panelModeChange)=\"panelModeChange.emit($event)\"\n              (valueChange)=\"headerChange.emit($event)\"\n            >\n            </date-header>\n            <div class=\"{{ prefixCls }}-body\">\n              <date-table\n                [locale]=\"locale!\"\n                [showWeek]=\"showWeek\"\n                [value]=\"value\"\n                [activeDate]=\"activeDate\"\n                (valueChange)=\"onSelectDate($event)\"\n                [disabledDate]=\"disabledDate\"\n                [cellRender]=\"dateRender\"\n                [selectedValue]=\"selectedValue\"\n                [hoverValue]=\"hoverValue\"\n                (dayHover)=\"dayHover.emit($event)\"\n              ></date-table>\n            </div>\n          </ng-container>\n        </ng-container>\n      </div>\n      <ng-container *ngIf=\"showTimePicker && timeOptions\">\n        <nz-time-picker-panel\n          [nzInDatePicker]=\"true\"\n          [ngModel]=\"value?.nativeDate\"\n          (ngModelChange)=\"onSelectTime($event)\"\n          [format]=\"$any(timeOptions.nzFormat)\"\n          [nzHourStep]=\"$any(timeOptions.nzHourStep)\"\n          [nzMinuteStep]=\"$any(timeOptions.nzMinuteStep)\"\n          [nzSecondStep]=\"$any(timeOptions.nzSecondStep)\"\n          [nzDisabledHours]=\"$any(timeOptions.nzDisabledHours)\"\n          [nzDisabledMinutes]=\"$any(timeOptions.nzDisabledMinutes)\"\n          [nzDisabledSeconds]=\"$any(timeOptions.nzDisabledSeconds)\"\n          [nzHideDisabledOptions]=\"!!timeOptions.nzHideDisabledOptions\"\n          [nzDefaultOpenValue]=\"$any(timeOptions.nzDefaultOpenValue)\"\n          [nzUse12Hours]=\"!!timeOptions.nzUse12Hours\"\n          [nzAddOn]=\"$any(timeOptions.nzAddOn)\"\n        ></nz-time-picker-panel>\n        <!-- use [opened] to trigger time panel \\`initPosition()\\` -->\n      </ng-container>\n    </div>\n  `\n})\nexport class InnerPopupComponent implements OnChanges {\n  @Input() activeDate!: CandyDate;\n  @Input() endPanelMode!: NzDateMode;\n  @Input() panelMode!: NzDateMode;\n  @Input() showWeek!: boolean;\n  @Input() locale!: NzCalendarI18nInterface;\n  @Input() showTimePicker!: boolean;\n  @Input() timeOptions!: SupportTimeOptions | null;\n  @Input() disabledDate?: DisabledDateFn;\n  @Input() dateRender?: string | TemplateRef<Date> | FunctionProp<TemplateRef<Date> | string>;\n  @Input() selectedValue!: CandyDate[]; // Range ONLY\n  @Input() hoverValue!: CandyDate[]; // Range ONLY\n  @Input() value!: CandyDate;\n  @Input() partType!: RangePartType;\n\n  @Output() readonly panelModeChange = new EventEmitter<NzDateMode>();\n\n  // TODO: name is not proper\n  @Output() readonly headerChange = new EventEmitter<CandyDate>(); // Emitted when user changed the header's value\n  @Output() readonly selectDate = new EventEmitter<CandyDate>(); // Emitted when the date is selected by click the date panel\n  @Output() readonly selectTime = new EventEmitter<CandyDate>();\n  @Output() readonly dayHover = new EventEmitter<CandyDate>(); // Emitted when hover on a day by mouse enter\n\n  prefixCls: string = PREFIX_CLASS;\n\n  /**\n   * Hide \"next\" arrow in left panel,\n   * hide \"prev\" arrow in right panel\n   * @param direction\n   * @param panelMode\n   */\n  enablePrevNext(direction: 'prev' | 'next', panelMode: NzDateMode): boolean {\n    if (\n      !this.showTimePicker &&\n      panelMode === this.endPanelMode &&\n      ((this.partType === 'left' && direction === 'next') || (this.partType === 'right' && direction === 'prev'))\n    ) {\n      return false;\n    }\n    return true;\n  }\n\n  onSelectTime(date: Date): void {\n    this.selectTime.emit(new CandyDate(date));\n  }\n\n  // The value real changed to outside\n  onSelectDate(date: CandyDate | Date): void {\n    const value = date instanceof CandyDate ? date : new CandyDate(date);\n    const timeValue = this.timeOptions && this.timeOptions.nzDefaultOpenValue;\n\n    // Display timeValue when value is null\n    if (!this.value && timeValue) {\n      value.setHms(timeValue.getHours(), timeValue.getMinutes(), timeValue.getSeconds());\n    }\n\n    this.selectDate.emit(value);\n  }\n\n  onChooseMonth(value: CandyDate): void {\n    this.activeDate = this.activeDate.setMonth(value.getMonth());\n    if (this.endPanelMode === 'month') {\n      this.value = value;\n      this.selectDate.emit(value);\n    } else {\n      this.headerChange.emit(value);\n      this.panelModeChange.emit(this.endPanelMode);\n    }\n  }\n\n  onChooseYear(value: CandyDate): void {\n    this.activeDate = this.activeDate.setYear(value.getYear());\n    if (this.endPanelMode === 'year') {\n      this.value = value;\n      this.selectDate.emit(value);\n    } else {\n      this.headerChange.emit(value);\n      this.panelModeChange.emit(this.endPanelMode);\n    }\n  }\n\n  onChooseDecade(value: CandyDate): void {\n    this.activeDate = this.activeDate.setYear(value.getYear());\n    if (this.endPanelMode === 'decade') {\n      this.value = value;\n      this.selectDate.emit(value);\n    } else {\n      this.headerChange.emit(value);\n      this.panelModeChange.emit('year');\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.activeDate && !changes.activeDate.currentValue) {\n      this.activeDate = new CandyDate();\n    }\n    // New Antd vesion has merged 'date' ant 'time' to one panel,\n    // So there is not 'time' panel\n    if (changes.panelMode && changes.panelMode.currentValue === 'time') {\n      this.panelMode = 'date';\n    }\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { Directive, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges } from '@angular/core';\nimport { CandyDate } from 'ng-zorro-antd/core/time';\nimport { NzCalendarI18nInterface } from 'ng-zorro-antd/i18n';\nimport { NzDateMode } from '../standard-types';\nimport { PanelSelector } from './interface';\n\n@Directive()\n// tslint:disable-next-line:directive-class-suffix\nexport abstract class AbstractPanelHeader implements OnInit, OnChanges {\n  prefixCls: string = `ant-picker-header`;\n  selectors: PanelSelector[] = [];\n\n  @Input() value!: CandyDate;\n  @Input() locale!: NzCalendarI18nInterface;\n  @Input() showSuperPreBtn: boolean = true;\n  @Input() showSuperNextBtn: boolean = true;\n  @Input() showPreBtn: boolean = true;\n  @Input() showNextBtn: boolean = true;\n\n  @Output() readonly panelModeChange = new EventEmitter<NzDateMode>();\n  @Output() readonly valueChange = new EventEmitter<CandyDate>();\n\n  abstract getSelectors(): PanelSelector[];\n\n  superPreviousTitle(): string {\n    return this.locale.previousYear;\n  }\n\n  previousTitle(): string {\n    return this.locale.previousMonth;\n  }\n\n  superNextTitle(): string {\n    return this.locale.nextYear;\n  }\n\n  nextTitle(): string {\n    return this.locale.nextMonth;\n  }\n\n  superPrevious(): void {\n    this.changeValue(this.value.addYears(-1));\n  }\n\n  superNext(): void {\n    this.changeValue(this.value.addYears(1));\n  }\n\n  previous(): void {\n    this.changeValue(this.value.addMonths(-1));\n  }\n\n  next(): void {\n    this.changeValue(this.value.addMonths(1));\n  }\n\n  changeValue(value: CandyDate): void {\n    if (this.value !== value) {\n      this.value = value;\n      this.valueChange.emit(this.value);\n      this.render();\n    }\n  }\n\n  changeMode(mode: NzDateMode): void {\n    this.panelModeChange.emit(mode);\n  }\n\n  private render(): void {\n    if (this.value) {\n      this.selectors = this.getSelectors();\n    }\n  }\n\n  ngOnInit(): void {\n    if (!this.value) {\n      this.value = new CandyDate(); // Show today by default\n    }\n    this.selectors = this.getSelectors();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.value || changes.locale) {\n      this.render();\n    }\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\nimport { DateHelperService } from 'ng-zorro-antd/i18n';\nimport { AbstractPanelHeader } from './abstract-panel-header';\nimport { PanelSelector } from './interface';\nimport { transCompatFormat } from './util';\n\n@Component({\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  selector: 'date-header', // tslint:disable-line:component-selector\n  exportAs: 'dateHeader',\n  templateUrl: './abstract-panel-header.html'\n})\nexport class DateHeaderComponent extends AbstractPanelHeader {\n  constructor(private dateHelper: DateHelperService) {\n    super();\n  }\n\n  getSelectors(): PanelSelector[] {\n    return [\n      {\n        className: `${this.prefixCls}-year-btn`,\n        title: this.locale.yearSelect,\n        onClick: () => this.changeMode('year'),\n        label: this.dateHelper.format(this.value.nativeDate, transCompatFormat(this.locale.yearFormat))\n      },\n      {\n        className: `${this.prefixCls}-month-btn`,\n        title: this.locale.monthSelect,\n        onClick: () => this.changeMode('month'),\n        label: this.dateHelper.format(this.value.nativeDate, this.locale.monthFormat || 'MMM')\n      }\n    ];\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { Directive, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges, TemplateRef } from '@angular/core';\nimport { CandyDate } from 'ng-zorro-antd/core/time';\nimport { FunctionProp, NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { isNonEmptyString, isTemplateRef } from 'ng-zorro-antd/core/util';\nimport { DateBodyRow, DateCell } from './interface';\n\n@Directive()\n// tslint:disable-next-line:directive-class-suffix\nexport abstract class AbstractTable implements OnInit, OnChanges {\n  isTemplateRef = isTemplateRef;\n  isNonEmptyString = isNonEmptyString;\n  headRow: DateCell[] = [];\n  bodyRows: DateBodyRow[] = [];\n  MAX_ROW = 6;\n  MAX_COL = 7;\n\n  @Input() prefixCls: string = 'ant-picker';\n  @Input() value!: CandyDate;\n  @Input() activeDate: CandyDate = new CandyDate();\n  @Input() showWeek: boolean = false;\n  @Input() disabledDate?: (d: Date) => boolean;\n  @Input() cellRender?: string | TemplateRef<Date> | FunctionProp<TemplateRef<Date> | string>;\n  @Input() fullCellRender?: string | TemplateRef<Date> | FunctionProp<TemplateRef<Date> | string>;\n\n  @Output() readonly valueChange = new EventEmitter<CandyDate>();\n\n  protected render(): void {\n    if (this.activeDate) {\n      this.headRow = this.makeHeadRow();\n      this.bodyRows = this.makeBodyRows();\n    }\n  }\n\n  trackByBodyRow(_index: number, item: DateBodyRow): NzSafeAny {\n    return item;\n  }\n\n  // Item usually is an object, so trackby has no use by default.\n  trackByBodyColumn(_index: number, item: DateCell): NzSafeAny {\n    return item;\n  }\n\n  abstract makeHeadRow(): DateCell[];\n  abstract makeBodyRows(): DateBodyRow[];\n\n  ngOnInit(): void {\n    this.render();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.activeDate && !changes.activeDate.currentValue) {\n      this.activeDate = new CandyDate();\n    }\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnInit,\n  Output,\n  SimpleChange,\n  SimpleChanges,\n  ViewEncapsulation\n} from '@angular/core';\nimport { CandyDate } from 'ng-zorro-antd/core/time';\nimport { valueFunctionProp } from 'ng-zorro-antd/core/util';\n\nimport { DateHelperService, NzCalendarI18nInterface, NzI18nService } from 'ng-zorro-antd/i18n';\nimport { AbstractTable } from './abstract-table';\nimport { DateBodyRow, DateCell, DayCell } from './interface';\nimport { transCompatFormat } from './util';\n\n@Component({\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  // tslint:disable-next-line:component-selector\n  selector: 'date-table',\n  exportAs: 'dateTable',\n  templateUrl: './abstract-table.html'\n})\nexport class DateTableComponent extends AbstractTable implements OnChanges, OnInit {\n  @Input() locale!: NzCalendarI18nInterface;\n  @Input() selectedValue: CandyDate[] = []; // Range ONLY\n  @Input() hoverValue: CandyDate[] = []; // Range ONLY\n\n  @Output() readonly dayHover = new EventEmitter<CandyDate>(); // Emitted when hover on a day by mouse enter\n\n  constructor(private i18n: NzI18nService, private dateHelper: DateHelperService) {\n    super();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    super.ngOnChanges(changes);\n    if (\n      this.isDateRealChange(changes.activeDate) ||\n      this.isDateRealChange(changes.value) ||\n      this.isDateRealChange(changes.selectedValue) ||\n      this.isDateRealChange(changes.hoverValue)\n    ) {\n      this.render();\n    }\n  }\n\n  private isDateRealChange(change: SimpleChange): boolean {\n    if (change) {\n      const previousValue: CandyDate | CandyDate[] = change.previousValue;\n      const currentValue: CandyDate | CandyDate[] = change.currentValue;\n      if (Array.isArray(currentValue)) {\n        return (\n          !Array.isArray(previousValue) ||\n          currentValue.length !== previousValue.length ||\n          currentValue.some((value, index) => {\n            const previousCandyDate = previousValue[index];\n            return previousCandyDate instanceof CandyDate ? previousCandyDate.isSameDay(value) : previousCandyDate !== value;\n          })\n        );\n      } else {\n        return !this.isSameDate(previousValue as CandyDate, currentValue);\n      }\n    }\n    return false;\n  }\n\n  private isSameDate(left: CandyDate, right: CandyDate): boolean {\n    return (!left && !right) || (left && right && right.isSameDay(left));\n  }\n\n  private changeValueFromInside(value: CandyDate): void {\n    // Only change date not change time\n    this.activeDate = this.activeDate.setYear(value.getYear()).setMonth(value.getMonth()).setDate(value.getDate());\n    this.valueChange.emit(this.activeDate);\n\n    if (!this.activeDate.isSameMonth(this.value)) {\n      this.render();\n    }\n  }\n\n  makeHeadRow(): DayCell[] {\n    const weekDays: DayCell[] = [];\n    const start = this.activeDate.calendarStart({ weekStartsOn: this.dateHelper.getFirstDayOfWeek() });\n    for (let colIndex = 0; colIndex < this.MAX_COL; colIndex++) {\n      const day = start.addDays(colIndex);\n      weekDays.push({\n        value: day.nativeDate,\n        title: this.dateHelper.format(day.nativeDate, 'E'), // eg. Tue\n        content: this.dateHelper.format(day.nativeDate, this.getVeryShortWeekFormat()), // eg. Tu,\n        isSelected: false,\n        isDisabled: false,\n        onClick(): void {},\n        onMouseEnter(): void {}\n      });\n    }\n    return weekDays;\n  }\n\n  private getVeryShortWeekFormat(): string {\n    return this.i18n.getLocaleId().toLowerCase().indexOf('zh') === 0 ? 'EEEEE' : 'EEEEEE'; // Use extreme short for chinese\n  }\n\n  makeBodyRows(): DateBodyRow[] {\n    const weekRows: DateBodyRow[] = [];\n    const firstDayOfMonth = this.activeDate.calendarStart({ weekStartsOn: this.dateHelper.getFirstDayOfWeek() });\n\n    for (let week = 0; week < this.MAX_ROW; week++) {\n      const weekStart = firstDayOfMonth.addDays(week * 7);\n      const row: DateBodyRow = {\n        isActive: false,\n        isCurrent: false,\n        dateCells: [],\n        year: weekStart.getYear()\n      };\n\n      for (let day = 0; day < 7; day++) {\n        const date = weekStart.addDays(day);\n        const dateFormat = transCompatFormat(this.i18n.getLocaleData('DatePicker.lang.dateFormat', 'YYYY-MM-DD'));\n        const title = this.dateHelper.format(date.nativeDate, dateFormat);\n        const label = this.dateHelper.format(date.nativeDate, 'dd');\n\n        const cell: DayCell = {\n          value: date.nativeDate,\n          label: label,\n          isSelected: false,\n          isDisabled: false,\n          isToday: false,\n          title: title,\n          cellRender: valueFunctionProp(this.cellRender!, date), // Customized content\n          fullCellRender: valueFunctionProp(this.fullCellRender!, date),\n          content: `${date.getDate()}`,\n          onClick: () => this.changeValueFromInside(date),\n          onMouseEnter: () => this.dayHover.emit(date)\n        };\n\n        if (this.showWeek && !row.weekNum) {\n          row.weekNum = this.dateHelper.getISOWeek(date.nativeDate);\n        }\n\n        if (date.isToday()) {\n          cell.isToday = true;\n          row.isCurrent = true;\n        }\n\n        if (\n          ((Array.isArray(this.selectedValue) && this.selectedValue.length > 0) || (this.hoverValue && this.hoverValue.length > 0)) &&\n          date.isSameMonth(this.activeDate)\n        ) {\n          const [startHover, endHover] = this.hoverValue;\n          const [startSelected, endSelected] = this.selectedValue;\n\n          // Selected\n          if (startSelected && startSelected.isSameDay(date)) {\n            cell.isSelectedStartDate = true;\n            cell.isSelected = true;\n            row.isActive = true;\n          }\n          if (endSelected && endSelected.isSameDay(date)) {\n            cell.isSelectedEndDate = true;\n            cell.isSelected = true;\n            row.isActive = true;\n          } else if (date.isAfterDay(startSelected) && date.isBeforeDay(endSelected)) {\n            cell.isInSelectedRange = true;\n          }\n\n          if (startHover && endHover) {\n            // Hover\n            if (startHover.isSameDay(date)) {\n              cell.isHoverStartDate = true;\n            }\n            if (endHover.isSameDay(date)) {\n              cell.isHoverEndDate = true;\n            }\n            if (date.isLastDayOfMonth()) {\n              cell.isLastDayOfMonth = true;\n            }\n            if (date.isFirstDayOfMonth()) {\n              cell.isFirstDayOfMonth = true;\n            }\n          }\n\n          if (startSelected && !endSelected) {\n            cell.isStartSingle = true;\n          }\n\n          if (!startSelected && endSelected) {\n            cell.isEndSingle = true;\n          }\n\n          if (date.isAfterDay(startHover) && date.isBeforeDay(endHover)) {\n            cell.isInHoverRange = true;\n          }\n        } else if (date.isSameDay(this.value)) {\n          cell.isSelected = true;\n          row.isActive = true;\n        }\n\n        if (this.disabledDate?.(date.nativeDate)) {\n          cell.isDisabled = true;\n        }\n\n        cell.classMap = this.getClassMap(cell);\n\n        row.dateCells.push(cell);\n      }\n\n      row.classMap = {\n        [`${this.prefixCls}-week-panel-row`]: this.showWeek,\n        [`${this.prefixCls}-week-panel-row-selected`]: this.showWeek && row.isActive\n      };\n\n      weekRows.push(row);\n    }\n\n    return weekRows;\n  }\n\n  getClassMap(cell: DayCell): { [key: string]: boolean } {\n    const date = new CandyDate(cell.value);\n    return {\n      [`ant-picker-cell`]: true,\n      [`ant-picker-cell-today`]: !!cell.isToday,\n      [`ant-picker-cell-in-view`]: date.isSameMonth(this.activeDate),\n      [`ant-picker-cell-selected`]: cell.isSelected,\n      [`ant-picker-cell-disabled`]: cell.isDisabled,\n      [`ant-picker-cell-in-range`]: !!cell.isInSelectedRange,\n      [`ant-picker-cell-range-start`]: !!cell.isSelectedStartDate,\n      [`ant-picker-cell-range-end`]: !!cell.isSelectedEndDate,\n      [`ant-picker-cell-range-start-single`]: !!cell.isStartSingle,\n      [`ant-picker-cell-range-end-single`]: !!cell.isEndSingle,\n      [`ant-picker-cell-range-hover`]: !!cell.isInHoverRange,\n      [`ant-picker-cell-range-hover-start`]: !!cell.isHoverStartDate,\n      [`ant-picker-cell-range-hover-end`]: !!cell.isHoverEndDate,\n      [`ant-picker-cell-range-hover-edge-start`]: !!cell.isFirstDayOfMonth,\n      [`ant-picker-cell-range-hover-edge-end`]: !!cell.isLastDayOfMonth\n    };\n  }\n\n  trackByBodyRow(_index: number, item: DateBodyRow): string {\n    return `${item.year}-${item.weekNum}`;\n  }\n\n  trackByBodyColumn(_index: number, item: DateCell): string {\n    return item.title as string;\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\nimport { AbstractPanelHeader } from './abstract-panel-header';\nimport { PanelSelector } from './interface';\n\n@Component({\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  selector: 'decade-header', // tslint:disable-line:component-selector\n  exportAs: 'decadeHeader',\n  templateUrl: './abstract-panel-header.html'\n})\nexport class DecadeHeaderComponent extends AbstractPanelHeader {\n  previous(): void {}\n  next(): void {}\n\n  get startYear(): number {\n    return parseInt(`${this.value.getYear() / 100}`, 10) * 100;\n  }\n\n  get endYear(): number {\n    return this.startYear + 99;\n  }\n\n  superPrevious(): void {\n    this.changeValue(this.value.addYears(-100));\n  }\n\n  superNext(): void {\n    this.changeValue(this.value.addYears(100));\n  }\n\n  getSelectors(): PanelSelector[] {\n    return [\n      {\n        className: `${this.prefixCls}-decade-btn`,\n        title: '',\n        onClick: () => {\n          // noop\n        },\n        label: `${this.startYear}-${this.endYear}`\n      }\n    ];\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { ChangeDetectionStrategy, Component, OnChanges, SimpleChanges, ViewEncapsulation } from '@angular/core';\nimport { AbstractTable } from './abstract-table';\nimport { DateBodyRow, DateCell, DecadeCell } from './interface';\n\nconst MAX_ROW = 4;\nconst MAX_COL = 3;\n\n@Component({\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  // tslint:disable-next-line:component-selector\n  selector: 'decade-table',\n  exportAs: 'decadeTable',\n  templateUrl: 'abstract-table.html'\n})\nexport class DecadeTableComponent extends AbstractTable implements OnChanges {\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.value || changes.disabledDate || changes.activeDate) {\n      this.render();\n    }\n  }\n\n  get startYear(): number {\n    return parseInt(`${this.activeDate.getYear() / 100}`, 10) * 100;\n  }\n\n  get endYear(): number {\n    return this.startYear + 99;\n  }\n\n  makeHeadRow(): DateCell[] {\n    return [];\n  }\n\n  makeBodyRows(): DateBodyRow[] {\n    const decades: DateBodyRow[] = [];\n    const currentYear = this.value && this.value.getYear();\n    const startYear = this.startYear;\n    const endYear = this.endYear;\n    const previousYear = startYear - 10;\n\n    let index = 0;\n    for (let rowIndex = 0; rowIndex < MAX_ROW; rowIndex++) {\n      const row: DecadeCell[] = [];\n      for (let colIndex = 0; colIndex < MAX_COL; colIndex++) {\n        const start = previousYear + index * 10;\n        const end = previousYear + index * 10 + 9;\n        const content = `${start}-${end}`;\n\n        const cell: DecadeCell = {\n          value: this.activeDate.setYear(start).nativeDate,\n          content,\n          title: content,\n          isDisabled: false,\n          isSelected: currentYear >= start && currentYear <= end,\n          isLowerThanStart: end < startYear,\n          isBiggerThanEnd: start > endYear,\n          classMap: {},\n          onClick(): void {},\n          onMouseEnter(): void {}\n        };\n\n        cell.classMap = this.getClassMap(cell);\n        cell.onClick = () => this.chooseDecade(start);\n        index++;\n        row.push(cell);\n      }\n\n      decades.push({ dateCells: row });\n    }\n    return decades;\n  }\n\n  getClassMap(cell: DecadeCell): { [key: string]: boolean } {\n    return {\n      [`${this.prefixCls}-cell`]: true,\n      [`${this.prefixCls}-cell-in-view`]: !cell.isBiggerThanEnd && !cell.isLowerThanStart,\n      [`${this.prefixCls}-cell-selected`]: cell.isSelected,\n      [`${this.prefixCls}-cell-disabled`]: cell.isDisabled\n    };\n  }\n\n  private chooseDecade(year: number): void {\n    this.value = this.activeDate.setYear(year);\n    this.valueChange.emit(this.value);\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\nimport { DateHelperService } from 'ng-zorro-antd/i18n';\nimport { AbstractPanelHeader } from './abstract-panel-header';\nimport { PanelSelector } from './interface';\nimport { transCompatFormat } from './util';\n\n@Component({\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  selector: 'month-header', // tslint:disable-line:component-selector\n  exportAs: 'monthHeader',\n  templateUrl: './abstract-panel-header.html'\n})\nexport class MonthHeaderComponent extends AbstractPanelHeader {\n  constructor(private dateHelper: DateHelperService) {\n    super();\n  }\n\n  getSelectors(): PanelSelector[] {\n    return [\n      {\n        className: `${this.prefixCls}-month-btn`,\n        title: this.locale.yearSelect,\n        onClick: () => this.changeMode('year'),\n        label: this.dateHelper.format(this.value.nativeDate, transCompatFormat(this.locale.yearFormat))\n      }\n    ];\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { ChangeDetectionStrategy, Component, OnChanges, SimpleChanges, ViewEncapsulation } from '@angular/core';\nimport { valueFunctionProp } from 'ng-zorro-antd/core/util';\nimport { DateHelperService } from 'ng-zorro-antd/i18n';\nimport { AbstractTable } from './abstract-table';\nimport { DateBodyRow, DateCell, DayCell } from './interface';\n\n@Component({\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  // tslint:disable-next-line:component-selector\n  selector: 'month-table',\n  exportAs: 'monthTable',\n  templateUrl: 'abstract-table.html'\n})\nexport class MonthTableComponent extends AbstractTable implements OnChanges {\n  MAX_ROW = 4;\n  MAX_COL = 3;\n\n  constructor(private dateHelper: DateHelperService) {\n    super();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    super.ngOnChanges(changes);\n    if (changes.value || changes.disabledDate || changes.activeDate) {\n      this.render();\n    }\n  }\n\n  makeHeadRow(): DateCell[] {\n    return [];\n  }\n\n  makeBodyRows(): DateBodyRow[] {\n    const months: DateBodyRow[] = [];\n    const currentMonth = this.value && this.value.getMonth();\n\n    let monthValue = 0;\n    for (let rowIndex = 0; rowIndex < this.MAX_ROW; rowIndex++) {\n      const row: DateCell[] = [];\n      for (let colIndex = 0; colIndex < this.MAX_COL; colIndex++) {\n        const month = this.activeDate.setMonth(monthValue);\n        const isDisabled = this.disabledDate ? this.disabledDate(month.nativeDate) : false;\n        const content = this.dateHelper.format(month.nativeDate, 'MMM');\n\n        const cell: DateCell = {\n          value: month.nativeDate,\n          isDisabled,\n          isSelected: monthValue === currentMonth,\n          content,\n          title: content,\n          classMap: {},\n          cellRender: valueFunctionProp(this.cellRender!, month), // Customized content\n          fullCellRender: valueFunctionProp(this.fullCellRender!, month),\n          onClick: () => this.chooseMonth(cell.value.getMonth()), // don't use monthValue here,\n          onMouseEnter: () => null\n        };\n\n        cell.classMap = this.getClassMap(cell);\n\n        row.push(cell);\n        monthValue++;\n      }\n      months.push({ dateCells: row });\n    }\n    return months;\n  }\n\n  getClassMap(cell: DayCell): { [key: string]: boolean } {\n    return {\n      [`ant-picker-cell`]: true,\n      [`ant-picker-cell-in-view`]: true,\n      [`ant-picker-cell-selected`]: cell.isSelected,\n      [`ant-picker-cell-disabled`]: cell.isDisabled\n    };\n  }\n\n  private chooseMonth(month: number): void {\n    this.value = this.activeDate.setMonth(month);\n    this.valueChange.emit(this.value);\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\nimport { AbstractPanelHeader } from './abstract-panel-header';\nimport { PanelSelector } from './interface';\n\n@Component({\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  selector: 'year-header', // tslint:disable-line:component-selector\n  exportAs: 'yearHeader',\n  templateUrl: './abstract-panel-header.html'\n})\nexport class YearHeaderComponent extends AbstractPanelHeader {\n  get startYear(): number {\n    return parseInt(`${this.value.getYear() / 10}`, 10) * 10;\n  }\n\n  get endYear(): number {\n    return this.startYear + 9;\n  }\n\n  superPrevious(): void {\n    this.changeValue(this.value.addYears(-10));\n  }\n\n  superNext(): void {\n    this.changeValue(this.value.addYears(10));\n  }\n\n  getSelectors(): PanelSelector[] {\n    return [\n      {\n        className: `${this.prefixCls}-year-btn`,\n        title: '',\n        onClick: () => this.changeMode('decade'),\n        label: `${this.startYear}-${this.endYear}`\n      }\n    ];\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { ChangeDetectionStrategy, Component, OnChanges, SimpleChanges, ViewEncapsulation } from '@angular/core';\nimport { valueFunctionProp } from 'ng-zorro-antd/core/util';\nimport { DateHelperService } from 'ng-zorro-antd/i18n';\nimport { AbstractTable } from './abstract-table';\nimport { DateBodyRow, DateCell, YearCell } from './interface';\n\n@Component({\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  // tslint:disable-next-line:component-selector\n  selector: 'year-table',\n  exportAs: 'yearTable',\n  templateUrl: 'abstract-table.html'\n})\nexport class YearTableComponent extends AbstractTable implements OnChanges {\n  MAX_ROW = 4;\n  MAX_COL = 3;\n\n  constructor(private dateHelper: DateHelperService) {\n    super();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    super.ngOnChanges(changes);\n    if (changes.value || changes.disabledDate || changes.activeDate) {\n      this.render();\n    }\n  }\n\n  makeHeadRow(): DateCell[] {\n    return [];\n  }\n\n  makeBodyRows(): DateBodyRow[] {\n    const currentYear = this.activeDate && this.activeDate.getYear();\n    const startYear = parseInt(`${currentYear / 10}`, 10) * 10;\n    const endYear = startYear + 9;\n    const previousYear = startYear - 1;\n\n    const years: DateBodyRow[] = [];\n\n    let yearValue = 0;\n    for (let rowIndex = 0; rowIndex < this.MAX_ROW; rowIndex++) {\n      const row: DateCell[] = [];\n      for (let colIndex = 0; colIndex < this.MAX_COL; colIndex++) {\n        const yearNum = previousYear + yearValue;\n        const year = this.activeDate.setYear(yearNum);\n        const content = this.dateHelper.format(year.nativeDate, 'yyyy');\n        const isDisabled = this.disabledDate ? this.disabledDate(year.nativeDate) : false;\n\n        const cell: YearCell = {\n          value: year.nativeDate,\n          isDisabled,\n          isSameDecade: yearNum >= startYear && yearNum <= endYear,\n          isSelected: yearNum === (this.value && this.value.getYear()),\n          content,\n          title: content,\n          classMap: {},\n          cellRender: valueFunctionProp(this.cellRender!, year), // Customized content\n          fullCellRender: valueFunctionProp(this.fullCellRender!, year),\n          onClick: () => this.chooseYear(cell.value.getFullYear()), // don't use yearValue here,\n          onMouseEnter: () => null\n        };\n\n        cell.classMap = this.getClassMap(cell);\n\n        row.push(cell);\n        yearValue++;\n      }\n      years.push({ dateCells: row });\n    }\n    return years;\n  }\n\n  getClassMap(cell: YearCell): { [key: string]: boolean } {\n    return {\n      [`${this.prefixCls}-cell`]: true,\n      [`${this.prefixCls}-cell-in-view`]: !!cell.isSameDecade,\n      [`${this.prefixCls}-cell-selected`]: cell.isSelected,\n      [`${this.prefixCls}-cell-disabled`]: cell.isDisabled\n    };\n  }\n\n  private chooseYear(year: number): void {\n    this.value = this.activeDate.setYear(year);\n    this.valueChange.emit(this.value);\n    this.render();\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * A collection module of standard output for all lib components\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { NzOutletModule } from 'ng-zorro-antd/core/outlet';\n\nimport { NzI18nModule } from 'ng-zorro-antd/i18n';\nimport { NzTimePickerModule } from 'ng-zorro-antd/time-picker';\nimport { DateHeaderComponent } from './date-header.component';\nimport { DateTableComponent } from './date-table.component';\nimport { DecadeHeaderComponent } from './decade-header.component';\nimport { DecadeTableComponent } from './decade-table.component';\nimport { MonthHeaderComponent } from './month-header.component';\nimport { MonthTableComponent } from './month-table.component';\nimport { YearHeaderComponent } from './year-header.component';\nimport { YearTableComponent } from './year-table.component';\n\n@NgModule({\n  imports: [CommonModule, FormsModule, NzI18nModule, NzTimePickerModule, NzOutletModule],\n  exports: [\n    DateHeaderComponent,\n    DateTableComponent,\n    DecadeHeaderComponent,\n    DecadeTableComponent,\n    MonthHeaderComponent,\n    MonthTableComponent,\n    YearHeaderComponent,\n    YearTableComponent\n  ],\n  declarations: [\n    DateHeaderComponent,\n    DateTableComponent,\n    DecadeHeaderComponent,\n    DecadeTableComponent,\n    MonthHeaderComponent,\n    MonthTableComponent,\n    YearHeaderComponent,\n    YearTableComponent\n  ]\n})\nexport class LibPackerModule {}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { Directive, Host, Optional } from '@angular/core';\nimport { NzDatePickerComponent } from './date-picker.component';\n\n@Directive({\n  selector: 'nz-month-picker',\n  exportAs: 'nzMonthPicker'\n})\n// tslint:disable-next-line:directive-class-suffix\nexport class NzMonthPickerComponent {\n  constructor(@Optional() @Host() public datePicker: NzDatePickerComponent) {\n    this.datePicker.nzMode = 'month';\n    this.datePicker.nzFormat = 'yyyy-MM';\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { Directive, Host, Optional } from '@angular/core';\nimport { NzDatePickerComponent } from './date-picker.component';\n\n@Directive({\n  selector: 'nz-range-picker',\n  exportAs: 'nzRangePicker'\n})\n// tslint:disable-next-line:directive-class-suffix\nexport class NzRangePickerComponent {\n  constructor(@Optional() @Host() public datePicker: NzDatePickerComponent) {\n    this.datePicker.isRange = true;\n    this.datePicker.nzMode = ['date', 'date'];\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { Directive, Host, Optional } from '@angular/core';\nimport { NzDatePickerComponent } from './date-picker.component';\n\n@Directive({\n  selector: 'nz-week-picker',\n  exportAs: 'nzWeekPicker'\n})\n// tslint:disable-next-line:directive-class-suffix\nexport class NzWeekPickerComponent {\n  constructor(@Optional() @Host() public datePicker: NzDatePickerComponent) {\n    this.datePicker.showWeek = true;\n    this.datePicker.nzMode = 'week';\n    this.datePicker.nzFormat = 'yyyy-ww';\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { Directive, Host, Optional } from '@angular/core';\nimport { NzDatePickerComponent } from './date-picker.component';\n\n@Directive({\n  selector: 'nz-year-picker',\n  exportAs: 'nzYearPicker'\n})\n// tslint:disable-next-line:directive-class-suffix\nexport class NzYearPickerComponent {\n  constructor(@Optional() @Host() public datePicker: NzDatePickerComponent) {\n    this.datePicker.nzMode = 'year';\n    this.datePicker.nzFormat = 'yyyy';\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { NzButtonModule } from 'ng-zorro-antd/button';\n\nimport { NzNoAnimationModule } from 'ng-zorro-antd/core/no-animation';\nimport { NzOutletModule } from 'ng-zorro-antd/core/outlet';\nimport { NzOverlayModule } from 'ng-zorro-antd/core/overlay';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\nimport { NzTimePickerModule } from 'ng-zorro-antd/time-picker';\nimport { CalendarFooterComponent } from './calendar-footer.component';\n\nimport { NzDatePickerComponent } from './date-picker.component';\nimport { DateRangePopupComponent } from './date-range-popup.component';\nimport { InnerPopupComponent } from './inner-popup.component';\n\nimport { LibPackerModule } from './lib/lib-packer.module';\nimport { NzMonthPickerComponent } from './month-picker.component';\nimport { NzPickerComponent } from './picker.component';\nimport { NzRangePickerComponent } from './range-picker.component';\nimport { NzWeekPickerComponent } from './week-picker.component';\nimport { NzYearPickerComponent } from './year-picker.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    OverlayModule,\n    LibPackerModule,\n    NzIconModule,\n    NzOverlayModule,\n    NzNoAnimationModule,\n    NzOutletModule,\n    NzTimePickerModule,\n    NzButtonModule,\n    LibPackerModule\n  ],\n  exports: [NzDatePickerComponent, NzRangePickerComponent, NzMonthPickerComponent, NzYearPickerComponent, NzWeekPickerComponent],\n  declarations: [\n    NzPickerComponent,\n    NzDatePickerComponent,\n    NzMonthPickerComponent,\n    NzYearPickerComponent,\n    NzWeekPickerComponent,\n    NzRangePickerComponent,\n\n    CalendarFooterComponent,\n    InnerPopupComponent,\n    DateRangePopupComponent\n  ]\n})\nexport class NzDatePickerModule {}\n"],"names":[],"mappings":"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"}