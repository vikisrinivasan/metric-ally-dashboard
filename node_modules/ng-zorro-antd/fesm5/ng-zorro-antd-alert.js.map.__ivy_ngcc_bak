{"version":3,"file":"ng-zorro-antd-alert.js","sources":["ng://ng-zorro-antd/alert/alert.component.ts","ng://ng-zorro-antd/alert/alert.module.ts"],"sourcesContent":["/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnDestroy,\n  Output,\n  SimpleChanges,\n  TemplateRef,\n  ViewEncapsulation\n} from '@angular/core';\nimport { slideAlertMotion } from 'ng-zorro-antd/core/animation';\nimport { NzConfigService, WithConfig } from 'ng-zorro-antd/core/config';\nimport { BooleanInput } from 'ng-zorro-antd/core/types';\nimport { InputBoolean } from 'ng-zorro-antd/core/util';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nconst NZ_CONFIG_COMPONENT_NAME = 'alert';\n\n@Component({\n  selector: 'nz-alert',\n  exportAs: 'nzAlert',\n  animations: [slideAlertMotion],\n  template: `\n    <div\n      *ngIf=\"!closed\"\n      class=\"ant-alert\"\n      [class.ant-alert-success]=\"nzType === 'success'\"\n      [class.ant-alert-info]=\"nzType === 'info'\"\n      [class.ant-alert-warning]=\"nzType === 'warning'\"\n      [class.ant-alert-error]=\"nzType === 'error'\"\n      [class.ant-alert-no-icon]=\"!nzShowIcon\"\n      [class.ant-alert-banner]=\"nzBanner\"\n      [class.ant-alert-closable]=\"nzCloseable\"\n      [class.ant-alert-with-description]=\"!!nzDescription\"\n      [@.disabled]=\"nzNoAnimation\"\n      [@slideAlertMotion]\n      (@slideAlertMotion.done)=\"onFadeAnimationDone()\"\n    >\n      <ng-container *ngIf=\"nzShowIcon\">\n        <i nz-icon class=\"ant-alert-icon\" [nzType]=\"nzIconType || inferredIconType\" [nzTheme]=\"iconTheme\"></i>\n      </ng-container>\n      <span class=\"ant-alert-message\" *ngIf=\"nzMessage\">\n        <ng-container *nzStringTemplateOutlet=\"nzMessage\">{{ nzMessage }}</ng-container>\n      </span>\n      <span class=\"ant-alert-description\" *ngIf=\"nzDescription\">\n        <ng-container *nzStringTemplateOutlet=\"nzDescription\">{{ nzDescription }}</ng-container>\n      </span>\n      <button type=\"button\" tabindex=\"0\" *ngIf=\"nzCloseable || nzCloseText\" class=\"ant-alert-close-icon\" (click)=\"closeAlert()\">\n        <ng-template #closeDefaultTemplate>\n          <i nz-icon nzType=\"close\"></i>\n        </ng-template>\n        <ng-container *ngIf=\"nzCloseText; else closeDefaultTemplate\">\n          <ng-container *nzStringTemplateOutlet=\"nzCloseText\">\n            <span class=\"ant-alert-close-text\">{{ nzCloseText }}</span>\n          </ng-container>\n        </ng-container>\n      </button>\n    </div>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  preserveWhitespaces: false\n})\nexport class NzAlertComponent implements OnChanges, OnDestroy {\n  static ngAcceptInputType_nzCloseable: BooleanInput;\n  static ngAcceptInputType_nzShowIcon: BooleanInput;\n  static ngAcceptInputType_nzBanner: BooleanInput;\n  static ngAcceptInputType_nzNoAnimation: BooleanInput;\n\n  @Input() nzCloseText: string | TemplateRef<void> | null = null;\n  @Input() nzIconType: string | null = null;\n  @Input() nzMessage: string | TemplateRef<void> | null = null;\n  @Input() nzDescription: string | TemplateRef<void> | null = null;\n  @Input() nzType: 'success' | 'info' | 'warning' | 'error' = 'info';\n  @Input() @WithConfig(NZ_CONFIG_COMPONENT_NAME) @InputBoolean() nzCloseable: boolean = false;\n  @Input() @WithConfig(NZ_CONFIG_COMPONENT_NAME) @InputBoolean() nzShowIcon: boolean = false;\n  @Input() @InputBoolean() nzBanner = false;\n  @Input() @InputBoolean() nzNoAnimation = false;\n  @Output() readonly nzOnClose = new EventEmitter<boolean>();\n  closed = false;\n  iconTheme: 'outline' | 'fill' = 'fill';\n  inferredIconType: string = 'info-circle';\n  private isTypeSet = false;\n  private isShowIconSet = false;\n  private destroy$ = new Subject();\n\n  constructor(public nzConfigService: NzConfigService, private cdr: ChangeDetectorRef) {\n    this.nzConfigService\n      .getConfigChangeEventForComponent(NZ_CONFIG_COMPONENT_NAME)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(() => {\n        this.cdr.markForCheck();\n      });\n  }\n\n  closeAlert(): void {\n    this.closed = true;\n  }\n\n  onFadeAnimationDone(): void {\n    if (this.closed) {\n      this.nzOnClose.emit(true);\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    const { nzShowIcon, nzDescription, nzType, nzBanner } = changes;\n    if (nzShowIcon) {\n      this.isShowIconSet = true;\n    }\n    if (nzType) {\n      this.isTypeSet = true;\n      switch (this.nzType) {\n        case 'error':\n          this.inferredIconType = 'close-circle';\n          break;\n        case 'success':\n          this.inferredIconType = 'check-circle';\n          break;\n        case 'info':\n          this.inferredIconType = 'info-circle';\n          break;\n        case 'warning':\n          this.inferredIconType = 'exclamation-circle';\n          break;\n      }\n    }\n    if (nzDescription) {\n      this.iconTheme = this.nzDescription ? 'outline' : 'fill';\n    }\n    if (nzBanner) {\n      if (!this.isTypeSet) {\n        this.nzType = 'warning';\n      }\n      if (!this.isShowIconSet) {\n        this.nzShowIcon = true;\n      }\n    }\n  }\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { NzOutletModule } from 'ng-zorro-antd/core/outlet';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\n\nimport { NzAlertComponent } from './alert.component';\n\n@NgModule({\n  declarations: [NzAlertComponent],\n  exports: [NzAlertComponent],\n  imports: [CommonModule, NzIconModule, NzOutletModule]\n})\nexport class NzAlertModule {}\n"],"names":[],"mappings":"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"}