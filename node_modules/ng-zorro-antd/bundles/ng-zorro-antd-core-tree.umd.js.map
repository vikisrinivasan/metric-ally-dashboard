{"version":3,"file":"ng-zorro-antd-core-tree.umd.js","sources":["../../node_modules/tslib/tslib.es6.js","ng-zorro-antd/core/tree/nz-tree-base-node.ts","ng-zorro-antd/core/tree/nz-tree-base.definitions.ts","ng-zorro-antd/core/tree/nz-tree-base-util.ts","ng-zorro-antd/core/tree/nz-tree-base.service.ts","ng-zorro-antd/core/tree/nz-tree-service.resolver.ts","ng-zorro-antd/core/tree/nz-tree-base.ts"],"names":["warnDeprecation","BehaviorSubject","Injectable","InjectionToken"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { warnDeprecation } from 'ng-zorro-antd/core/logger';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { NzTreeNodeBaseComponent } from './nz-tree-base.definitions';\nimport { NzTreeBaseService } from './nz-tree-base.service';\n\nexport type NzTreeNodeKey = string | number;\n\nexport interface FlattenNode {\n  parent: FlattenNode | null;\n  children: FlattenNode[];\n  pos: string;\n  data: NzTreeNode;\n  isStart: boolean[];\n  isEnd: boolean[];\n}\n\nexport interface NzTreeNodeOptions {\n  title: string;\n  key: string;\n  icon?: string;\n  isLeaf?: boolean;\n  checked?: boolean;\n  selected?: boolean;\n  selectable?: boolean;\n  disabled?: boolean;\n  disableCheckbox?: boolean;\n  expanded?: boolean;\n  children?: NzTreeNodeOptions[];\n\n  [key: string]: NzSafeAny;\n}\n\nexport class NzTreeNode {\n  private _title: string = '';\n  key!: string;\n  level: number = 0;\n  origin!: NzTreeNodeOptions;\n  // Parent Node\n  parentNode: NzTreeNode | null = null;\n  private _icon: string = '';\n  private _children: NzTreeNode[] = [];\n  private _isLeaf: boolean = false;\n  private _isChecked: boolean = false;\n  /**\n   * @deprecated Maybe removed in next major version, use isChecked instead\n   */\n  private _isAllChecked: boolean = false;\n  private _isSelectable: boolean = false;\n  private _isDisabled: boolean = false;\n  private _isDisableCheckbox: boolean = false;\n  private _isExpanded: boolean = false;\n  private _isHalfChecked: boolean = false;\n  private _isSelected: boolean = false;\n  private _isLoading: boolean = false;\n  canHide: boolean = false;\n  isMatched: boolean = false;\n\n  service: NzTreeBaseService | null = null;\n  component!: NzTreeNodeBaseComponent;\n\n  /** New added in Tree for easy data access */\n  isStart?: boolean[];\n  isEnd?: boolean[];\n\n  get treeService(): NzTreeBaseService | null {\n    return this.service || (this.parentNode && this.parentNode.treeService);\n  }\n\n  /**\n   * Init nzTreeNode\n   * @param option: user's input\n   * @param parent\n   * @param service: base nzTreeService\n   */\n  constructor(option: NzTreeNodeOptions | NzTreeNode, parent: NzTreeNode | null = null, service: NzTreeBaseService | null = null) {\n    if (option instanceof NzTreeNode) {\n      return option;\n    }\n    this.service = service || null;\n    this.origin = option;\n    this.key = option.key;\n    this.parentNode = parent;\n    this._title = option.title || '---';\n    this._icon = option.icon || '';\n    this._isLeaf = option.isLeaf || false;\n    this._children = [];\n    // option params\n    this._isChecked = option.checked || false;\n    this._isSelectable = option.disabled || option.selectable !== false;\n    this._isDisabled = option.disabled || false;\n    this._isDisableCheckbox = option.disableCheckbox || false;\n    this._isExpanded = option.isLeaf ? false : option.expanded || false;\n    this._isHalfChecked = false;\n    this._isSelected = (!option.disabled && option.selected) || false;\n    this._isLoading = false;\n    this.isMatched = false;\n\n    /**\n     * parent's checked status will affect children while initializing\n     */\n    if (parent) {\n      this.level = parent.level + 1;\n    } else {\n      this.level = 0;\n    }\n    if (typeof option.children !== 'undefined' && option.children !== null) {\n      option.children.forEach(nodeOptions => {\n        const s = this.treeService;\n        if (s && !s.isCheckStrictly && option.checked && !option.disabled && !nodeOptions.disabled && !nodeOptions.disableCheckbox) {\n          nodeOptions.checked = option.checked;\n        }\n        this._children.push(new NzTreeNode(nodeOptions, this));\n      });\n    }\n  }\n\n  /**\n   * auto generate\n   * get\n   * set\n   */\n  get title(): string {\n    return this._title;\n  }\n\n  set title(value: string) {\n    this._title = value;\n    this.update();\n  }\n\n  get icon(): string {\n    return this._icon;\n  }\n\n  set icon(value: string) {\n    this._icon = value;\n    this.update();\n  }\n\n  get children(): NzTreeNode[] {\n    return this._children;\n  }\n\n  set children(value: NzTreeNode[]) {\n    this._children = value;\n    this.update();\n  }\n\n  get isLeaf(): boolean {\n    return this._isLeaf;\n  }\n\n  set isLeaf(value: boolean) {\n    this._isLeaf = value;\n    this.update();\n  }\n\n  get isChecked(): boolean {\n    return this._isChecked;\n  }\n\n  set isChecked(value: boolean) {\n    this._isChecked = value;\n    this._isAllChecked = value;\n    this.origin.checked = value;\n    this.afterValueChange('isChecked');\n  }\n\n  get isAllChecked(): boolean {\n    return this._isAllChecked;\n  }\n\n  /**\n   * @deprecated Maybe removed in next major version, use `isChecked` instead.\n   */\n  set isAllChecked(value: boolean) {\n    warnDeprecation(`'isAllChecked' is going to be removed in 9.0.0. Please use 'isChecked' instead.`);\n    this._isAllChecked = value;\n  }\n\n  get isHalfChecked(): boolean {\n    return this._isHalfChecked;\n  }\n\n  set isHalfChecked(value: boolean) {\n    this._isHalfChecked = value;\n    this.afterValueChange('isHalfChecked');\n  }\n\n  get isSelectable(): boolean {\n    return this._isSelectable;\n  }\n\n  set isSelectable(value: boolean) {\n    this._isSelectable = value;\n    this.update();\n  }\n\n  get isDisabled(): boolean {\n    return this._isDisabled;\n  }\n\n  set isDisabled(value: boolean) {\n    this._isDisabled = value;\n    this.update();\n  }\n\n  get isDisableCheckbox(): boolean {\n    return this._isDisableCheckbox;\n  }\n\n  set isDisableCheckbox(value: boolean) {\n    this._isDisableCheckbox = value;\n    this.update();\n  }\n\n  get isExpanded(): boolean {\n    return this._isExpanded;\n  }\n\n  set isExpanded(value: boolean) {\n    this._isExpanded = value;\n    this.origin.expanded = value;\n    this.afterValueChange('isExpanded');\n    this.afterValueChange('reRender');\n  }\n\n  get isSelected(): boolean {\n    return this._isSelected;\n  }\n\n  set isSelected(value: boolean) {\n    this._isSelected = value;\n    this.origin.selected = value;\n    this.afterValueChange('isSelected');\n  }\n\n  get isLoading(): boolean {\n    return this._isLoading;\n  }\n\n  set isLoading(value: boolean) {\n    this._isLoading = value;\n    this.update();\n  }\n\n  public setSyncChecked(checked: boolean = false, halfChecked: boolean = false): void {\n    this.setChecked(checked, halfChecked);\n    if (this.treeService && !this.treeService.isCheckStrictly) {\n      this.treeService.conduct(this);\n    }\n  }\n\n  /**\n   * @deprecated Maybe removed in next major version, use `isChecked` instead.\n   */\n  public setChecked(checked: boolean = false, halfChecked: boolean = false): void {\n    warnDeprecation(`'setChecked' is going to be removed in 9.0.0. Please use 'isChecked' instead.`);\n    this.origin.checked = checked;\n    this.isChecked = checked;\n    this.isAllChecked = checked;\n    this.isHalfChecked = halfChecked;\n  }\n\n  /**\n   * @not-deprecated Maybe removed in next major version, use `isExpanded` instead.\n   * We need it until tree refactoring is finished\n   */\n  public setExpanded(value: boolean): void {\n    this._isExpanded = value;\n    this.origin.expanded = value;\n    this.afterValueChange('isExpanded');\n  }\n\n  /**\n   * @deprecated Maybe removed in next major version, use `isSelected` instead.\n   */\n  public setSelected(value: boolean): void {\n    warnDeprecation(`'setSelected' is going to be removed in 9.0.0. Please use 'isExpanded' isSelected.`);\n    if (this.isDisabled) {\n      return;\n    }\n    this.isSelected = value;\n  }\n\n  public getParentNode(): NzTreeNode | null {\n    return this.parentNode;\n  }\n\n  public getChildren(): NzTreeNode[] {\n    return this.children;\n  }\n\n  /**\n   * Support appending child nodes by position. Leaf node cannot be appended.\n   */\n  public addChildren(children: NzSafeAny[], childPos: number = -1): void {\n    if (!this.isLeaf) {\n      children.forEach(node => {\n        const refreshLevel = (n: NzTreeNode) => {\n          n.getChildren().forEach(c => {\n            c.level = c.getParentNode()!.level + 1;\n            // flush origin\n            c.origin.level = c.level;\n            refreshLevel(c);\n          });\n        };\n        let child = node;\n        if (child instanceof NzTreeNode) {\n          child.parentNode = this;\n        } else {\n          child = new NzTreeNode(node, this);\n        }\n        child.level = this.level + 1;\n        child.origin.level = child.level;\n        refreshLevel(child);\n        try {\n          childPos === -1 ? this.children.push(child) : this.children.splice(childPos, 0, child);\n          // flush origin\n        } catch (e) {}\n      });\n      this.origin.children = this.getChildren().map(v => v.origin);\n      // remove loading state\n      this.isLoading = false;\n    }\n    this.afterValueChange('addChildren');\n    this.afterValueChange('reRender');\n  }\n\n  public clearChildren(): void {\n    // refresh checked state\n    this.afterValueChange('clearChildren');\n    this.children = [];\n    this.origin.children = [];\n    this.afterValueChange('reRender');\n  }\n\n  public remove(): void {\n    const parentNode = this.getParentNode();\n    if (parentNode) {\n      parentNode.children = parentNode.getChildren().filter(v => v.key !== this.key);\n      parentNode.origin.children = parentNode.origin.children!.filter(v => v.key !== this.key);\n      this.afterValueChange('remove');\n      this.afterValueChange('reRender');\n    }\n  }\n\n  public afterValueChange(key: string): void {\n    if (this.treeService) {\n      switch (key) {\n        case 'isChecked':\n          this.treeService.setCheckedNodeList(this);\n          break;\n        case 'isHalfChecked':\n          this.treeService.setHalfCheckedNodeList(this);\n          break;\n        case 'isExpanded':\n          this.treeService.setExpandedNodeList(this);\n          break;\n        case 'isSelected':\n          this.treeService.setNodeActive(this);\n          break;\n        case 'clearChildren':\n          this.treeService.afterRemove(this.getChildren());\n          break;\n        case 'remove':\n          this.treeService.afterRemove([this]);\n          break;\n        case 'reRender':\n          this.treeService.flattenTreeData(\n            this.treeService.rootNodes,\n            this.treeService.getExpandedNodeList().map(v => v.key!)\n          );\n          break;\n      }\n    }\n    this.update();\n  }\n\n  public update(): void {\n    if (this.component) {\n      this.component.markForCheck();\n    }\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { NzTreeNode } from './nz-tree-base-node';\n\nexport interface NzFormatEmitEvent {\n  eventName: string;\n  node?: NzTreeNode | null;\n  event?: MouseEvent | DragEvent | null;\n  dragNode?: NzTreeNode;\n  selectedKeys?: NzTreeNode[];\n  checkedKeys?: NzTreeNode[];\n  matchedKeys?: NzTreeNode[];\n  nodes?: NzTreeNode[];\n  keys?: string[];\n}\n\nexport interface NzFormatBeforeDropEvent {\n  dragNode: NzTreeNode;\n  node: NzTreeNode;\n  pos: number;\n}\n\nexport interface NzTreeNodeBaseComponent {\n  markForCheck(): void;\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { FlattenNode, NzTreeNode, NzTreeNodeKey } from './nz-tree-base-node';\n\nexport function isCheckDisabled(node: NzTreeNode): boolean {\n  const { isDisabled, isDisableCheckbox } = node;\n  return !!(isDisabled || isDisableCheckbox);\n}\n\nexport function isInArray(needle: NzSafeAny, haystack: NzSafeAny[]): boolean {\n  return haystack.length > 0 && haystack.indexOf(needle) > -1;\n}\n\nexport function getPosition(level: string | number, index: number): string {\n  return `${level}-${index}`;\n}\n\nexport function getKey(key: NzTreeNodeKey, pos: string): NzTreeNodeKey {\n  if (key !== null && key !== undefined) {\n    return key;\n  }\n  return pos;\n}\n\n/**\n * Flat nest tree data into flatten list. This is used for virtual list render.\n * @param treeNodeList Origin data node list\n * @param expandedKeys\n * need expanded keys, provides `true` means all expanded (used in `rc-tree-select`).\n */\nexport function flattenTreeData(treeNodeList: NzTreeNode[] = [], expandedKeys: NzTreeNodeKey[] | true = []): FlattenNode[] {\n  const expandedKeySet = new Set(expandedKeys === true ? [] : expandedKeys);\n  const flattenList: FlattenNode[] = [];\n\n  function dig(list: NzTreeNode[], parent: FlattenNode | null = null): FlattenNode[] {\n    return list.map((treeNode, index) => {\n      const pos: string = getPosition(parent ? parent.pos : '0', index);\n      const mergedKey = getKey(treeNode.key, pos);\n      treeNode.isStart = [...(parent ? parent.isStart : []), index === 0];\n      treeNode.isEnd = [...(parent ? parent.isEnd : []), index === list.length - 1];\n      // Add FlattenDataNode into list\n      // TODO: only need data here.\n      const flattenNode: FlattenNode = {\n        parent,\n        pos,\n        children: [],\n        data: treeNode,\n        isStart: [...(parent ? parent.isStart : []), index === 0],\n        isEnd: [...(parent ? parent.isEnd : []), index === list.length - 1]\n      };\n\n      flattenList.push(flattenNode);\n\n      // Loop treeNode children\n      if (expandedKeys === true || expandedKeySet.has(mergedKey) || treeNode.isExpanded) {\n        flattenNode.children = dig(treeNode.children || [], flattenNode);\n      } else {\n        flattenNode.children = [];\n      }\n\n      return flattenNode;\n    });\n  }\n\n  dig(treeNodeList);\n  return flattenList;\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { Injectable } from '@angular/core';\n\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { BehaviorSubject } from 'rxjs';\nimport { NzTreeNode, NzTreeNodeKey } from './nz-tree-base-node';\nimport { flattenTreeData, isCheckDisabled, isInArray } from './nz-tree-base-util';\nimport { NzFormatEmitEvent } from './nz-tree-base.definitions';\n\n@Injectable()\nexport class NzTreeBaseService {\n  DRAG_SIDE_RANGE = 0.25;\n  DRAG_MIN_GAP = 2;\n\n  isCheckStrictly: boolean = false;\n  isMultiple: boolean = false;\n  selectedNode!: NzTreeNode;\n  rootNodes: NzTreeNode[] = [];\n  flattenNodes$ = new BehaviorSubject<NzTreeNode[]>([]);\n  selectedNodeList: NzTreeNode[] = [];\n  expandedNodeList: NzTreeNode[] = [];\n  checkedNodeList: NzTreeNode[] = [];\n  halfCheckedNodeList: NzTreeNode[] = [];\n  matchedNodeList: NzTreeNode[] = [];\n\n  /**\n   * reset tree nodes will clear default node list\n   */\n  initTree(nzNodes: NzTreeNode[]): void {\n    this.rootNodes = nzNodes;\n    this.expandedNodeList = [];\n    this.selectedNodeList = [];\n    this.halfCheckedNodeList = [];\n    this.checkedNodeList = [];\n    this.matchedNodeList = [];\n  }\n\n  flattenTreeData(nzNodes: NzTreeNode[], expandedKeys: NzTreeNodeKey[] | true = []): void {\n    this.flattenNodes$.next(flattenTreeData(nzNodes, expandedKeys).map(item => item.data));\n  }\n\n  getSelectedNode(): NzTreeNode | null {\n    return this.selectedNode;\n  }\n\n  /**\n   * get some list\n   */\n  getSelectedNodeList(): NzTreeNode[] {\n    return this.conductNodeState('select');\n  }\n\n  /**\n   * return checked nodes\n   */\n  getCheckedNodeList(): NzTreeNode[] {\n    return this.conductNodeState('check');\n  }\n\n  getHalfCheckedNodeList(): NzTreeNode[] {\n    return this.conductNodeState('halfCheck');\n  }\n\n  /**\n   * return expanded nodes\n   */\n  getExpandedNodeList(): NzTreeNode[] {\n    return this.conductNodeState('expand');\n  }\n\n  /**\n   * return search matched nodes\n   */\n  getMatchedNodeList(): NzTreeNode[] {\n    return this.conductNodeState('match');\n  }\n\n  isArrayOfNzTreeNode(value: NzSafeAny[]): boolean {\n    return value.every(item => item instanceof NzTreeNode);\n  }\n\n  /**\n   * set drag node\n   */\n  setSelectedNode(node: NzTreeNode): void {\n    this.selectedNode = node;\n  }\n\n  /**\n   * set node selected status\n   */\n  setNodeActive(node: NzTreeNode): void {\n    if (!this.isMultiple && node.isSelected) {\n      this.selectedNodeList.forEach(n => {\n        if (node.key !== n.key) {\n          // reset other nodes\n          n.isSelected = false;\n        }\n      });\n      // single mode: remove pre node\n      this.selectedNodeList = [];\n    }\n    this.setSelectedNodeList(node, this.isMultiple);\n  }\n\n  /**\n   * add or remove node to selectedNodeList\n   */\n  setSelectedNodeList(node: NzTreeNode, isMultiple: boolean = false): void {\n    const index = this.getIndexOfArray(this.selectedNodeList, node.key);\n    if (isMultiple) {\n      if (node.isSelected && index === -1) {\n        this.selectedNodeList.push(node);\n      }\n    } else {\n      if (node.isSelected && index === -1) {\n        this.selectedNodeList = [node];\n      }\n    }\n    if (!node.isSelected) {\n      this.selectedNodeList = this.selectedNodeList.filter(n => n.key !== node.key);\n    }\n  }\n\n  /**\n   * merge checked nodes\n   */\n  setHalfCheckedNodeList(node: NzTreeNode): void {\n    const index = this.getIndexOfArray(this.halfCheckedNodeList, node.key);\n    if (node.isHalfChecked && index === -1) {\n      this.halfCheckedNodeList.push(node);\n    } else if (!node.isHalfChecked && index > -1) {\n      this.halfCheckedNodeList = this.halfCheckedNodeList.filter(n => node.key !== n.key);\n    }\n  }\n\n  setCheckedNodeList(node: NzTreeNode): void {\n    const index = this.getIndexOfArray(this.checkedNodeList, node.key);\n    if (node.isChecked && index === -1) {\n      this.checkedNodeList.push(node);\n    } else if (!node.isChecked && index > -1) {\n      this.checkedNodeList = this.checkedNodeList.filter(n => node.key !== n.key);\n    }\n  }\n\n  /**\n   * conduct checked/selected/expanded keys\n   */\n  conductNodeState(type: string = 'check'): NzTreeNode[] {\n    let resultNodesList: NzTreeNode[] = [];\n    switch (type) {\n      case 'select':\n        resultNodesList = this.selectedNodeList;\n        break;\n      case 'expand':\n        resultNodesList = this.expandedNodeList;\n        break;\n      case 'match':\n        resultNodesList = this.matchedNodeList;\n        break;\n      case 'check':\n        resultNodesList = this.checkedNodeList;\n        const isIgnore = (node: NzTreeNode): boolean => {\n          const parentNode = node.getParentNode();\n          if (parentNode) {\n            if (this.checkedNodeList.findIndex(n => n.key === parentNode.key) > -1) {\n              return true;\n            } else {\n              return isIgnore(parentNode);\n            }\n          }\n          return false;\n        };\n        // merge checked\n        if (!this.isCheckStrictly) {\n          resultNodesList = this.checkedNodeList.filter(n => !isIgnore(n));\n        }\n        break;\n      case 'halfCheck':\n        if (!this.isCheckStrictly) {\n          resultNodesList = this.halfCheckedNodeList;\n        }\n        break;\n    }\n    return resultNodesList;\n  }\n\n  /**\n   * set expanded nodes\n   */\n  setExpandedNodeList(node: NzTreeNode): void {\n    if (node.isLeaf) {\n      return;\n    }\n    const index = this.getIndexOfArray(this.expandedNodeList, node.key);\n    if (node.isExpanded && index === -1) {\n      this.expandedNodeList.push(node);\n    } else if (!node.isExpanded && index > -1) {\n      this.expandedNodeList.splice(index, 1);\n    }\n  }\n\n  setMatchedNodeList(node: NzTreeNode): void {\n    const index = this.getIndexOfArray(this.matchedNodeList, node.key);\n    if (node.isMatched && index === -1) {\n      this.matchedNodeList.push(node);\n    } else if (!node.isMatched && index > -1) {\n      this.matchedNodeList.splice(index, 1);\n    }\n  }\n\n  /**\n   * check state\n   * @param isCheckStrictly\n   */\n  refreshCheckState(isCheckStrictly: boolean = false): void {\n    if (isCheckStrictly) {\n      return;\n    }\n    this.checkedNodeList.forEach(node => {\n      this.conduct(node, isCheckStrictly);\n    });\n  }\n\n  // reset other node checked state based current node\n  conduct(node: NzTreeNode, isCheckStrictly: boolean = false): void {\n    const isChecked = node.isChecked;\n    if (node && !isCheckStrictly) {\n      this.conductUp(node);\n      this.conductDown(node, isChecked);\n    }\n  }\n\n  /**\n   * 1、children half checked\n   * 2、children all checked, parent checked\n   * 3、no children checked\n   */\n  conductUp(node: NzTreeNode): void {\n    const parentNode = node.getParentNode();\n    if (parentNode) {\n      if (!isCheckDisabled(parentNode)) {\n        if (parentNode.children.every(child => isCheckDisabled(child) || (!child.isHalfChecked && child.isChecked))) {\n          parentNode.isChecked = true;\n          parentNode.isHalfChecked = false;\n        } else if (parentNode.children.some(child => child.isHalfChecked || child.isChecked)) {\n          parentNode.isChecked = false;\n          parentNode.isHalfChecked = true;\n        } else {\n          parentNode.isChecked = false;\n          parentNode.isHalfChecked = false;\n        }\n      }\n      this.setCheckedNodeList(parentNode);\n      this.setHalfCheckedNodeList(parentNode);\n      this.conductUp(parentNode);\n    }\n  }\n\n  /**\n   * reset child check state\n   */\n  conductDown(node: NzTreeNode, value: boolean): void {\n    if (!isCheckDisabled(node)) {\n      node.isChecked = value;\n      node.isHalfChecked = false;\n      this.setCheckedNodeList(node);\n      this.setHalfCheckedNodeList(node);\n      node.children.forEach(n => {\n        this.conductDown(n, value);\n      });\n    }\n  }\n\n  /**\n   * flush after delete node\n   */\n  afterRemove(nodes: NzTreeNode[]): void {\n    // to reset selectedNodeList & expandedNodeList\n    const loopNode = (node: NzTreeNode) => {\n      // remove selected node\n      this.selectedNodeList = this.selectedNodeList.filter(n => n.key !== node.key);\n      // remove expanded node\n      this.expandedNodeList = this.expandedNodeList.filter(n => n.key !== node.key);\n      // remove checked node\n      this.checkedNodeList = this.checkedNodeList.filter(n => n.key !== node.key);\n      if (node.children) {\n        node.children.forEach(child => {\n          loopNode(child);\n        });\n      }\n    };\n    nodes.forEach(n => {\n      loopNode(n);\n    });\n    this.refreshCheckState(this.isCheckStrictly);\n  }\n\n  /**\n   * drag event\n   */\n  refreshDragNode(node: NzTreeNode): void {\n    if (node.children.length === 0) {\n      // until root\n      this.conductUp(node);\n    } else {\n      node.children.forEach(child => {\n        this.refreshDragNode(child);\n      });\n    }\n  }\n\n  // reset node level\n  resetNodeLevel(node: NzTreeNode): void {\n    const parentNode = node.getParentNode();\n    if (parentNode) {\n      node.level = parentNode.level + 1;\n    } else {\n      node.level = 0;\n    }\n    for (const child of node.children) {\n      this.resetNodeLevel(child);\n    }\n  }\n\n  calcDropPosition(event: DragEvent): number {\n    const { clientY } = event;\n    // to fix firefox undefined\n    const { top, bottom, height } = event.srcElement\n      ? (event.srcElement as Element).getBoundingClientRect()\n      : (event.target as Element).getBoundingClientRect();\n    const des = Math.max(height * this.DRAG_SIDE_RANGE, this.DRAG_MIN_GAP);\n\n    if (clientY <= top + des) {\n      return -1;\n    } else if (clientY >= bottom - des) {\n      return 1;\n    }\n\n    return 0;\n  }\n\n  /**\n   * drop\n   * 0: inner -1: pre 1: next\n   */\n  dropAndApply(targetNode: NzTreeNode, dragPos: number = -1): void {\n    if (!targetNode || dragPos > 1) {\n      return;\n    }\n    const treeService = targetNode.treeService;\n    const targetParent = targetNode.getParentNode();\n    const isSelectedRootNode = this.selectedNode.getParentNode();\n    // remove the dragNode\n    if (isSelectedRootNode) {\n      isSelectedRootNode.children = isSelectedRootNode.children.filter(n => n.key !== this.selectedNode.key);\n    } else {\n      this.rootNodes = this.rootNodes.filter(n => n.key !== this.selectedNode.key);\n    }\n    switch (dragPos) {\n      case 0:\n        targetNode.addChildren([this.selectedNode]);\n        this.resetNodeLevel(targetNode);\n        break;\n      case -1:\n      case 1:\n        const tIndex = dragPos === 1 ? 1 : 0;\n        if (targetParent) {\n          targetParent.addChildren([this.selectedNode], targetParent.children.indexOf(targetNode) + tIndex);\n          const parentNode = this.selectedNode.getParentNode();\n          if (parentNode) {\n            this.resetNodeLevel(parentNode);\n          }\n        } else {\n          const targetIndex = this.rootNodes.indexOf(targetNode) + tIndex;\n          // Insert root node.\n          this.rootNodes.splice(targetIndex, 0, this.selectedNode);\n          this.rootNodes[targetIndex].parentNode = null;\n          this.resetNodeLevel(this.rootNodes[targetIndex]);\n        }\n        break;\n    }\n    // flush all nodes\n    this.rootNodes.forEach(child => {\n      if (!child.treeService) {\n        child.service = treeService;\n      }\n      this.refreshDragNode(child);\n    });\n  }\n\n  /**\n   * emit Structure\n   * eventName\n   * node\n   * event: MouseEvent / DragEvent\n   * dragNode\n   */\n  formatEvent(eventName: string, node: NzTreeNode | null, event: MouseEvent | DragEvent | null): NzFormatEmitEvent {\n    const emitStructure: NzFormatEmitEvent = {\n      eventName: eventName,\n      node: node,\n      event: event\n    };\n    switch (eventName) {\n      case 'dragstart':\n      case 'dragenter':\n      case 'dragover':\n      case 'dragleave':\n      case 'drop':\n      case 'dragend':\n        Object.assign(emitStructure, { dragNode: this.getSelectedNode() });\n        break;\n      case 'click':\n      case 'dblclick':\n        Object.assign(emitStructure, { selectedKeys: this.selectedNodeList });\n        Object.assign(emitStructure, { nodes: this.selectedNodeList });\n        Object.assign(emitStructure, { keys: this.selectedNodeList.map(n => n.key) });\n        break;\n      case 'check':\n        const checkedNodeList = this.getCheckedNodeList();\n        Object.assign(emitStructure, { checkedKeys: checkedNodeList });\n        Object.assign(emitStructure, { nodes: checkedNodeList });\n        Object.assign(emitStructure, { keys: checkedNodeList.map(n => n.key) });\n        break;\n      case 'search':\n        Object.assign(emitStructure, { matchedKeys: this.getMatchedNodeList() });\n        Object.assign(emitStructure, { nodes: this.getMatchedNodeList() });\n        Object.assign(emitStructure, { keys: this.getMatchedNodeList().map(n => n.key) });\n        break;\n      case 'expand':\n        Object.assign(emitStructure, { nodes: this.expandedNodeList });\n        Object.assign(emitStructure, { keys: this.expandedNodeList.map(n => n.key) });\n        break;\n    }\n    return emitStructure;\n  }\n\n  /**\n   * New functions for flatten nodes\n   */\n\n  getIndexOfArray(list: NzTreeNode[], key: string): number {\n    return list.findIndex(v => v.key === key);\n  }\n\n  /**\n   * Render by nzCheckedKeys\n   * When keys equals null, just render with checkStrictly\n   * @param keys\n   * @param checkStrictly\n   */\n  conductCheck(keys: NzTreeNodeKey[] | null, checkStrictly: boolean): void {\n    this.checkedNodeList = [];\n    this.halfCheckedNodeList = [];\n    const calc = (nodes: NzTreeNode[]) => {\n      nodes.forEach(node => {\n        if (keys === null) {\n          // render tree if no default checked keys found\n          node.isChecked = !!node.origin.checked;\n        } else {\n          if (isInArray(node.key, keys || [])) {\n            node.isChecked = true;\n            node.isHalfChecked = false;\n          } else {\n            node.isChecked = false;\n            node.isHalfChecked = false;\n          }\n        }\n        if (node.children.length > 0) {\n          calc(node.children);\n        }\n      });\n    };\n    calc(this.rootNodes);\n    this.refreshCheckState(checkStrictly);\n  }\n\n  conductExpandedKeys(keys: NzTreeNodeKey[] | true = []): void {\n    const expandedKeySet = new Set(keys === true ? [] : keys);\n    this.expandedNodeList = [];\n    const calc = (nodes: NzTreeNode[]) => {\n      nodes.forEach(node => {\n        node.setExpanded(keys === true || expandedKeySet.has(node.key) || node.isExpanded === true);\n        if (node.isExpanded) {\n          this.setExpandedNodeList(node);\n        }\n        if (node.children.length > 0) {\n          calc(node.children);\n        }\n      });\n    };\n    calc(this.rootNodes);\n  }\n\n  conductSelectedKeys(keys: NzTreeNodeKey[], isMulti: boolean): void {\n    this.selectedNodeList.forEach(node => (node.isSelected = false));\n    this.selectedNodeList = [];\n    const calc = (nodes: NzTreeNode[]): boolean => {\n      return nodes.every(node => {\n        if (isInArray(node.key, keys)) {\n          node.isSelected = true;\n          this.setSelectedNodeList(node);\n          if (!isMulti) {\n            // if not support multi select\n            return false;\n          }\n        } else {\n          node.isSelected = false;\n        }\n        if (node.children.length > 0) {\n          // Recursion\n          return calc(node.children);\n        }\n        return true;\n      });\n    };\n    calc(this.rootNodes);\n  }\n\n  /**\n   * Expand parent nodes by child node\n   * @param node\n   */\n  expandNodeAllParentBySearch(node: NzTreeNode): void {\n    const calc = (n: NzTreeNode | null): void => {\n      if (n) {\n        n.canHide = false;\n        n.setExpanded(true);\n        this.setExpandedNodeList(n);\n        if (n.getParentNode()) {\n          return calc(n.getParentNode());\n        }\n      }\n    };\n    calc(node.getParentNode());\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { InjectionToken } from '@angular/core';\n\nimport { NzTreeBaseService } from './nz-tree-base.service';\n\nexport const NzTreeHigherOrderServiceToken = new InjectionToken<NzTreeBaseService>('NzTreeHigherOrder');\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { NzTreeNode } from './nz-tree-base-node';\nimport { NzTreeBaseService } from './nz-tree-base.service';\n\nexport class NzTreeBase {\n  constructor(public nzTreeService: NzTreeBaseService) {}\n\n  /**\n   * Coerces a value({@link any[]}) to a TreeNodes({@link NzTreeNode[]})\n   */\n  coerceTreeNodes(value: NzSafeAny[]): NzTreeNode[] {\n    let nodes: NzTreeNode[] = [];\n    if (!this.nzTreeService.isArrayOfNzTreeNode(value)) {\n      // has not been new NzTreeNode\n      nodes = value.map(item => new NzTreeNode(item, null, this.nzTreeService));\n    } else {\n      nodes = value.map((item: NzTreeNode) => {\n        item.service = this.nzTreeService;\n        return item;\n      });\n    }\n    return nodes;\n  }\n\n  /**\n   * Get all nodes({@link NzTreeNode})\n   */\n  getTreeNodes(): NzTreeNode[] {\n    return this.nzTreeService.rootNodes;\n  }\n\n  /**\n   * Get {@link NzTreeNode} with key\n   */\n  getTreeNodeByKey(key: string): NzTreeNode | null {\n    // flat tree nodes\n    const nodes: NzTreeNode[] = [];\n    const getNode = (node: NzTreeNode): void => {\n      nodes.push(node);\n      node.getChildren().forEach(n => {\n        getNode(n);\n      });\n    };\n    this.getTreeNodes().forEach(n => {\n      getNode(n);\n    });\n    return nodes.find(n => n.key === key) || null;\n  }\n\n  /**\n   * Get checked nodes(merged)\n   */\n  getCheckedNodeList(): NzTreeNode[] {\n    return this.nzTreeService.getCheckedNodeList();\n  }\n\n  /**\n   * Get selected nodes\n   */\n  getSelectedNodeList(): NzTreeNode[] {\n    return this.nzTreeService.getSelectedNodeList();\n  }\n\n  /**\n   * Get half checked nodes\n   */\n  getHalfCheckedNodeList(): NzTreeNode[] {\n    return this.nzTreeService.getHalfCheckedNodeList();\n  }\n\n  /**\n   * Get expanded nodes\n   */\n  getExpandedNodeList(): NzTreeNode[] {\n    return this.nzTreeService.getExpandedNodeList();\n  }\n\n  /**\n   * Get matched nodes(if nzSearchValue is not null)\n   */\n  getMatchedNodeList(): NzTreeNode[] {\n    return this.nzTreeService.getMatchedNodeList();\n  }\n}\n"]}