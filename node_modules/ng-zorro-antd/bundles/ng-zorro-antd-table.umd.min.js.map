{"version":3,"sources":["../../node_modules/tslib/tslib.es6.js","ng://ng-zorro-antd/table/src/addon/filter-trigger.component.ts","ng://ng-zorro-antd/table/src/addon/filter.component.ts","ng://ng-zorro-antd/table/src/addon/row-expand-button.directive.ts","ng://ng-zorro-antd/table/src/addon/row-indent.directive.ts","ng://ng-zorro-antd/table/src/addon/selection.component.ts","ng://ng-zorro-antd/table/src/addon/sorters.component.ts","ng://ng-zorro-antd/table/src/cell/cell-fixed.directive.ts","ng://ng-zorro-antd/table/src/table-style.service.ts","ng://ng-zorro-antd/table/src/cell/cell.directive.ts","ng://ng-zorro-antd/table/src/cell/td-addon.component.ts","ng://ng-zorro-antd/table/src/cell/th-addon.component.ts","ng://ng-zorro-antd/table/src/cell/th-measure.directive.ts","ng://ng-zorro-antd/table/src/cell/th-selection.component.ts","ng://ng-zorro-antd/table/src/styled/align.directive.ts","ng://ng-zorro-antd/table/src/styled/ellipsis.directive.ts","ng://ng-zorro-antd/table/src/styled/word-break.directive.ts","ng://ng-zorro-antd/table/src/table/table-content.component.ts","ng://ng-zorro-antd/table/src/table/table-fixed-row.component.ts","ng://ng-zorro-antd/table/src/table/table-inner-default.component.ts","ng://ng-zorro-antd/table/src/table/table-inner-scroll.component.ts","ng://ng-zorro-antd/table/src/table/table-virtual-scroll.directive.ts","ng://ng-zorro-antd/table/src/table-data.service.ts","ng://ng-zorro-antd/table/src/table/table.component.ts","ng://ng-zorro-antd/table/src/table/tbody.component.ts","ng://ng-zorro-antd/table/src/table/tr.directive.ts","ng://ng-zorro-antd/table/src/table/thead.component.ts","ng://ng-zorro-antd/table/src/table/title-footer.component.ts","ng://ng-zorro-antd/table/src/table/tr-expand.directive.ts","ng://ng-zorro-antd/table/src/table/tr-measure.component.ts","ng://ng-zorro-antd/table/src/table.module.ts"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","__decorate","decorators","target","key","desc","d","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__metadata","metadataKey","metadataValue","metadata","__values","o","Symbol","iterator","m","next","value","done","TypeError","__read","e","ar","push","error","__spread","concat","NzFilterTriggerComponent","cdr","nzActive","nzVisible","nzVisibleChange","EventEmitter","onVisibleChange","visible","onFilterClick","$event","stopPropagation","hide","markForCheck","show","Component","args","selector","exportAs","changeDetection","ChangeDetectionStrategy","OnPush","preserveWhitespaces","encapsulation","ViewEncapsulation","None","template","host","[class.ant-table-filter-trigger-container]","[class.ant-table-filter-trigger-container-open]","ChangeDetectorRef","Input","Output","NzTableFilterComponent","i18n","contentTemplate","customFilter","extraTemplate","filterMultiple","listOfFilter","filterChange","destroy$","Subject","isChanged","isChecked","isVisible","listOfParsedFilter","trackByValue","_","item","check","filter","map","checked","getCheckedStatus","confirm","emitFilterData","reset","parseListOfFilter","listOfChecked","emit","byDefault","text","some","ngOnInit","_this","localeChange","pipe","takeUntil","subscribe","locale","getLocaleData","ngOnChanges","changes","ngOnDestroy","complete","[class.ant-table-filter-column]","NzI18nService","NzRowExpandButtonDirective","expand","spaceMode","expandChange","onHostClick","Directive","[type]","[class.ant-table-row-expand-icon]","[class.ant-table-row-expand-icon-expanded]","[class.ant-table-row-expand-icon-collapsed]","[class.ant-table-row-expand-icon-spaced]","(click)","NzRowIndentDirective","indentSize","[class.ant-table-row-indent]","[style.padding-left.px]","NzTableSelectionComponent","listOfSelections","disabled","indeterminate","showCheckbox","showRowSelection","checkedChange","onCheckedChange","[class.ant-table-selection]","NzTableSortersComponent","sortDirections","sortOrder","isUp","isDown","indexOf","[class.ant-table-column-sorters]","NzCellFixedDirective","renderer","elementRef","nzRight","nzLeft","colspan","colSpan","changes$","isAutoLeft","isAutoRight","isFixedLeft","isFixedRight","isFixed","setAutoLeftWidth","autoLeft","setStyle","nativeElement","setAutoRightWidth","autoRight","setIsFirstRight","isFirstRight","setFixClass","setIsLastLeft","isLastLeft","flag","className","removeClass","addClass","validatePx","[class.ant-table-cell-fix-right]","[class.ant-table-cell-fix-left]","[style.position]","Renderer2","ElementRef","NzTableStyleService","theadTemplate$","ReplaySubject","hasFixLeft$","hasFixRight$","hostWidth$","columnCount$","showEmpty$","noResult$","listOfThWidthConfigPx$","BehaviorSubject","tableWidthConfigPx$","manualWidthConfigPx$","combineLatest","_a","_b","widthConfig","listOfWidth","listOfAutoWidthPx$","listOfListOfThWidthPx$","merge","autoWidth","manualWidth","width","index","listOfMeasureColumn$","listOfListOfThWidth$","list","parseInt","enableAutoMeasure$","setTheadTemplate","setHasFixLeft","hasFixLeft","setHasFixRight","hasFixRight","setTableWidthConfig","setListOfTh","listOfTh","columnCount","forEach","th","listOfThPx","nzWidth","setListOfMeasureColumn","listOfKeys","setListOfAutoWidth","listOfAutoWidth","setShowEmpty","showEmpty","setNoResult","noResult","setScroll","scrollX","scrollY","enableAutoMeasure","Injectable","NzTableCellDirective","nzTableStyleService","isInsideTable","[class.ant-table-cell]","type","Optional","NzTdAddOnComponent","nzChecked","nzDisabled","nzIndeterminate","nzIndentSize","nzShowExpand","nzShowCheckbox","nzExpand","nzCheckedChange","nzExpandChange","isNzShowExpandChanged","isNzShowCheckboxChanged","onExpandChange","isFirstChange","firstChange","undefined","currentValue","[class.ant-table-cell-with-append]","[class.ant-table-selection-column]","InputBoolean","NzThAddOnComponent","manualClickOrder$","calcOperatorChange$","nzFilterValue","sortOrderChange$","isNzShowSortChanged","isNzShowFilterChanged","nzFilterMultiple","nzSortOrder","nzSortPriority","nzSortDirections","nzFilters","nzSortFn","nzFilterFn","nzShowSort","nzShowFilter","nzCustomFilter","nzSortOrderChange","nzFilterChange","nzSort","nzSortChange","getNextSortDirection","current","emitNextSortValue","nextOrder","setSortOrder","order","clearSortOrder","onFilterValueChange","updateCalcOperator","nzSortKey","warnDeprecation","nzColumnKey","listOfValue","[class.ant-table-column-has-sorters]","[class.ant-table-column-sort]","NzThMeasureDirective","rowspan","rowSpan","col","isNil","removeAttribute","setAttribute","row","NzThSelectionComponent","nzSelections","nzShowRowSelection","nzSortChangeWithKey","NzCellAlignDirective","nzAlign","[style.text-align]","NzCellEllipsisDirective","nzEllipsis","[class.ant-table-cell-ellipsis]","NzCellBreakWordDirective","nzBreakWord","[style.word-break]","NzTableContentComponent","tableLayout","theadTemplate","listOfColWidth","[style.table-layout]","[class.ant-table-fixed]","[style.width]","[style.min-width]","NzTableFixedRowComponent","ngAfterViewInit","count","tdElement","ViewChild","NzTableInnerDefaultComponent","[class.ant-table-container]","NzTableInnerScrollComponent","ngZone","platform","resizeService","data","virtualTemplate","virtualItemSize","virtualMaxBufferPx","virtualMinBufferPx","virtualForTrackBy","headerStyleMap","bodyStyleMap","verticalScrollBarWidth","noDateVirtualHeight","data$","scroll$","setScrollPositionClassName","clear","tableBodyElement","scrollWidth","scrollLeft","clientWidth","tableMainElement","hasVerticalScrollBar","overflowX","overflowY","maxHeight","isBrowser","runOutsideAngular","scrollEvent$","fromEvent","scrollX$","scrollY$","resize$","startWith","delay","tableHeaderElement","NgZone","Platform","NzResizeService","read","CdkVirtualScrollViewport","NzTableVirtualScrollDirective","templateRef","TemplateRef","NzTableDataService","pageIndex$","frontPagination$","pageSize$","listOfData$","pageIndexDistinct$","distinctUntilChanged","pageSizeDistinct$","listOfCalcOperator$","queryParams$","debounceTime","skip","pageIndex","pageSize","listOfCalc","sort","sortFn","filterFn","filterValue","listOfDataAfterCalc$","_c","listOfData","listOfCalcOperator","listOfDataAfterCalc","listOfFilterOperator","Array","isArray","listOfFilterOperator_1","listOfFilterOperator_1_1","listOfSortOperator","a","b","sortPriority","record1","record2","listOfSortOperator_1","listOfSortOperator_1_1","compareResult","listOfFrontEndCurrentPageData$","Math","ceil","slice","listOfCurrentPageData$","switchMap","pagination","total$","updatePageSize","size","updateFrontPagination","updatePageIndex","updateListOfData","NzTableComponent","nzResizeObserver","nzConfigService","nzTableDataService","nzTableLayout","nzShowTotal","nzItemRender","nzTitle","nzFooter","nzNoResult","nzPageSizeOptions","nzVirtualItemSize","nzVirtualMaxBufferPx","nzVirtualMinBufferPx","nzVirtualForTrackBy","nzLoadingDelay","nzPageIndex","nzPageSize","nzTotal","nzWidthConfig","nzData","nzPaginationPosition","nzScroll","x","y","nzFrontPagination","nzTemplateMode","nzShowPagination","nzLoading","nzLoadingIndicator","nzBordered","nzSize","nzShowSizeChanger","nzHideOnSinglePage","nzShowQuickJumper","nzSimple","nzPageSizeChange","nzPageIndexChange","nzQueryParams","nzCurrentPageDataChange","listOfAutoColWidth","listOfManualColWidth","loading$","templateMode$","getConfigChangeEventForComponent","onPageSizeChange","onPageIndexChange","total","loading","templateMode","empty","measureScrollbar","observe","getBoundingClientRect","scrollBarWidth","floor","nzTableInnerScrollComponent","cdkVirtualScrollViewport","providers","[class.ant-table-wrapper]","NzResizeObserver","NzConfigService","ContentChild","static","WithConfig","NzTbodyComponent","onListOfAutoWidthChange","[class.ant-table-tbody]","NzTrDirective","listOfFixedColumns$","listOfColumns$","listOfFixedColumnsChanges$","flatMap","listOfFixedLeftColumnChanges$","listOfFixedRightColumnChanges$","listOfColumnsChanges$","ngAfterContentInit","listOfCellFixedDirective","listOfNzThDirective","listOfFixedLeft","cell","listOfFixedRight","listOfLeftCell","reduce","pre","cur","listOfRightCell","[class.ant-table-row]","ContentChildren","NzTheadComponent","nzSingleSort","firstTableRow$","listOfNzTrDirective","first","listOfColumnsChanges$_1","firstTableRow","EMPTY","enable","of","firstTr","listOfFixedLeftColumn","listOfFixedRightColumn","listOfColumn$_1","listOfNzThAddOnComponent","emitValue","removeChild","parentNode","descendants","NzTableTitleFooterComponent","title","footer","[class.ant-table-title]","[class.ant-table-footer]","NzTrExpandDirective","[class.ant-table-expanded-row]","[hidden]","NzTrMeasureComponent","listOfMeasureColumn","trackByFunc","listOfTdElement","toArray","run","[class.ant-table-measure-now]","ViewChildren","NzTableModule","NgModule","declarations","exports","imports","NzMenuModule","FormsModule","NzOutletModule","NzRadioModule","NzCheckboxModule","NzDropDownModule","NzButtonModule","CommonModule","PlatformModule","NzPaginationModule","NzResizeObserversModule","NzSpinModule","NzI18nModule","NzIconModule","NzEmptyModule","ScrollingModule"],"mappings":"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AAkBC,KACjCC,SAAU,sMAQVC,KAAM,CACJye,gCAAiC,qDAlB5B9D,EAAAA,wBAPPvH,EAAAA,uDA6BChT,EAAAA,+BACAC,EAAAA,gCACAqe,EAAAA,aAAYrf,KAAA,CAAC,gBAmChB8e,uBC9BA,SAAAQ,KAoE4B,2BApE3BC,EAAAA,SAAQvf,KAAA,CAAC,CACRwf,aAAc,CACZ9H,EACAxK,EACA1B,EACA8D,EACAxD,EACAqR,GACAxB,EACAG,GACA6C,GACAvK,EACAtO,EACA6K,EACA2N,GACA9M,EACAE,EACAoN,GACApa,EACAZ,EACA0M,EACAN,EACA3K,EACAtE,EACA6D,EACAuL,EACApR,EACAkS,EACArB,GAEF2P,QAAS,CACP/H,EACAxK,EACA1B,EACA8D,EACAxD,EACAqR,GACAxB,EACAG,GACA1H,EACAtO,EACA7G,EACA0f,GACAnO,EACAN,EACAG,EACAc,EACArB,GAEF4P,QAAS,CACPC,EAAAA,aACAC,EAAAA,YACAC,EAAAA,eACAC,EAAAA,cACAC,EAAAA,iBACAC,EAAAA,iBACAC,EAAAA,eACAC,EAAAA,aACAC,EAAAA,eACAC,EAAAA,mBACAC,EAAAA,wBACAC,EAAAA,aACAC,EAAAA,aACAC,EAAAA,aACAC,EAAAA,cACAC,EAAAA,qBAGwBpB","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, EventEmitter, Input, Output, ViewEncapsulation } from '@angular/core';\nimport { NzDropdownMenuComponent } from 'ng-zorro-antd/dropdown';\n\n@Component({\n  selector: 'nz-filter-trigger',\n  exportAs: `nzFilterTrigger`,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n  template: `\n    <span\n      nz-dropdown\n      class=\"ant-table-filter-trigger\"\n      nzTrigger=\"click\"\n      nzPlacement=\"bottomRight\"\n      [nzClickHide]=\"false\"\n      [nzDropdownMenu]=\"nzDropdownMenu\"\n      [class.active]=\"nzActive\"\n      [class.ant-table-filter-open]=\"nzVisible\"\n      [nzVisible]=\"nzVisible\"\n      (nzVisibleChange)=\"onVisibleChange($event)\"\n      (click)=\"onFilterClick($event)\"\n    >\n      <ng-content></ng-content>\n    </span>\n  `,\n  host: {\n    '[class.ant-table-filter-trigger-container]': 'true',\n    '[class.ant-table-filter-trigger-container-open]': 'nzVisible'\n  }\n})\nexport class NzFilterTriggerComponent {\n  @Input() nzActive = false;\n  @Input() nzDropdownMenu!: NzDropdownMenuComponent;\n  @Input() nzVisible = false;\n  @Output() readonly nzVisibleChange = new EventEmitter<boolean>();\n  onVisibleChange(visible: boolean): void {\n    this.nzVisible = visible;\n    this.nzVisibleChange.next(visible);\n  }\n  onFilterClick($event: MouseEvent): void {\n    $event.stopPropagation();\n  }\n  hide(): void {\n    this.nzVisible = false;\n    this.cdr.markForCheck();\n  }\n  show(): void {\n    this.nzVisible = true;\n    this.cdr.markForCheck();\n  }\n  constructor(private cdr: ChangeDetectorRef) {}\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n  SimpleChanges,\n  TemplateRef,\n  ViewEncapsulation\n} from '@angular/core';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { NzI18nService, NzTableI18nInterface } from 'ng-zorro-antd/i18n';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { NzTableFilterList } from '../table.types';\n\ninterface NzThItemInterface {\n  text: string;\n  value: NzSafeAny;\n  checked: boolean;\n}\n\n@Component({\n  selector: 'nz-table-filter',\n  preserveWhitespaces: false,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  template: `\n    <span class=\"ant-table-filter-column-title\">\n      <ng-template [ngTemplateOutlet]=\"contentTemplate\"></ng-template>\n    </span>\n    <ng-container *ngIf=\"!customFilter; else extraTemplate\">\n      <nz-filter-trigger\n        [nzVisible]=\"isVisible\"\n        [nzActive]=\"isChecked\"\n        [nzDropdownMenu]=\"filterMenu\"\n        (nzVisibleChange)=\"onVisibleChange($event)\"\n      >\n        <i nz-icon nzType=\"filter\" nzTheme=\"fill\"></i>\n      </nz-filter-trigger>\n      <nz-dropdown-menu #filterMenu=\"nzDropdownMenu\">\n        <div class=\"ant-table-filter-dropdown\">\n          <ul nz-menu>\n            <li nz-menu-item [nzSelected]=\"f.checked\" *ngFor=\"let f of listOfParsedFilter; trackBy: trackByValue\" (click)=\"check(f)\">\n              <label nz-radio *ngIf=\"!filterMultiple\" [ngModel]=\"f.checked\" (ngModelChange)=\"check(f)\"></label>\n              <label nz-checkbox *ngIf=\"filterMultiple\" [ngModel]=\"f.checked\" (ngModelChange)=\"check(f)\"></label>\n              <span>{{ f.text }}</span>\n            </li>\n          </ul>\n          <div class=\"ant-table-filter-dropdown-btns\">\n            <button nz-button nzType=\"link\" nzSize=\"small\" (click)=\"reset()\" [disabled]=\"!isChecked\">{{ locale.filterReset }}</button>\n            <button nz-button nzType=\"primary\" nzSize=\"small\" (click)=\"confirm()\">{{ locale.filterConfirm }}</button>\n          </div>\n        </div>\n      </nz-dropdown-menu>\n    </ng-container>\n  `,\n  host: {\n    '[class.ant-table-filter-column]': 'true'\n  }\n})\nexport class NzTableFilterComponent implements OnChanges, OnDestroy, OnInit {\n  @Input() contentTemplate: TemplateRef<NzSafeAny> | null = null;\n  @Input() customFilter = false;\n  @Input() extraTemplate: TemplateRef<NzSafeAny> | null = null;\n  @Input() filterMultiple = true;\n  @Input() listOfFilter: NzTableFilterList = [];\n  @Output() readonly filterChange = new EventEmitter<NzSafeAny[] | NzSafeAny>();\n  private destroy$ = new Subject();\n  locale!: NzTableI18nInterface;\n  isChanged = false;\n  isChecked = false;\n  isVisible = false;\n  listOfParsedFilter: NzThItemInterface[] = [];\n\n  trackByValue(_: number, item: NzThItemInterface): NzSafeAny {\n    return item.value;\n  }\n\n  check(filter: NzThItemInterface): void {\n    this.isChanged = true;\n    if (this.filterMultiple) {\n      this.listOfParsedFilter = this.listOfParsedFilter.map(item => {\n        if (item === filter) {\n          return { ...item, checked: !filter.checked };\n        } else {\n          return item;\n        }\n      });\n      filter.checked = !filter.checked;\n    } else {\n      this.listOfParsedFilter = this.listOfParsedFilter.map(item => {\n        return { ...item, checked: item === filter };\n      });\n    }\n    this.isChecked = this.getCheckedStatus(this.listOfParsedFilter);\n  }\n\n  confirm(): void {\n    this.isVisible = false;\n    this.emitFilterData();\n  }\n\n  reset(): void {\n    this.isChanged = true;\n    this.isVisible = false;\n    this.listOfParsedFilter = this.parseListOfFilter(this.listOfFilter, true);\n    this.isChecked = this.getCheckedStatus(this.listOfParsedFilter);\n    this.emitFilterData();\n  }\n\n  onVisibleChange(value: boolean): void {\n    this.isVisible = value;\n    if (!value) {\n      this.emitFilterData();\n    }\n  }\n\n  emitFilterData(): void {\n    if (this.isChanged) {\n      const listOfChecked = this.listOfParsedFilter.filter(item => item.checked).map(item => item.value);\n      if (this.filterMultiple) {\n        this.filterChange.emit(listOfChecked);\n      } else {\n        this.filterChange.emit(listOfChecked.length > 0 ? listOfChecked[0] : null);\n      }\n      this.isChanged = false;\n    }\n  }\n\n  parseListOfFilter(listOfFilter: NzTableFilterList, reset?: boolean): NzThItemInterface[] {\n    return listOfFilter.map(item => {\n      const checked = reset ? false : !!item.byDefault;\n      return { text: item.text, value: item.value, checked };\n    });\n  }\n\n  getCheckedStatus(listOfParsedFilter: NzThItemInterface[]): boolean {\n    return listOfParsedFilter.some(item => item.checked);\n  }\n\n  constructor(private cdr: ChangeDetectorRef, private i18n: NzI18nService) {}\n\n  ngOnInit(): void {\n    this.i18n.localeChange.pipe(takeUntil(this.destroy$)).subscribe(() => {\n      this.locale = this.i18n.getLocaleData('Table');\n      this.cdr.markForCheck();\n    });\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    const { listOfFilter } = changes;\n    if (listOfFilter && this.listOfFilter && this.listOfFilter.length) {\n      this.listOfParsedFilter = this.parseListOfFilter(this.listOfFilter);\n      this.isChecked = this.getCheckedStatus(this.listOfParsedFilter);\n    }\n  }\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { Directive, EventEmitter, Input, Output } from '@angular/core';\n\n@Directive({\n  selector: 'button[nz-row-expand-button]',\n  host: {\n    '[type]': `'button'`,\n    '[class.ant-table-row-expand-icon]': 'true',\n    '[class.ant-table-row-expand-icon-expanded]': `!spaceMode && expand === true`,\n    '[class.ant-table-row-expand-icon-collapsed]': `!spaceMode && expand === false`,\n    '[class.ant-table-row-expand-icon-spaced]': 'spaceMode',\n    '(click)': 'onHostClick()'\n  }\n})\nexport class NzRowExpandButtonDirective {\n  @Input() expand = false;\n  @Input() spaceMode = false;\n  @Output() readonly expandChange = new EventEmitter();\n  onHostClick(): void {\n    if (!this.spaceMode) {\n      this.expand = !this.expand;\n      this.expandChange.next(this.expand);\n    }\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { Directive, Input } from '@angular/core';\n\n@Directive({\n  selector: 'nz-row-indent',\n  host: {\n    '[class.ant-table-row-indent]': 'true',\n    '[style.padding-left.px]': 'indentSize'\n  }\n})\nexport class NzRowIndentDirective {\n  @Input() indentSize = 0;\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { ChangeDetectionStrategy, Component, EventEmitter, Input, Output, ViewEncapsulation } from '@angular/core';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\n\n@Component({\n  selector: 'nz-table-selection',\n  preserveWhitespaces: false,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  template: `\n    <label\n      *ngIf=\"showCheckbox\"\n      nz-checkbox\n      [class.ant-table-selection-select-all-custom]=\"showRowSelection\"\n      [ngModel]=\"checked\"\n      [nzDisabled]=\"disabled\"\n      [nzIndeterminate]=\"indeterminate\"\n      (ngModelChange)=\"onCheckedChange($event)\"\n    >\n    </label>\n    <div class=\"ant-table-selection-extra\" *ngIf=\"showRowSelection\">\n      <span nz-dropdown class=\"ant-table-selection-down\" nzPlacement=\"bottomLeft\" [nzDropdownMenu]=\"selectionMenu\">\n        <i nz-icon nzType=\"down\"></i>\n      </span>\n      <nz-dropdown-menu #selectionMenu=\"nzDropdownMenu\">\n        <ul nz-menu class=\"ant-table-selection-menu\">\n          <li nz-menu-item *ngFor=\"let selection of listOfSelections\" (click)=\"selection.onSelect()\">\n            {{ selection.text }}\n          </li>\n        </ul>\n      </nz-dropdown-menu>\n    </div>\n  `,\n  host: {\n    '[class.ant-table-selection]': 'true'\n  }\n})\nexport class NzTableSelectionComponent {\n  @Input() listOfSelections: Array<{ text: string; onSelect(...args: NzSafeAny[]): NzSafeAny }> = [];\n  @Input() checked = false;\n  @Input() disabled = false;\n  @Input() indeterminate = false;\n  @Input() showCheckbox = false;\n  @Input() showRowSelection = false;\n  @Output() readonly checkedChange = new EventEmitter<boolean>();\n  onCheckedChange(checked: boolean): void {\n    this.checked = checked;\n    this.checkedChange.emit(checked);\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { ChangeDetectionStrategy, Component, Input, OnChanges, SimpleChanges, TemplateRef, ViewEncapsulation } from '@angular/core';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { NzTableSortOrder } from '../table.types';\n\n@Component({\n  selector: 'nz-table-sorters',\n  preserveWhitespaces: false,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  template: `\n    <span><ng-template [ngTemplateOutlet]=\"contentTemplate\"></ng-template></span>\n    <span class=\"ant-table-column-sorter\" [class.ant-table-column-sorter-full]=\"isDown && isUp\">\n      <span class=\"ant-table-column-sorter-inner\">\n        <i nz-icon nzType=\"caret-up\" *ngIf=\"isUp\" class=\"ant-table-column-sorter-up\" [class.active]=\"sortOrder == 'ascend'\"></i>\n        <i nz-icon nzType=\"caret-down\" *ngIf=\"isDown\" class=\"ant-table-column-sorter-down\" [class.active]=\"sortOrder == 'descend'\"></i>\n      </span>\n    </span>\n  `,\n  host: {\n    '[class.ant-table-column-sorters]': 'true'\n  }\n})\nexport class NzTableSortersComponent implements OnChanges {\n  @Input() sortDirections: NzTableSortOrder[] = ['ascend', 'descend', null];\n  @Input() sortOrder: NzTableSortOrder = null;\n  @Input() contentTemplate: TemplateRef<NzSafeAny> | null = null;\n  isUp = false;\n  isDown = false;\n  ngOnChanges(changes: SimpleChanges): void {\n    const { sortDirections } = changes;\n    if (sortDirections) {\n      this.isUp = this.sortDirections.indexOf('ascend') !== -1;\n      this.isDown = this.sortDirections.indexOf('descend') !== -1;\n    }\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { Directive, ElementRef, Input, OnChanges, Renderer2 } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n@Directive({\n  selector: 'td[nzRight],th[nzRight],td[nzLeft],th[nzLeft]',\n  host: {\n    '[class.ant-table-cell-fix-right]': `isFixedRight`,\n    '[class.ant-table-cell-fix-left]': `isFixedLeft`,\n    '[style.position]': `isFixed? 'sticky' : null`\n  }\n})\nexport class NzCellFixedDirective implements OnChanges {\n  @Input() nzRight: string | boolean = false;\n  @Input() nzLeft: string | boolean = false;\n  @Input() colspan: number | null = null;\n  @Input() colSpan: number | null = null;\n  changes$ = new Subject<void>();\n  isAutoLeft = false;\n  isAutoRight = false;\n  isFixedLeft = false;\n  isFixedRight = false;\n  isFixed = false;\n\n  setAutoLeftWidth(autoLeft: string | null): void {\n    this.renderer.setStyle(this.elementRef.nativeElement, 'left', autoLeft);\n  }\n\n  setAutoRightWidth(autoRight: string | null): void {\n    this.renderer.setStyle(this.elementRef.nativeElement, 'right', autoRight);\n  }\n\n  setIsFirstRight(isFirstRight: boolean): void {\n    this.setFixClass(isFirstRight, 'ant-table-cell-fix-right-first');\n  }\n\n  setIsLastLeft(isLastLeft: boolean): void {\n    this.setFixClass(isLastLeft, 'ant-table-cell-fix-left-last');\n  }\n\n  private setFixClass(flag: boolean, className: string): void {\n    // the setFixClass function may call many times, so remove it first.\n    this.renderer.removeClass(this.elementRef.nativeElement, className);\n\n    if (flag) {\n      this.renderer.addClass(this.elementRef.nativeElement, className);\n    }\n  }\n\n  constructor(private renderer: Renderer2, private elementRef: ElementRef) {}\n\n  ngOnChanges(): void {\n    this.setIsFirstRight(false);\n    this.setIsLastLeft(false);\n    this.isAutoLeft = this.nzLeft === '' || this.nzLeft === true;\n    this.isAutoRight = this.nzRight === '' || this.nzRight === true;\n    this.isFixedLeft = this.nzLeft !== false;\n    this.isFixedRight = this.nzRight !== false;\n    this.isFixed = this.isFixedLeft || this.isFixedRight;\n    const validatePx = (value: string | boolean): string | null => {\n      if (typeof value === 'string' && value !== '') {\n        return value;\n      } else {\n        return null;\n      }\n    };\n    this.setAutoLeftWidth(validatePx(this.nzLeft));\n    this.setAutoRightWidth(validatePx(this.nzRight));\n    this.changes$.next();\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { Injectable, TemplateRef } from '@angular/core';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { BehaviorSubject, combineLatest, merge, ReplaySubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { NzThMeasureDirective } from './cell/th-measure.directive';\n\n@Injectable()\nexport class NzTableStyleService {\n  theadTemplate$ = new ReplaySubject<TemplateRef<NzSafeAny>>(1);\n  hasFixLeft$ = new ReplaySubject<boolean>(1);\n  hasFixRight$ = new ReplaySubject<boolean>(1);\n  hostWidth$ = new ReplaySubject<number>(1);\n  columnCount$ = new ReplaySubject<number>(1);\n  showEmpty$ = new ReplaySubject<boolean>(1);\n  noResult$ = new ReplaySubject<string | TemplateRef<NzSafeAny> | undefined>(1);\n  private listOfThWidthConfigPx$ = new BehaviorSubject<Array<string | null>>([]);\n  private tableWidthConfigPx$ = new BehaviorSubject<Array<string | null>>([]);\n  manualWidthConfigPx$ = combineLatest([this.tableWidthConfigPx$, this.listOfThWidthConfigPx$]).pipe(\n    map(([widthConfig, listOfWidth]) => (widthConfig.length ? widthConfig : listOfWidth))\n  );\n  private listOfAutoWidthPx$ = new ReplaySubject<string[]>(1);\n  listOfListOfThWidthPx$ = merge(\n    /** init with manual width **/\n    this.manualWidthConfigPx$,\n    combineLatest([this.listOfAutoWidthPx$, this.manualWidthConfigPx$]).pipe(\n      map(([autoWidth, manualWidth]) => {\n        /** use autoWidth until column length match **/\n        if (autoWidth.length === manualWidth.length) {\n          return autoWidth.map((width, index) => {\n            if (width === '0px') {\n              return manualWidth[index] || null;\n            } else {\n              return manualWidth[index] || width;\n            }\n          });\n        } else {\n          return manualWidth;\n        }\n      })\n    )\n  );\n  listOfMeasureColumn$ = new ReplaySubject<string[]>(1);\n  listOfListOfThWidth$ = this.listOfAutoWidthPx$.pipe(map(list => list.map(width => parseInt(width, 10))));\n  enableAutoMeasure$ = new ReplaySubject<boolean>(1);\n\n  setTheadTemplate(template: TemplateRef<NzSafeAny>): void {\n    this.theadTemplate$.next(template);\n  }\n\n  setHasFixLeft(hasFixLeft: boolean): void {\n    this.hasFixLeft$.next(hasFixLeft);\n  }\n\n  setHasFixRight(hasFixRight: boolean): void {\n    this.hasFixRight$.next(hasFixRight);\n  }\n\n  setTableWidthConfig(widthConfig: Array<string | null>): void {\n    this.tableWidthConfigPx$.next(widthConfig);\n  }\n\n  setListOfTh(listOfTh: NzThMeasureDirective[]): void {\n    let columnCount = 0;\n    listOfTh.forEach(th => {\n      columnCount += (th.colspan && +th.colspan) || (th.colSpan && +th.colSpan) || 1;\n    });\n    const listOfThPx = listOfTh.map(item => item.nzWidth);\n    this.columnCount$.next(columnCount);\n    this.listOfThWidthConfigPx$.next(listOfThPx);\n  }\n\n  setListOfMeasureColumn(listOfTh: NzThMeasureDirective[]): void {\n    const listOfKeys: string[] = [];\n    listOfTh.forEach(th => {\n      const length = (th.colspan && +th.colspan) || (th.colSpan && +th.colSpan) || 1;\n      for (let i = 0; i < length; i++) {\n        listOfKeys.push(`measure_key_${i}`);\n      }\n    });\n    this.listOfMeasureColumn$.next(listOfKeys);\n  }\n\n  setListOfAutoWidth(listOfAutoWidth: number[]): void {\n    this.listOfAutoWidthPx$.next(listOfAutoWidth.map(width => `${width}px`));\n  }\n\n  setShowEmpty(showEmpty: boolean): void {\n    this.showEmpty$.next(showEmpty);\n  }\n\n  setNoResult(noResult: string | TemplateRef<NzSafeAny> | undefined): void {\n    this.noResult$.next(noResult);\n  }\n\n  setScroll(scrollX: string | null, scrollY: string | null): void {\n    const enableAutoMeasure = !!(scrollX || scrollY);\n    if (!enableAutoMeasure) {\n      this.setListOfAutoWidth([]);\n    }\n    this.enableAutoMeasure$.next(enableAutoMeasure);\n  }\n\n  constructor() {}\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nimport { Directive, Optional } from '@angular/core';\nimport { NzTableStyleService } from '../table-style.service';\n\n@Directive({\n  selector: 'th:not(.nz-disable-th):not([mat-cell]), td:not(.nz-disable-td):not([mat-cell])',\n  host: {\n    '[class.ant-table-cell]': 'isInsideTable'\n  }\n})\nexport class NzTableCellDirective {\n  isInsideTable = false;\n  constructor(@Optional() nzTableStyleService: NzTableStyleService) {\n    this.isInsideTable = !!nzTableStyleService;\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n/* tslint:disable:component-selector */\n\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  OnChanges,\n  Output,\n  SimpleChange,\n  SimpleChanges,\n  ViewEncapsulation\n} from '@angular/core';\nimport { BooleanInput } from 'ng-zorro-antd/core/types';\nimport { InputBoolean } from 'ng-zorro-antd/core/util';\n\n@Component({\n  selector: 'td[nzChecked], td[nzDisabled], td[nzIndeterminate], td[nzIndentSize], td[nzExpand], td[nzShowExpand], td[nzShowCheckbox]',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n  template: `\n    <ng-container *ngIf=\"nzShowExpand || nzIndentSize > 0\">\n      <nz-row-indent [indentSize]=\"nzIndentSize\"></nz-row-indent>\n      <button nz-row-expand-button [expand]=\"nzExpand\" (expandChange)=\"onExpandChange($event)\" [spaceMode]=\"!nzShowExpand\"></button>\n    </ng-container>\n    <label\n      nz-checkbox\n      *ngIf=\"nzShowCheckbox\"\n      [nzDisabled]=\"nzDisabled\"\n      [ngModel]=\"nzChecked\"\n      [nzIndeterminate]=\"nzIndeterminate\"\n      (ngModelChange)=\"onCheckedChange($event)\"\n    >\n    </label>\n    <ng-content></ng-content>\n  `,\n  host: {\n    '[class.ant-table-cell-with-append]': `nzShowExpand || nzIndentSize > 0`,\n    '[class.ant-table-selection-column]': `nzShowCheckbox`\n  }\n})\nexport class NzTdAddOnComponent implements OnChanges {\n  static ngAcceptInputType_nzShowExpand: BooleanInput;\n  static ngAcceptInputType_nzShowCheckbox: BooleanInput;\n  static ngAcceptInputType_nzExpand: BooleanInput;\n\n  @Input() nzChecked = false;\n  @Input() nzDisabled = false;\n  @Input() nzIndeterminate = false;\n  @Input() nzIndentSize = 0;\n  @Input() @InputBoolean() nzShowExpand = false;\n  @Input() @InputBoolean() nzShowCheckbox = false;\n  @Input() @InputBoolean() nzExpand = false;\n  @Output() readonly nzCheckedChange = new EventEmitter<boolean>();\n  @Output() readonly nzExpandChange = new EventEmitter<boolean>();\n  private isNzShowExpandChanged = false;\n  private isNzShowCheckboxChanged = false;\n\n  onCheckedChange(checked: boolean): void {\n    this.nzChecked = checked;\n    this.nzCheckedChange.emit(checked);\n  }\n\n  onExpandChange(expand: boolean): void {\n    this.nzExpand = expand;\n    this.nzExpandChange.emit(expand);\n  }\n  ngOnChanges(changes: SimpleChanges): void {\n    const isFirstChange = (value: SimpleChange) => value && value.firstChange && value.currentValue !== undefined;\n    const { nzExpand, nzChecked, nzShowExpand, nzShowCheckbox } = changes;\n    if (nzShowExpand) {\n      this.isNzShowExpandChanged = true;\n    }\n    if (nzShowCheckbox) {\n      this.isNzShowCheckboxChanged = true;\n    }\n    if (isFirstChange(nzExpand) && !this.isNzShowExpandChanged) {\n      this.nzShowExpand = true;\n    }\n    if (isFirstChange(nzChecked) && !this.isNzShowCheckboxChanged) {\n      this.nzShowCheckbox = true;\n    }\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n/* tslint:disable:component-selector */\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n  SimpleChange,\n  SimpleChanges,\n  ViewEncapsulation\n} from '@angular/core';\nimport { warnDeprecation } from 'ng-zorro-antd/core/logger';\nimport { BooleanInput } from 'ng-zorro-antd/core/types';\nimport { InputBoolean } from 'ng-zorro-antd/core/util';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { NzTableFilterFn, NzTableFilterList, NzTableFilterValue, NzTableSortFn, NzTableSortOrder } from '../table.types';\n\n@Component({\n  selector:\n    'th[nzSortKey], th[nzColumnKey], th[nzSort], th[nzSortFn], th[nzSortOrder], th[nzFilters], th[nzShowSort], th[nzShowFilter], th[nzCustomFilter]',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: `\n    <nz-table-filter\n      *ngIf=\"nzShowFilter || nzCustomFilter; else notFilterTemplate\"\n      [contentTemplate]=\"notFilterTemplate\"\n      [extraTemplate]=\"extraTemplate\"\n      [customFilter]=\"nzCustomFilter\"\n      [filterMultiple]=\"nzFilterMultiple\"\n      [listOfFilter]=\"nzFilters\"\n      (filterChange)=\"onFilterValueChange($event)\"\n    ></nz-table-filter>\n    <ng-template #notFilterTemplate>\n      <ng-template [ngTemplateOutlet]=\"nzShowSort ? sortTemplate : contentTemplate\"></ng-template>\n    </ng-template>\n    <ng-template #extraTemplate>\n      <ng-content select=\"[nz-th-extra]\"></ng-content>\n      <ng-content select=\"nz-filter-trigger\"></ng-content>\n    </ng-template>\n    <ng-template #sortTemplate>\n      <nz-table-sorters [sortOrder]=\"sortOrder\" [sortDirections]=\"sortDirections\" [contentTemplate]=\"contentTemplate\"></nz-table-sorters>\n    </ng-template>\n    <ng-template #contentTemplate>\n      <ng-content></ng-content>\n    </ng-template>\n  `,\n  host: {\n    '[class.ant-table-column-has-sorters]': 'nzShowSort',\n    '[class.ant-table-column-sort]': `sortOrder === 'descend' || sortOrder === 'ascend'`,\n    '(click)': 'emitNextSortValue()'\n  }\n})\nexport class NzThAddOnComponent implements OnChanges, OnInit, OnDestroy {\n  static ngAcceptInputType_nzShowSort: BooleanInput;\n  static ngAcceptInputType_nzShowFilter: BooleanInput;\n  static ngAcceptInputType_nzCustomFilter: BooleanInput;\n\n  manualClickOrder$ = new Subject<NzThAddOnComponent>();\n  calcOperatorChange$ = new Subject();\n  nzFilterValue: NzTableFilterValue = null;\n  sortOrder: NzTableSortOrder = null;\n  sortDirections: NzTableSortOrder[] = ['ascend', 'descend', null];\n  private sortOrderChange$ = new Subject<NzTableSortOrder>();\n  private destroy$ = new Subject();\n  private isNzShowSortChanged = false;\n  private isNzShowFilterChanged = false;\n  @Input() nzColumnKey?: string;\n  @Input() nzFilterMultiple = true;\n  @Input() nzSortOrder: NzTableSortOrder = null;\n  @Input() nzSortPriority: number | boolean = false;\n  @Input() nzSortDirections: NzTableSortOrder[] = ['ascend', 'descend', null];\n  @Input() nzFilters: NzTableFilterList = [];\n  @Input() nzSortFn: NzTableSortFn | boolean | null = null;\n  @Input() nzFilterFn: NzTableFilterFn | boolean | null = null;\n  @Input() @InputBoolean() nzShowSort = false;\n  @Input() @InputBoolean() nzShowFilter = false;\n  @Input() @InputBoolean() nzCustomFilter = false;\n  @Output() readonly nzCheckedChange = new EventEmitter<boolean>();\n  @Output() readonly nzSortOrderChange = new EventEmitter<string | null>();\n  @Output() readonly nzFilterChange = new EventEmitter<NzTableFilterValue>();\n  /** @deprecated use nzColumnKey instead **/\n  @Input() nzSortKey?: string;\n  /** @deprecated use nzSortOrder instead **/\n  @Input() nzSort: NzTableSortOrder = null;\n  /** @deprecated use nzSortOrderChange instead **/\n  @Output() readonly nzSortChange = new EventEmitter<string | null>();\n\n  getNextSortDirection(sortDirections: NzTableSortOrder[], current: NzTableSortOrder): NzTableSortOrder {\n    const index = sortDirections.indexOf(current);\n    if (index === sortDirections.length - 1) {\n      return sortDirections[0];\n    } else {\n      return sortDirections[index + 1];\n    }\n  }\n\n  emitNextSortValue(): void {\n    if (this.nzShowSort) {\n      const nextOrder = this.getNextSortDirection(this.sortDirections, this.sortOrder!);\n      this.setSortOrder(nextOrder);\n      this.manualClickOrder$.next(this);\n    }\n  }\n\n  setSortOrder(order: NzTableSortOrder): void {\n    this.sortOrderChange$.next(order);\n  }\n\n  clearSortOrder(): void {\n    if (this.sortOrder !== null) {\n      this.setSortOrder(null);\n    }\n  }\n\n  onFilterValueChange(value: NzTableFilterValue): void {\n    this.nzFilterChange.emit(value);\n    this.nzFilterValue = value;\n    this.updateCalcOperator();\n  }\n\n  updateCalcOperator(): void {\n    this.calcOperatorChange$.next();\n  }\n\n  constructor(private cdr: ChangeDetectorRef) {}\n\n  ngOnInit(): void {\n    this.sortOrderChange$.pipe(takeUntil(this.destroy$)).subscribe(order => {\n      if (this.sortOrder !== order) {\n        this.sortOrder = order;\n        this.nzSortChange.emit(order);\n        this.nzSortOrderChange.emit(order);\n      }\n      this.updateCalcOperator();\n      this.cdr.markForCheck();\n    });\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    const {\n      nzSortKey,\n      nzSort,\n      nzSortDirections,\n      nzFilters,\n      nzSortOrder,\n      nzSortFn,\n      nzFilterFn,\n      nzSortPriority,\n      nzFilterMultiple,\n      nzShowSort,\n      nzShowFilter\n    } = changes;\n    if (nzSortDirections) {\n      if (this.nzSortDirections && this.nzSortDirections.length) {\n        this.sortDirections = this.nzSortDirections;\n      }\n    }\n    if (nzSort) {\n      this.sortOrder = this.nzSort;\n      this.setSortOrder(this.nzSort);\n      warnDeprecation(\n        `'nzSort' and 'nzSortChange' is deprecated and will be removed in 10.0.0. Please use 'nzSortOrder' and 'nzSortOrderChange' instead.`\n      );\n    }\n    if (nzSortKey) {\n      this.nzColumnKey = this.nzSortKey;\n      warnDeprecation(`'nzSortKey' is deprecated and will be removed in 10.0.0. Please use 'nzColumnKey' instead.`);\n    }\n    if (nzSortOrder) {\n      this.sortOrder = this.nzSortOrder;\n      this.setSortOrder(this.nzSortOrder);\n    }\n    if (nzShowSort) {\n      this.isNzShowSortChanged = true;\n    }\n    if (nzShowFilter) {\n      this.isNzShowFilterChanged = true;\n    }\n    const isFirstChange = (value: SimpleChange) => value && value.firstChange && value.currentValue !== undefined;\n    if (\n      (isFirstChange(nzSortKey) || isFirstChange(nzSort) || isFirstChange(nzSortOrder) || isFirstChange(nzSortFn)) &&\n      !this.isNzShowSortChanged\n    ) {\n      this.nzShowSort = true;\n    }\n    if (isFirstChange(nzFilters) && !this.isNzShowFilterChanged) {\n      this.nzShowFilter = true;\n    }\n    if ((nzFilters || nzFilterMultiple) && this.nzShowFilter) {\n      const listOfValue = this.nzFilters.filter(item => item.byDefault).map(item => item.value);\n      this.nzFilterValue = this.nzFilterMultiple ? listOfValue : listOfValue[0] || null;\n    }\n    if (nzSortFn || nzFilterFn || nzSortPriority || nzFilters) {\n      this.updateCalcOperator();\n    }\n  }\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nimport { Directive, ElementRef, Input, OnChanges, Renderer2, SimpleChanges } from '@angular/core';\nimport { isNil } from 'ng-zorro-antd/core/util';\nimport { Subject } from 'rxjs';\n\n@Directive({\n  selector: 'th'\n})\nexport class NzThMeasureDirective implements OnChanges {\n  changes$ = new Subject();\n  @Input() nzWidth: string | null = null;\n  @Input() colspan: string | number | null = null;\n  @Input() colSpan: string | number | null = null;\n  @Input() rowspan: string | number | null = null;\n  @Input() rowSpan: string | number | null = null;\n  constructor(private renderer: Renderer2, private elementRef: ElementRef) {}\n  ngOnChanges(changes: SimpleChanges): void {\n    const { nzWidth, colspan, rowspan, colSpan, rowSpan } = changes;\n    if (colspan || colSpan) {\n      const col = this.colspan || this.colSpan;\n      if (!isNil(col)) {\n        this.renderer.setAttribute(this.elementRef.nativeElement, 'colspan', `${col}`);\n      } else {\n        this.renderer.removeAttribute(this.elementRef.nativeElement, 'colspan');\n      }\n    }\n    if (rowspan || rowSpan) {\n      const row = this.rowspan || this.rowSpan;\n      if (!isNil(row)) {\n        this.renderer.setAttribute(this.elementRef.nativeElement, 'rowspan', `${row}`);\n      } else {\n        this.renderer.removeAttribute(this.elementRef.nativeElement, 'rowspan');\n      }\n    }\n    if (nzWidth || colspan) {\n      this.changes$.next();\n    }\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n/* tslint:disable:component-selector */\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  OnChanges,\n  Output,\n  SimpleChange,\n  SimpleChanges,\n  ViewEncapsulation\n} from '@angular/core';\nimport { BooleanInput, NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { InputBoolean } from 'ng-zorro-antd/core/util';\n\n@Component({\n  selector: 'th[nzSelections],th[nzChecked],th[nzShowCheckbox],th[nzShowRowSelection]',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: `\n    <nz-table-selection\n      [checked]=\"nzChecked\"\n      [disabled]=\"nzDisabled\"\n      [indeterminate]=\"nzIndeterminate\"\n      [listOfSelections]=\"nzSelections\"\n      [showCheckbox]=\"nzShowCheckbox\"\n      [showRowSelection]=\"nzShowRowSelection\"\n      (checkedChange)=\"onCheckedChange($event)\"\n    ></nz-table-selection>\n    <ng-content></ng-content>\n  `,\n  host: {\n    '[class.ant-table-selection-column]': 'true'\n  }\n})\nexport class NzThSelectionComponent implements OnChanges {\n  static ngAcceptInputType_nzShowCheckbox: BooleanInput;\n  static ngAcceptInputType_nzShowRowSelection: BooleanInput;\n\n  @Input() nzSelections: Array<{ text: string; onSelect(...args: NzSafeAny[]): NzSafeAny }> = [];\n  @Input() nzChecked = false;\n  @Input() nzDisabled = false;\n  @Input() nzIndeterminate = false;\n  @Input() @InputBoolean() nzShowCheckbox = false;\n  @Input() @InputBoolean() nzShowRowSelection = false;\n  @Output() readonly nzCheckedChange = new EventEmitter<boolean>();\n  @Output() readonly nzSortChangeWithKey = new EventEmitter<{ key: string; value: string | null }>();\n\n  private isNzShowExpandChanged = false;\n  private isNzShowCheckboxChanged = false;\n\n  onCheckedChange(checked: boolean): void {\n    this.nzChecked = checked;\n    this.nzCheckedChange.emit(checked);\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    const isFirstChange = (value: SimpleChange) => value && value.firstChange && value.currentValue !== undefined;\n    const { nzChecked, nzSelections, nzShowExpand, nzShowCheckbox } = changes;\n    if (nzShowExpand) {\n      this.isNzShowExpandChanged = true;\n    }\n    if (nzShowCheckbox) {\n      this.isNzShowCheckboxChanged = true;\n    }\n    if (isFirstChange(nzSelections) && !this.isNzShowExpandChanged) {\n      this.nzShowRowSelection = true;\n    }\n    if (isFirstChange(nzChecked) && !this.isNzShowCheckboxChanged) {\n      this.nzShowCheckbox = true;\n    }\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { Directive, Input } from '@angular/core';\n\n@Directive({\n  selector: 'th[nzAlign],td[nzAlign]',\n  host: {\n    '[style.text-align]': 'nzAlign'\n  }\n})\nexport class NzCellAlignDirective {\n  @Input() nzAlign: 'left' | 'right' | 'center' | null = null;\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { Directive, Input } from '@angular/core';\nimport { BooleanInput } from 'ng-zorro-antd/core/types';\nimport { InputBoolean } from 'ng-zorro-antd/core/util';\n\n@Directive({\n  selector: 'th[nzEllipsis],td[nzEllipsis]',\n  host: {\n    '[class.ant-table-cell-ellipsis]': 'nzEllipsis'\n  }\n})\nexport class NzCellEllipsisDirective {\n  static ngAcceptInputType_nzEllipsis: BooleanInput;\n\n  @Input() @InputBoolean() nzEllipsis = true;\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { Directive, Input } from '@angular/core';\nimport { BooleanInput } from 'ng-zorro-antd/core/types';\nimport { InputBoolean } from 'ng-zorro-antd/core/util';\n\n@Directive({\n  selector: 'th[nzBreakWord],td[nzBreakWord]',\n  host: {\n    '[style.word-break]': `nzBreakWord ? 'break-all' : ''`\n  }\n})\nexport class NzCellBreakWordDirective {\n  static ngAcceptInputType_nzBreakWord: BooleanInput;\n\n  @Input() @InputBoolean() nzBreakWord = true;\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { ChangeDetectionStrategy, Component, Input, TemplateRef, ViewEncapsulation } from '@angular/core';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { NzTableLayout } from '../table.types';\n\n@Component({\n  selector: 'table[nz-table-content]',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  template: `\n    <col [style.width]=\"width\" [style.minWidth]=\"width\" *ngFor=\"let width of listOfColWidth\" />\n    <thead class=\"ant-table-thead\" *ngIf=\"theadTemplate\">\n      <ng-template [ngTemplateOutlet]=\"theadTemplate\"></ng-template>\n    </thead>\n    <ng-template [ngTemplateOutlet]=\"contentTemplate\"></ng-template>\n    <ng-content></ng-content>\n  `,\n  host: {\n    '[style.table-layout]': 'tableLayout',\n    '[class.ant-table-fixed]': 'scrollX',\n    '[style.width]': 'scrollX',\n    '[style.min-width]': `scrollX ? '100%': null`\n  }\n})\nexport class NzTableContentComponent {\n  @Input() tableLayout: NzTableLayout = 'auto';\n  @Input() theadTemplate: TemplateRef<NzSafeAny> | null = null;\n  @Input() contentTemplate: TemplateRef<NzSafeAny> | null = null;\n  @Input() listOfColWidth: Array<string | null> = [];\n  @Input() scrollX: string | null = null;\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  OnDestroy,\n  OnInit,\n  Renderer2,\n  ViewChild,\n  ViewEncapsulation\n} from '@angular/core';\nimport { BehaviorSubject, Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { NzTableStyleService } from '../table-style.service';\n\n@Component({\n  selector: 'tr[nz-table-fixed-row], tr[nzExpand]',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  template: `\n    <td class=\"nz-disable-td ant-table-cell\" #tdElement>\n      <div\n        class=\"ant-table-expanded-row-fixed\"\n        *ngIf=\"enableAutoMeasure$ | async; else contentTemplate\"\n        style=\"position: sticky; left: 0px; overflow: hidden;\"\n        [style.width.px]=\"hostWidth$ | async\"\n      >\n        <ng-template [ngTemplateOutlet]=\"contentTemplate\"></ng-template>\n      </div>\n    </td>\n    <ng-template #contentTemplate><ng-content></ng-content></ng-template>\n  `\n})\nexport class NzTableFixedRowComponent implements OnInit, OnDestroy, AfterViewInit {\n  @ViewChild('tdElement') tdElement!: ElementRef;\n  hostWidth$ = new BehaviorSubject<number | null>(null);\n  enableAutoMeasure$ = new BehaviorSubject<boolean>(false);\n  private destroy$ = new Subject();\n  constructor(private nzTableStyleService: NzTableStyleService, private renderer: Renderer2) {}\n  ngOnInit(): void {\n    if (this.nzTableStyleService) {\n      const { enableAutoMeasure$, hostWidth$ } = this.nzTableStyleService;\n      enableAutoMeasure$.subscribe(this.enableAutoMeasure$);\n      hostWidth$.subscribe(this.hostWidth$);\n    }\n  }\n  ngAfterViewInit(): void {\n    this.nzTableStyleService.columnCount$.pipe(takeUntil(this.destroy$)).subscribe(count => {\n      this.renderer.setAttribute(this.tdElement.nativeElement, 'colspan', `${count}`);\n    });\n  }\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { ChangeDetectionStrategy, Component, Input, TemplateRef, ViewEncapsulation } from '@angular/core';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { NzTableLayout } from '../table.types';\n\n@Component({\n  selector: 'nz-table-inner-default',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  template: `\n    <div class=\"ant-table-content\">\n      <table\n        nz-table-content\n        [contentTemplate]=\"contentTemplate\"\n        [tableLayout]=\"tableLayout\"\n        [listOfColWidth]=\"listOfColWidth\"\n        [theadTemplate]=\"theadTemplate\"\n      ></table>\n    </div>\n  `,\n  host: {\n    '[class.ant-table-container]': 'true'\n  }\n})\nexport class NzTableInnerDefaultComponent {\n  @Input() tableLayout: NzTableLayout = 'auto';\n  @Input() listOfColWidth: Array<string | null> = [];\n  @Input() theadTemplate: TemplateRef<NzSafeAny> | null = null;\n  @Input() contentTemplate: TemplateRef<NzSafeAny> | null = null;\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { Platform } from '@angular/cdk/platform';\nimport { CdkVirtualScrollViewport } from '@angular/cdk/scrolling';\nimport {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  Input,\n  NgZone,\n  OnChanges,\n  OnDestroy,\n  Renderer2,\n  SimpleChanges,\n  TemplateRef,\n  TrackByFunction,\n  ViewChild,\n  ViewEncapsulation\n} from '@angular/core';\nimport { NzResizeService } from 'ng-zorro-antd/core/services';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { fromEvent, merge, Subject } from 'rxjs';\nimport { delay, filter, startWith, takeUntil } from 'rxjs/operators';\nimport { NzTableData } from '../table.types';\n\n@Component({\n  selector: 'nz-table-inner-scroll',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  template: `\n    <div class=\"ant-table-content\">\n      <div *ngIf=\"scrollY\" #tableHeaderElement [ngStyle]=\"headerStyleMap\" class=\"ant-table-header nz-table-hide-scrollbar\">\n        <table\n          nz-table-content\n          tableLayout=\"fixed\"\n          [scrollX]=\"scrollX\"\n          [listOfColWidth]=\"listOfColWidth\"\n          [theadTemplate]=\"theadTemplate\"\n        ></table>\n      </div>\n      <div #tableBodyElement *ngIf=\"!virtualTemplate\" class=\"ant-table-body\" [ngStyle]=\"bodyStyleMap\">\n        <table\n          nz-table-content\n          [scrollX]=\"scrollX\"\n          tableLayout=\"fixed\"\n          [listOfColWidth]=\"listOfColWidth\"\n          [theadTemplate]=\"scrollY ? null : theadTemplate\"\n          [contentTemplate]=\"contentTemplate\"\n        ></table>\n      </div>\n      <cdk-virtual-scroll-viewport\n        #tableBodyElement\n        *ngIf=\"virtualTemplate\"\n        [itemSize]=\"virtualItemSize\"\n        [maxBufferPx]=\"virtualMaxBufferPx\"\n        [minBufferPx]=\"virtualMinBufferPx\"\n        [style.height]=\"data.length ? scrollY : noDateVirtualHeight\"\n      >\n        <table nz-table-content tableLayout=\"fixed\" [scrollX]=\"scrollX\" [listOfColWidth]=\"listOfColWidth\">\n          <tbody>\n            <ng-container *cdkVirtualFor=\"let item of data; let i = index; trackBy: virtualForTrackBy\">\n              <ng-template [ngTemplateOutlet]=\"virtualTemplate\" [ngTemplateOutletContext]=\"{ $implicit: item, index: i }\"></ng-template>\n            </ng-container>\n          </tbody>\n        </table>\n      </cdk-virtual-scroll-viewport>\n    </div>\n  `,\n  host: {\n    '[class.ant-table-container]': 'true'\n  }\n})\nexport class NzTableInnerScrollComponent implements OnChanges, AfterViewInit, OnDestroy {\n  @Input() data: NzTableData[] = [];\n  @Input() scrollX: string | null = null;\n  @Input() scrollY: string | null = null;\n  @Input() contentTemplate: TemplateRef<NzSafeAny> | null = null;\n  @Input() widthConfig: string[] = [];\n  @Input() listOfColWidth: Array<string | null> = [];\n  @Input() theadTemplate: TemplateRef<NzSafeAny> | null = null;\n  @Input() virtualTemplate: TemplateRef<NzSafeAny> | null = null;\n  @Input() virtualItemSize = 0;\n  @Input() virtualMaxBufferPx = 200;\n  @Input() virtualMinBufferPx = 100;\n  @Input() tableMainElement?: HTMLDivElement;\n  @Input() virtualForTrackBy: TrackByFunction<NzTableData> = index => index;\n  @ViewChild('tableHeaderElement', { read: ElementRef }) tableHeaderElement!: ElementRef;\n  @ViewChild('tableBodyElement', { read: ElementRef }) tableBodyElement!: ElementRef;\n  @ViewChild(CdkVirtualScrollViewport, { read: CdkVirtualScrollViewport })\n  cdkVirtualScrollViewport?: CdkVirtualScrollViewport;\n  headerStyleMap = {};\n  bodyStyleMap = {};\n  @Input() verticalScrollBarWidth = 0;\n  noDateVirtualHeight = '182px';\n  private data$ = new Subject<void>();\n  private scroll$ = new Subject<void>();\n  private destroy$ = new Subject<void>();\n\n  setScrollPositionClassName(clear: boolean = false): void {\n    const { scrollWidth, scrollLeft, clientWidth } = this.tableBodyElement.nativeElement;\n    const leftClassName = 'ant-table-ping-left';\n    const rightClassName = 'ant-table-ping-right';\n    if ((scrollWidth === clientWidth && scrollWidth !== 0) || clear) {\n      this.renderer.removeClass(this.tableMainElement, leftClassName);\n      this.renderer.removeClass(this.tableMainElement, rightClassName);\n    } else if (scrollLeft === 0) {\n      this.renderer.removeClass(this.tableMainElement, leftClassName);\n      this.renderer.addClass(this.tableMainElement, rightClassName);\n    } else if (scrollWidth === scrollLeft + clientWidth) {\n      this.renderer.removeClass(this.tableMainElement, rightClassName);\n      this.renderer.addClass(this.tableMainElement, leftClassName);\n    } else {\n      this.renderer.addClass(this.tableMainElement, leftClassName);\n      this.renderer.addClass(this.tableMainElement, rightClassName);\n    }\n  }\n\n  constructor(private renderer: Renderer2, private ngZone: NgZone, private platform: Platform, private resizeService: NzResizeService) {}\n\n  ngOnChanges(changes: SimpleChanges): void {\n    const { scrollX, scrollY, data } = changes;\n    if (scrollX || scrollY) {\n      const hasVerticalScrollBar = this.verticalScrollBarWidth !== 0;\n      this.headerStyleMap = {\n        overflowX: 'hidden',\n        overflowY: this.scrollY && hasVerticalScrollBar ? 'scroll' : 'hidden'\n      };\n      this.bodyStyleMap = {\n        overflowY: this.scrollY ? 'scroll' : null,\n        overflowX: this.scrollX ? 'scroll' : null,\n        maxHeight: this.scrollY\n      };\n      this.scroll$.next();\n    }\n    if (data) {\n      this.data$.next();\n    }\n  }\n  ngAfterViewInit(): void {\n    if (this.platform.isBrowser) {\n      this.ngZone.runOutsideAngular(() => {\n        const scrollEvent$ = fromEvent<MouseEvent>(this.tableBodyElement.nativeElement, 'scroll').pipe(takeUntil(this.destroy$));\n        const scrollX$ = scrollEvent$.pipe(filter(() => !!this.scrollX));\n        const scrollY$ = scrollEvent$.pipe(filter(() => !!this.scrollY));\n        const resize$ = this.resizeService.subscribe().pipe(takeUntil(this.destroy$));\n        const data$ = this.data$.pipe(takeUntil(this.destroy$));\n        const setClassName$ = merge(scrollX$, resize$, data$, this.scroll$).pipe(startWith(true), delay(0));\n        setClassName$.subscribe(() => this.setScrollPositionClassName());\n        scrollY$.subscribe(() => (this.tableHeaderElement.nativeElement.scrollLeft = this.tableBodyElement.nativeElement.scrollLeft));\n      });\n    }\n  }\n  ngOnDestroy(): void {\n    this.setScrollPositionClassName(true);\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { Directive, TemplateRef } from '@angular/core';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\n\n@Directive({\n  selector: '[nz-virtual-scroll]',\n  exportAs: 'nzVirtualScroll'\n})\nexport class NzTableVirtualScrollDirective {\n  constructor(public templateRef: TemplateRef<{ $implicit: NzSafeAny; index: number }>) {}\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { Injectable, OnDestroy } from '@angular/core';\nimport { BehaviorSubject, combineLatest, Observable, Subject } from 'rxjs';\nimport { debounceTime, distinctUntilChanged, filter, map, skip, switchMap, takeUntil } from 'rxjs/operators';\nimport { NzTableData, NzTableFilterFn, NzTableFilterValue, NzTableQueryParams, NzTableSortFn, NzTableSortOrder } from './table.types';\n\n@Injectable()\nexport class NzTableDataService implements OnDestroy {\n  private destroy$ = new Subject();\n  private pageIndex$ = new BehaviorSubject<number>(1);\n  private frontPagination$ = new BehaviorSubject<boolean>(true);\n  private pageSize$ = new BehaviorSubject<number>(10);\n  private listOfData$ = new BehaviorSubject<NzTableData[]>([]);\n  pageIndexDistinct$ = this.pageIndex$.pipe(distinctUntilChanged());\n  pageSizeDistinct$ = this.pageSize$.pipe(distinctUntilChanged());\n  listOfCalcOperator$ = new BehaviorSubject<\n    Array<{\n      key?: string;\n      sortFn: NzTableSortFn | null | boolean;\n      sortOrder: NzTableSortOrder;\n      filterFn: NzTableFilterFn | null | boolean;\n      filterValue: NzTableFilterValue;\n      sortPriority: number | boolean;\n    }>\n  >([]);\n  queryParams$: Observable<NzTableQueryParams> = combineLatest([\n    this.pageIndexDistinct$,\n    this.pageSizeDistinct$,\n    this.listOfCalcOperator$\n  ]).pipe(\n    debounceTime(0),\n    skip(1),\n    map(([pageIndex, pageSize, listOfCalc]) => {\n      return {\n        pageIndex,\n        pageSize,\n        sort: listOfCalc\n          .filter(item => item.sortFn)\n          .map(item => {\n            return {\n              key: item.key!,\n              value: item.sortOrder\n            };\n          }),\n        filter: listOfCalc\n          .filter(item => item.filterFn)\n          .map(item => {\n            return {\n              key: item.key!,\n              value: item.filterValue\n            };\n          })\n      };\n    })\n  );\n  private listOfDataAfterCalc$ = combineLatest([this.listOfData$, this.listOfCalcOperator$]).pipe(\n    map(([listOfData, listOfCalcOperator]) => {\n      let listOfDataAfterCalc = [...listOfData];\n      const listOfFilterOperator = listOfCalcOperator.filter(item => {\n        const { filterValue, filterFn } = item;\n        const isReset = filterValue === null || filterValue === undefined || (Array.isArray(filterValue) && filterValue!.length === 0);\n        return !isReset && typeof filterFn === 'function';\n      });\n      for (const item of listOfFilterOperator) {\n        const { filterFn, filterValue } = item;\n        listOfDataAfterCalc = listOfDataAfterCalc.filter(data => (filterFn as NzTableFilterFn)(filterValue, data));\n      }\n      const listOfSortOperator = listOfCalcOperator\n        .filter(item => item.sortOrder !== null && typeof item.sortFn === 'function')\n        .sort((a, b) => +b.sortPriority - +a.sortPriority);\n      if (listOfCalcOperator.length) {\n        listOfDataAfterCalc.sort((record1, record2) => {\n          for (const item of listOfSortOperator) {\n            const { sortFn, sortOrder } = item;\n            if (sortFn && sortOrder) {\n              const compareResult = (sortFn as NzTableSortFn)(record1, record2, sortOrder);\n              if (compareResult !== 0) {\n                return sortOrder === 'ascend' ? compareResult : -compareResult;\n              }\n            }\n          }\n          return 0;\n        });\n      }\n      return listOfDataAfterCalc;\n    })\n  );\n  private listOfFrontEndCurrentPageData$ = combineLatest([this.pageIndexDistinct$, this.pageSizeDistinct$, this.listOfDataAfterCalc$]).pipe(\n    takeUntil(this.destroy$),\n    filter(value => {\n      const [pageIndex, pageSize, listOfData] = value;\n      const maxPageIndex = Math.ceil(listOfData.length / pageSize) || 1;\n      return pageIndex <= maxPageIndex;\n    }),\n    map(([pageIndex, pageSize, listOfData]) => {\n      return listOfData.slice((pageIndex - 1) * pageSize, pageIndex * pageSize);\n    })\n  );\n  listOfCurrentPageData$ = this.frontPagination$.pipe(\n    switchMap(pagination => (pagination ? this.listOfFrontEndCurrentPageData$ : this.listOfData$))\n  );\n  total$ = this.frontPagination$.pipe(\n    switchMap(pagination => (pagination ? this.listOfDataAfterCalc$ : this.listOfData$)),\n    map(list => list.length),\n    distinctUntilChanged()\n  );\n\n  updatePageSize(size: number): void {\n    this.pageSize$.next(size);\n  }\n  updateFrontPagination(pagination: boolean): void {\n    this.frontPagination$.next(pagination);\n  }\n  updatePageIndex(index: number): void {\n    this.pageIndex$.next(index);\n  }\n  updateListOfData(list: NzTableData[]): void {\n    this.listOfData$.next(list);\n  }\n  constructor() {}\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { CdkVirtualScrollViewport } from '@angular/cdk/scrolling';\nimport {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChild,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n  SimpleChanges,\n  TemplateRef,\n  TrackByFunction,\n  ViewChild,\n  ViewEncapsulation\n} from '@angular/core';\nimport { NzConfigService, WithConfig } from 'ng-zorro-antd/core/config';\nimport { NzResizeObserver } from 'ng-zorro-antd/core/resize-observers';\nimport { BooleanInput, NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { InputBoolean, measureScrollbar } from 'ng-zorro-antd/core/util';\nimport { PaginationItemRenderContext } from 'ng-zorro-antd/pagination';\nimport { BehaviorSubject, combineLatest, Subject } from 'rxjs';\nimport { filter, map, takeUntil } from 'rxjs/operators';\nimport { NzTableDataService } from '../table-data.service';\nimport { NzTableStyleService } from '../table-style.service';\nimport { NzTableData, NzTableLayout, NzTablePaginationPosition, NzTableQueryParams, NzTableSize } from '../table.types';\nimport { NzTableInnerScrollComponent } from './table-inner-scroll.component';\nimport { NzTableVirtualScrollDirective } from './table-virtual-scroll.directive';\n\nconst NZ_CONFIG_COMPONENT_NAME = 'table';\n\n@Component({\n  selector: 'nz-table',\n  exportAs: 'nzTable',\n  providers: [NzTableStyleService, NzTableDataService],\n  preserveWhitespaces: false,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  template: `\n    <nz-spin [nzDelay]=\"nzLoadingDelay\" [nzSpinning]=\"nzLoading\" [nzIndicator]=\"nzLoadingIndicator\">\n      <ng-container *ngIf=\"nzPaginationPosition === 'both' || nzPaginationPosition === 'top'\">\n        <ng-template [ngTemplateOutlet]=\"paginationTemplate\"></ng-template>\n      </ng-container>\n      <div\n        #tableMainElement\n        class=\"ant-table\"\n        [class.ant-table-fixed-header]=\"nzData.length && scrollY\"\n        [class.ant-table-fixed-column]=\"scrollX\"\n        [class.ant-table-has-fix-left]=\"hasFixLeft\"\n        [class.ant-table-has-fix-right]=\"hasFixRight\"\n        [class.ant-table-bordered]=\"nzBordered\"\n        [class.ant-table-middle]=\"nzSize === 'middle'\"\n        [class.ant-table-small]=\"nzSize === 'small'\"\n      >\n        <nz-table-title-footer [title]=\"nzTitle\" *ngIf=\"nzTitle\"></nz-table-title-footer>\n        <nz-table-inner-scroll\n          *ngIf=\"scrollY || scrollX; else defaultTemplate\"\n          [data]=\"data\"\n          [scrollX]=\"scrollX\"\n          [scrollY]=\"scrollY\"\n          [contentTemplate]=\"contentTemplate\"\n          [listOfColWidth]=\"listOfAutoColWidth\"\n          [theadTemplate]=\"theadTemplate\"\n          [verticalScrollBarWidth]=\"verticalScrollBarWidth\"\n          [virtualTemplate]=\"nzVirtualScrollDirective ? nzVirtualScrollDirective.templateRef : null\"\n          [virtualItemSize]=\"nzVirtualItemSize\"\n          [virtualMaxBufferPx]=\"nzVirtualMaxBufferPx\"\n          [virtualMinBufferPx]=\"nzVirtualMinBufferPx\"\n          [tableMainElement]=\"tableMainElement\"\n          [virtualForTrackBy]=\"nzVirtualForTrackBy\"\n        ></nz-table-inner-scroll>\n        <ng-template #defaultTemplate>\n          <nz-table-inner-default\n            [tableLayout]=\"nzTableLayout\"\n            [listOfColWidth]=\"listOfManualColWidth\"\n            [theadTemplate]=\"theadTemplate\"\n            [contentTemplate]=\"contentTemplate\"\n          ></nz-table-inner-default>\n        </ng-template>\n        <nz-table-title-footer [footer]=\"nzFooter\" *ngIf=\"nzFooter\"></nz-table-title-footer>\n      </div>\n      <ng-container *ngIf=\"nzPaginationPosition === 'both' || nzPaginationPosition === 'bottom'\">\n        <ng-template [ngTemplateOutlet]=\"paginationTemplate\"></ng-template>\n      </ng-container>\n    </nz-spin>\n    <ng-template #paginationTemplate>\n      <nz-pagination\n        *ngIf=\"nzShowPagination && data.length\"\n        class=\"ant-table-pagination ant-table-pagination-right\"\n        [nzShowSizeChanger]=\"nzShowSizeChanger\"\n        [nzPageSizeOptions]=\"nzPageSizeOptions\"\n        [nzItemRender]=\"nzItemRender!\"\n        [nzShowQuickJumper]=\"nzShowQuickJumper\"\n        [nzHideOnSinglePage]=\"nzHideOnSinglePage\"\n        [nzShowTotal]=\"nzShowTotal\"\n        [nzSize]=\"nzSize === 'default' ? 'default' : 'small'\"\n        [nzPageSize]=\"nzPageSize\"\n        [nzTotal]=\"nzTotal\"\n        [nzSimple]=\"nzSimple\"\n        [nzPageIndex]=\"nzPageIndex\"\n        (nzPageSizeChange)=\"onPageSizeChange($event)\"\n        (nzPageIndexChange)=\"onPageIndexChange($event)\"\n      >\n      </nz-pagination>\n    </ng-template>\n    <ng-template #contentTemplate>\n      <ng-content></ng-content>\n    </ng-template>\n  `,\n  host: {\n    '[class.ant-table-wrapper]': 'true'\n  }\n})\nexport class NzTableComponent<T = NzSafeAny> implements OnInit, OnDestroy, OnChanges, AfterViewInit {\n  static ngAcceptInputType_nzFrontPagination: BooleanInput;\n  static ngAcceptInputType_nzTemplateMode: BooleanInput;\n  static ngAcceptInputType_nzShowPagination: BooleanInput;\n  static ngAcceptInputType_nzLoading: BooleanInput;\n  static ngAcceptInputType_nzBordered: BooleanInput;\n  static ngAcceptInputType_nzShowSizeChanger: BooleanInput;\n  static ngAcceptInputType_nzHideOnSinglePage: BooleanInput;\n  static ngAcceptInputType_nzShowQuickJumper: BooleanInput;\n  static ngAcceptInputType_nzSimple: BooleanInput;\n\n  @Input() nzTableLayout: NzTableLayout = 'auto';\n  @Input() nzShowTotal: TemplateRef<{ $implicit: number; range: [number, number] }> | null = null;\n  @Input() nzItemRender: TemplateRef<PaginationItemRenderContext> | null = null;\n  @Input() nzTitle: string | TemplateRef<NzSafeAny> | null = null;\n  @Input() nzFooter: string | TemplateRef<NzSafeAny> | null = null;\n  @Input() nzNoResult: string | TemplateRef<NzSafeAny> | undefined = undefined;\n  @Input() nzPageSizeOptions = [10, 20, 30, 40, 50];\n  @Input() nzVirtualItemSize = 0;\n  @Input() nzVirtualMaxBufferPx = 200;\n  @Input() nzVirtualMinBufferPx = 100;\n  @Input() nzVirtualForTrackBy: TrackByFunction<NzTableData> = index => index;\n  @Input() nzLoadingDelay = 0;\n  @Input() nzPageIndex = 1;\n  @Input() nzPageSize = 10;\n  @Input() nzTotal = 0;\n  @Input() nzWidthConfig: Array<string | null> = [];\n  @Input() nzData: T[] = [];\n  @Input() nzPaginationPosition: NzTablePaginationPosition = 'bottom';\n  @Input() nzScroll: { x?: string | null; y?: string | null } = { x: null, y: null };\n  @Input() @InputBoolean() nzFrontPagination = true;\n  @Input() @InputBoolean() nzTemplateMode = false;\n  @Input() @InputBoolean() nzShowPagination = true;\n  @Input() @InputBoolean() nzLoading = false;\n  @Input() @WithConfig(NZ_CONFIG_COMPONENT_NAME) nzLoadingIndicator: TemplateRef<NzSafeAny> | null = null;\n  @Input() @WithConfig(NZ_CONFIG_COMPONENT_NAME) @InputBoolean() nzBordered: boolean = false;\n  @Input() @WithConfig(NZ_CONFIG_COMPONENT_NAME) nzSize: NzTableSize = 'default';\n  @Input() @WithConfig(NZ_CONFIG_COMPONENT_NAME) @InputBoolean() nzShowSizeChanger: boolean = false;\n  @Input() @WithConfig(NZ_CONFIG_COMPONENT_NAME) @InputBoolean() nzHideOnSinglePage: boolean = false;\n  @Input() @WithConfig(NZ_CONFIG_COMPONENT_NAME) @InputBoolean() nzShowQuickJumper: boolean = false;\n  @Input() @WithConfig(NZ_CONFIG_COMPONENT_NAME) @InputBoolean() nzSimple: boolean = false;\n  @Output() readonly nzPageSizeChange = new EventEmitter<number>();\n  @Output() readonly nzPageIndexChange = new EventEmitter<number>();\n  @Output() readonly nzQueryParams = new EventEmitter<NzTableQueryParams>();\n  @Output() readonly nzCurrentPageDataChange = new EventEmitter<NzTableData[]>();\n\n  /** public data for ngFor tr */\n  public data: T[] = [];\n  public cdkVirtualScrollViewport?: CdkVirtualScrollViewport;\n  scrollX: string | null = null;\n  scrollY: string | null = null;\n  theadTemplate: TemplateRef<NzSafeAny> | null = null;\n  listOfAutoColWidth: Array<string | null> = [];\n  listOfManualColWidth: Array<string | null> = [];\n  hasFixLeft = false;\n  hasFixRight = false;\n  private destroy$ = new Subject<void>();\n  private loading$ = new BehaviorSubject<boolean>(false);\n  private templateMode$ = new BehaviorSubject<boolean>(false);\n  @ContentChild(NzTableVirtualScrollDirective, { static: false })\n  nzVirtualScrollDirective!: NzTableVirtualScrollDirective;\n  @ViewChild(NzTableInnerScrollComponent) nzTableInnerScrollComponent!: NzTableInnerScrollComponent;\n  verticalScrollBarWidth = 0;\n  onPageSizeChange(size: number): void {\n    this.nzTableDataService.updatePageSize(size);\n  }\n\n  onPageIndexChange(index: number): void {\n    this.nzTableDataService.updatePageIndex(index);\n  }\n\n  constructor(\n    private elementRef: ElementRef,\n    private nzResizeObserver: NzResizeObserver,\n    private nzConfigService: NzConfigService,\n    private cdr: ChangeDetectorRef,\n    private nzTableStyleService: NzTableStyleService,\n    private nzTableDataService: NzTableDataService\n  ) {\n    this.nzConfigService\n      .getConfigChangeEventForComponent(NZ_CONFIG_COMPONENT_NAME)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(() => {\n        this.cdr.markForCheck();\n      });\n  }\n\n  ngOnInit(): void {\n    const { pageIndexDistinct$, pageSizeDistinct$, listOfCurrentPageData$, total$, queryParams$ } = this.nzTableDataService;\n    const { theadTemplate$, hasFixLeft$, hasFixRight$ } = this.nzTableStyleService;\n    queryParams$.pipe(takeUntil(this.destroy$)).subscribe(this.nzQueryParams);\n    pageIndexDistinct$.pipe(takeUntil(this.destroy$)).subscribe(pageIndex => {\n      if (pageIndex !== this.nzPageIndex) {\n        this.nzPageIndex = pageIndex;\n        this.nzPageIndexChange.next(pageIndex);\n      }\n    });\n    pageSizeDistinct$.pipe(takeUntil(this.destroy$)).subscribe(pageSize => {\n      if (pageSize !== this.nzPageSize) {\n        this.nzPageSize = pageSize;\n        this.nzPageSizeChange.next(pageSize);\n      }\n    });\n    total$\n      .pipe(\n        takeUntil(this.destroy$),\n        filter(() => this.nzFrontPagination)\n      )\n      .subscribe(total => {\n        if (total !== this.nzTotal) {\n          this.nzTotal = total;\n          this.cdr.markForCheck();\n        }\n      });\n    listOfCurrentPageData$.pipe(takeUntil(this.destroy$)).subscribe(data => {\n      this.data = data;\n      this.nzCurrentPageDataChange.next(data);\n      this.cdr.markForCheck();\n    });\n\n    theadTemplate$.pipe(takeUntil(this.destroy$)).subscribe(theadTemplate => {\n      this.theadTemplate = theadTemplate;\n      this.cdr.markForCheck();\n    });\n\n    hasFixLeft$.pipe(takeUntil(this.destroy$)).subscribe(hasFixLeft => {\n      this.hasFixLeft = hasFixLeft;\n      this.cdr.markForCheck();\n    });\n\n    hasFixRight$.pipe(takeUntil(this.destroy$)).subscribe(hasFixRight => {\n      this.hasFixRight = hasFixRight;\n      this.cdr.markForCheck();\n    });\n\n    combineLatest([total$, this.loading$, this.templateMode$])\n      .pipe(\n        map(([total, loading, templateMode]) => total === 0 && !loading && !templateMode),\n        takeUntil(this.destroy$)\n      )\n      .subscribe(empty => {\n        this.nzTableStyleService.setShowEmpty(empty);\n      });\n\n    this.verticalScrollBarWidth = measureScrollbar('vertical');\n    this.nzTableStyleService.listOfListOfThWidthPx$.pipe(takeUntil(this.destroy$)).subscribe(listOfWidth => {\n      this.listOfAutoColWidth = listOfWidth;\n      this.cdr.markForCheck();\n    });\n    this.nzTableStyleService.manualWidthConfigPx$.pipe(takeUntil(this.destroy$)).subscribe(listOfWidth => {\n      this.listOfManualColWidth = listOfWidth;\n      this.cdr.markForCheck();\n    });\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    const { nzScroll, nzPageIndex, nzPageSize, nzFrontPagination, nzData, nzWidthConfig, nzNoResult, nzLoading, nzTemplateMode } = changes;\n    if (nzPageIndex) {\n      this.nzTableDataService.updatePageIndex(this.nzPageIndex);\n    }\n    if (nzPageSize) {\n      this.nzTableDataService.updatePageSize(this.nzPageSize);\n    }\n    if (nzData) {\n      this.nzData = this.nzData || [];\n      this.nzTableDataService.updateListOfData(this.nzData);\n    }\n    if (nzFrontPagination) {\n      this.nzTableDataService.updateFrontPagination(this.nzFrontPagination);\n    }\n    if (nzScroll) {\n      this.scrollX = (this.nzScroll && this.nzScroll.x) || null;\n      this.scrollY = (this.nzScroll && this.nzScroll.y) || null;\n      this.nzTableStyleService.setScroll(this.scrollX, this.scrollY);\n    }\n    if (nzWidthConfig) {\n      this.nzTableStyleService.setTableWidthConfig(this.nzWidthConfig);\n    }\n    if (nzLoading) {\n      this.loading$.next(this.nzLoading);\n    }\n    if (nzTemplateMode) {\n      this.templateMode$.next(this.nzTemplateMode);\n    }\n    if (nzNoResult) {\n      this.nzTableStyleService.setNoResult(this.nzNoResult);\n    }\n  }\n\n  ngAfterViewInit(): void {\n    this.nzResizeObserver\n      .observe(this.elementRef)\n      .pipe(\n        map(([entry]) => {\n          const { width } = entry.target.getBoundingClientRect();\n          const scrollBarWidth = this.scrollY ? this.verticalScrollBarWidth : 0;\n          return Math.floor(width - scrollBarWidth);\n        }),\n        takeUntil(this.destroy$)\n      )\n      .subscribe(this.nzTableStyleService.hostWidth$);\n    if (this.nzTableInnerScrollComponent && this.nzTableInnerScrollComponent.cdkVirtualScrollViewport) {\n      this.cdkVirtualScrollViewport = this.nzTableInnerScrollComponent.cdkVirtualScrollViewport;\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n/* tslint:disable:component-selector */\n\nimport { ChangeDetectionStrategy, Component, Optional, TemplateRef, ViewEncapsulation } from '@angular/core';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { BehaviorSubject } from 'rxjs';\nimport { NzTableStyleService } from '../table-style.service';\n\n@Component({\n  selector: 'tbody',\n  preserveWhitespaces: false,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  template: `\n    <ng-container *ngIf=\"listOfMeasureColumn$ | async as listOfMeasureColumn\">\n      <tr\n        nz-table-measure-row\n        *ngIf=\"isInsideTable && listOfMeasureColumn.length\"\n        [listOfMeasureColumn]=\"listOfMeasureColumn\"\n        (listOfAutoWidth)=\"onListOfAutoWidthChange($event)\"\n      ></tr>\n    </ng-container>\n    <ng-content></ng-content>\n    <tr class=\"ant-table-placeholder\" nz-table-fixed-row *ngIf=\"showEmpty$ | async\">\n      <nz-embed-empty nzComponentName=\"table\" [specificContent]=\"(noResult$ | async)!\"></nz-embed-empty>\n    </tr>\n  `,\n  host: {\n    '[class.ant-table-tbody]': 'isInsideTable'\n  }\n})\nexport class NzTbodyComponent {\n  isInsideTable = false;\n  showEmpty$ = new BehaviorSubject<boolean>(false);\n  noResult$ = new BehaviorSubject<string | TemplateRef<NzSafeAny> | undefined>(undefined);\n  listOfMeasureColumn$ = new BehaviorSubject<string[]>([]);\n\n  constructor(@Optional() private nzTableStyleService: NzTableStyleService) {\n    this.isInsideTable = !!this.nzTableStyleService;\n    if (this.nzTableStyleService) {\n      const { showEmpty$, noResult$, listOfMeasureColumn$ } = this.nzTableStyleService;\n      noResult$.subscribe(this.noResult$);\n      listOfMeasureColumn$.subscribe(this.listOfMeasureColumn$);\n      showEmpty$.subscribe(this.showEmpty$);\n    }\n  }\n\n  onListOfAutoWidthChange(listOfAutoWidth: number[]): void {\n    this.nzTableStyleService.setListOfAutoWidth(listOfAutoWidth);\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { AfterContentInit, ContentChildren, Directive, OnDestroy, Optional, QueryList } from '@angular/core';\nimport { combineLatest, merge, Observable, ReplaySubject, Subject } from 'rxjs';\nimport { flatMap, map, startWith, switchMap, takeUntil } from 'rxjs/operators';\nimport { NzCellFixedDirective } from '../cell/cell-fixed.directive';\nimport { NzThMeasureDirective } from '../cell/th-measure.directive';\nimport { NzTableStyleService } from '../table-style.service';\n\n@Directive({\n  selector: 'tr:not([mat-row]):not([mat-header-row]):not([nz-table-measure-row]):not([nzExpand]):not([nz-table-fixed-row])',\n  host: {\n    '[class.ant-table-row]': 'isInsideTable'\n  }\n})\nexport class NzTrDirective implements AfterContentInit, OnDestroy {\n  @ContentChildren(NzThMeasureDirective) listOfNzThDirective!: QueryList<NzThMeasureDirective>;\n  @ContentChildren(NzCellFixedDirective) listOfCellFixedDirective!: QueryList<NzCellFixedDirective>;\n  private destroy$ = new Subject<void>();\n  private listOfFixedColumns$ = new ReplaySubject<NzCellFixedDirective[]>(1);\n  private listOfColumns$ = new ReplaySubject<NzThMeasureDirective[]>(1);\n  listOfFixedColumnsChanges$: Observable<NzCellFixedDirective[]> = this.listOfFixedColumns$.pipe(\n    switchMap(list =>\n      merge(...[this.listOfFixedColumns$, ...list.map((c: NzCellFixedDirective) => c.changes$)]).pipe(\n        flatMap(() => this.listOfFixedColumns$)\n      )\n    ),\n    takeUntil(this.destroy$)\n  );\n  listOfFixedLeftColumnChanges$ = this.listOfFixedColumnsChanges$.pipe(map(list => list.filter(item => item.nzLeft !== false)));\n  listOfFixedRightColumnChanges$ = this.listOfFixedColumnsChanges$.pipe(map(list => list.filter(item => item.nzRight !== false)));\n  listOfColumnsChanges$: Observable<NzThMeasureDirective[]> = this.listOfColumns$.pipe(\n    switchMap(list =>\n      merge(...[this.listOfColumns$, ...list.map((c: NzThMeasureDirective) => c.changes$)]).pipe(flatMap(() => this.listOfColumns$))\n    ),\n    takeUntil(this.destroy$)\n  );\n  isInsideTable = false;\n\n  constructor(@Optional() private nzTableStyleService: NzTableStyleService) {\n    this.isInsideTable = !!nzTableStyleService;\n  }\n\n  ngAfterContentInit(): void {\n    if (this.nzTableStyleService) {\n      this.listOfCellFixedDirective.changes\n        .pipe(startWith(this.listOfCellFixedDirective), takeUntil(this.destroy$))\n        .subscribe(this.listOfFixedColumns$);\n      this.listOfNzThDirective.changes.pipe(startWith(this.listOfNzThDirective), takeUntil(this.destroy$)).subscribe(this.listOfColumns$);\n      /** set last left and first right **/\n      this.listOfFixedLeftColumnChanges$.subscribe(listOfFixedLeft => {\n        listOfFixedLeft.forEach(cell => cell.setIsLastLeft(cell === listOfFixedLeft[listOfFixedLeft.length - 1]));\n      });\n      this.listOfFixedRightColumnChanges$.subscribe(listOfFixedRight => {\n        listOfFixedRight.forEach(cell => cell.setIsFirstRight(cell === listOfFixedRight[0]));\n      });\n      /** calculate fixed nzLeft and nzRight **/\n      combineLatest([this.nzTableStyleService.listOfListOfThWidth$, this.listOfFixedLeftColumnChanges$]).subscribe(\n        ([listOfAutoWidth, listOfLeftCell]) => {\n          listOfLeftCell.forEach((cell, index) => {\n            if (cell.isAutoLeft) {\n              const currentArray = listOfLeftCell.slice(0, index);\n              const count = currentArray.reduce((pre, cur) => pre + (cur.colspan || cur.colSpan || 1), 0);\n              const width = listOfAutoWidth.slice(0, count).reduce((pre, cur) => pre + cur, 0);\n              cell.setAutoLeftWidth(`${width}px`);\n            }\n          });\n        }\n      );\n      combineLatest([this.nzTableStyleService.listOfListOfThWidth$, this.listOfFixedRightColumnChanges$]).subscribe(\n        ([listOfAutoWidth, listOfRightCell]) => {\n          listOfRightCell.forEach((_, index) => {\n            const cell = listOfRightCell[listOfRightCell.length - index - 1];\n            if (cell.isAutoRight) {\n              const currentArray = listOfRightCell.slice(listOfRightCell.length - index, listOfRightCell.length);\n              const count = currentArray.reduce((pre, cur) => pre + (cur.colspan || cur.colSpan || 1), 0);\n              const width = listOfAutoWidth\n                .slice(listOfAutoWidth.length - count, listOfAutoWidth.length)\n                .reduce((pre, cur) => pre + cur, 0);\n              cell.setAutoRightWidth(`${width}px`);\n            }\n          });\n        }\n      );\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n/* tslint:disable:component-selector */\nimport {\n  AfterContentInit,\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Component,\n  ContentChildren,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Output,\n  QueryList,\n  Renderer2,\n  SimpleChanges,\n  TemplateRef,\n  ViewChild,\n  ViewEncapsulation\n} from '@angular/core';\nimport { warnDeprecation } from 'ng-zorro-antd/core/logger';\nimport { BooleanInput, NzSafeAny } from 'ng-zorro-antd/core/types';\n\nimport { InputBoolean } from 'ng-zorro-antd/core/util';\nimport { EMPTY, merge, Observable, of, Subject } from 'rxjs';\nimport { delay, flatMap, map, startWith, switchMap, takeUntil } from 'rxjs/operators';\nimport { NzThAddOnComponent } from '../cell/th-addon.component';\nimport { NzTableDataService } from '../table-data.service';\nimport { NzTableStyleService } from '../table-style.service';\nimport { NzTrDirective } from './tr.directive';\n\n@Component({\n  selector: 'thead:not(.ant-table-thead)',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  template: `\n    <ng-template #contentTemplate>\n      <ng-content></ng-content>\n    </ng-template>\n    <ng-container *ngIf=\"!isInsideTable\">\n      <ng-template [ngTemplateOutlet]=\"contentTemplate\"></ng-template>\n    </ng-container>\n  `\n})\nexport class NzTheadComponent implements AfterContentInit, OnDestroy, AfterViewInit, OnInit, OnChanges {\n  static ngAcceptInputType_nzSingleSort: BooleanInput;\n\n  private destroy$ = new Subject<void>();\n  isInsideTable = false;\n  @ViewChild('contentTemplate', { static: true }) templateRef!: TemplateRef<NzSafeAny>;\n  @ContentChildren(NzTrDirective, { descendants: true }) listOfNzTrDirective!: QueryList<NzTrDirective>;\n  @ContentChildren(NzThAddOnComponent, { descendants: true }) listOfNzThAddOnComponent!: QueryList<NzThAddOnComponent>;\n  /** @deprecated use nzSortFn and nzSortPriority instead **/\n  @Input() @InputBoolean() nzSingleSort = false;\n  /** @deprecated use nzSortOrderChange instead **/\n  @Output() readonly nzSortChange = new EventEmitter<{ key: NzSafeAny; value: string | null }>();\n  @Output() readonly nzSortOrderChange = new EventEmitter<{ key: NzSafeAny; value: string | null }>();\n\n  constructor(\n    private elementRef: ElementRef,\n    private renderer: Renderer2,\n    @Optional() private nzTableStyleService: NzTableStyleService,\n    @Optional() private nzTableDataService: NzTableDataService\n  ) {\n    this.isInsideTable = !!this.nzTableStyleService;\n  }\n\n  ngOnInit(): void {\n    if (this.nzTableStyleService) {\n      this.nzTableStyleService.setTheadTemplate(this.templateRef);\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    const { nzSingleSort } = changes;\n    if (nzSingleSort) {\n      warnDeprecation(`'nzSingleSort' is deprecated and will be removed in 10.0.0. Please use 'nzSortFn' and 'nzSortPriority' instead.`);\n    }\n  }\n\n  ngAfterContentInit(): void {\n    if (this.nzTableStyleService) {\n      const firstTableRow$ = this.listOfNzTrDirective.changes.pipe(\n        startWith(this.listOfNzTrDirective),\n        map(item => item && item.first)\n      ) as Observable<NzTrDirective>;\n      const listOfColumnsChanges$ = firstTableRow$.pipe(\n        switchMap(firstTableRow => (firstTableRow ? firstTableRow.listOfColumnsChanges$ : EMPTY)),\n        takeUntil(this.destroy$)\n      );\n      listOfColumnsChanges$.subscribe(data => this.nzTableStyleService.setListOfTh(data));\n      /** TODO: need reset the measure row when scrollX change **/\n      this.nzTableStyleService.enableAutoMeasure$\n        .pipe(switchMap(enable => (enable ? listOfColumnsChanges$ : of([]))))\n        .pipe(takeUntil(this.destroy$))\n        .subscribe(data => this.nzTableStyleService.setListOfMeasureColumn(data));\n      const listOfFixedLeftColumnChanges$ = firstTableRow$.pipe(\n        switchMap(firstTr => (firstTr ? firstTr.listOfFixedLeftColumnChanges$ : EMPTY)),\n        takeUntil(this.destroy$)\n      );\n      const listOfFixedRightColumnChanges$ = firstTableRow$.pipe(\n        switchMap(firstTr => (firstTr ? firstTr.listOfFixedRightColumnChanges$ : EMPTY)),\n        takeUntil(this.destroy$)\n      );\n      listOfFixedLeftColumnChanges$.subscribe(listOfFixedLeftColumn => {\n        this.nzTableStyleService.setHasFixLeft(listOfFixedLeftColumn.length !== 0);\n      });\n      listOfFixedRightColumnChanges$.subscribe(listOfFixedRightColumn => {\n        this.nzTableStyleService.setHasFixRight(listOfFixedRightColumn.length !== 0);\n      });\n    }\n    if (this.nzTableDataService) {\n      const listOfColumn$ = this.listOfNzThAddOnComponent.changes.pipe(startWith(this.listOfNzThAddOnComponent)) as Observable<\n        QueryList<NzThAddOnComponent>\n      >;\n      const manualSort$ = listOfColumn$.pipe(\n        switchMap(() => merge(...this.listOfNzThAddOnComponent.map(th => th.manualClickOrder$))),\n        takeUntil(this.destroy$)\n      );\n      manualSort$.subscribe((data: NzThAddOnComponent) => {\n        const emitValue = { key: data.nzColumnKey, value: data.sortOrder };\n        this.nzSortChange.emit(emitValue);\n        this.nzSortOrderChange.emit(emitValue);\n        if (this.nzSingleSort || (data.nzSortFn && data.nzSortPriority === false)) {\n          this.listOfNzThAddOnComponent.filter(th => th !== data).forEach(th => th.clearSortOrder());\n        }\n      });\n      const listOfCalcOperator$ = listOfColumn$.pipe(\n        switchMap(list =>\n          merge(...[listOfColumn$, ...list.map((c: NzThAddOnComponent) => c.calcOperatorChange$)]).pipe(flatMap(() => listOfColumn$))\n        ),\n        map(list =>\n          list\n            .filter(item => !!item.nzSortFn || !!item.nzFilterFn)\n            .map(item => {\n              const { nzSortFn, sortOrder, nzFilterFn, nzFilterValue, nzSortPriority, nzColumnKey } = item;\n              return {\n                key: nzColumnKey,\n                sortFn: nzSortFn,\n                sortPriority: nzSortPriority,\n                sortOrder: sortOrder!,\n                filterFn: nzFilterFn!,\n                filterValue: nzFilterValue\n              };\n            })\n        ),\n        // TODO: after checked error here\n        delay(0)\n      );\n      listOfCalcOperator$.subscribe(list => {\n        this.nzTableDataService.listOfCalcOperator$.next(list);\n      });\n    }\n  }\n\n  ngAfterViewInit(): void {\n    if (this.nzTableStyleService) {\n      this.renderer.removeChild(this.renderer.parentNode(this.elementRef.nativeElement), this.elementRef.nativeElement);\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { ChangeDetectionStrategy, Component, Input, TemplateRef, ViewEncapsulation } from '@angular/core';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\n\n@Component({\n  selector: 'nz-table-title-footer',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  template: `\n    <ng-container *nzStringTemplateOutlet=\"title\">{{ title }}</ng-container>\n    <ng-container *nzStringTemplateOutlet=\"footer\">{{ footer }}</ng-container>\n  `,\n  host: {\n    '[class.ant-table-title]': `title !== null`,\n    '[class.ant-table-footer]': `footer !== null`\n  }\n})\nexport class NzTableTitleFooterComponent {\n  @Input() title: string | TemplateRef<NzSafeAny> | null = null;\n  @Input() footer: string | TemplateRef<NzSafeAny> | null = null;\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { Directive, Input } from '@angular/core';\n\n@Directive({\n  selector: 'tr[nzExpand]',\n  host: {\n    '[class.ant-table-expanded-row]': 'true',\n    '[hidden]': `!nzExpand`\n  }\n})\nexport class NzTrExpandDirective {\n  @Input() nzExpand = true;\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n/* tslint:disable:component-selector */\n\nimport {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  NgZone,\n  OnDestroy,\n  Output,\n  QueryList,\n  ViewChildren,\n  ViewEncapsulation\n} from '@angular/core';\nimport { NzResizeObserver } from 'ng-zorro-antd/core/resize-observers';\nimport { combineLatest, Observable, Subject } from 'rxjs';\nimport { debounceTime, map, startWith, switchMap, takeUntil } from 'rxjs/operators';\n\n@Component({\n  selector: 'tr[nz-table-measure-row]',\n  preserveWhitespaces: false,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  template: `\n    <td\n      #tdElement\n      class=\"nz-disable-td\"\n      style=\"padding: 0px; border: 0px; height: 0px;\"\n      *ngFor=\"let th of listOfMeasureColumn; trackBy: trackByFunc\"\n    ></td>\n  `,\n  host: {\n    '[class.ant-table-measure-now]': 'true'\n  }\n})\nexport class NzTrMeasureComponent implements AfterViewInit, OnDestroy {\n  @Input() listOfMeasureColumn: string[] = [];\n  @Output() readonly listOfAutoWidth = new EventEmitter<number[]>();\n  @ViewChildren('tdElement') listOfTdElement!: QueryList<ElementRef>;\n  private destroy$ = new Subject();\n  constructor(private nzResizeObserver: NzResizeObserver, private ngZone: NgZone) {}\n  trackByFunc(_: number, key: string): string {\n    return key;\n  }\n  ngAfterViewInit(): void {\n    this.listOfTdElement.changes\n      .pipe(startWith(this.listOfTdElement))\n      .pipe(\n        switchMap(list => {\n          return combineLatest(\n            list.toArray().map((item: ElementRef) => {\n              return this.nzResizeObserver.observe(item).pipe(\n                map(([entry]) => {\n                  const { width } = entry.target.getBoundingClientRect();\n                  return Math.floor(width);\n                })\n              );\n            })\n          ) as Observable<number[]>;\n        }),\n        debounceTime(16),\n        takeUntil(this.destroy$)\n      )\n      .subscribe(data => {\n        this.ngZone.run(() => {\n          this.listOfAutoWidth.next(data);\n        });\n      });\n  }\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nimport { PlatformModule } from '@angular/cdk/platform';\nimport { ScrollingModule } from '@angular/cdk/scrolling';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { NzButtonModule } from 'ng-zorro-antd/button';\nimport { NzCheckboxModule } from 'ng-zorro-antd/checkbox';\nimport { NzOutletModule } from 'ng-zorro-antd/core/outlet';\nimport { NzResizeObserversModule } from 'ng-zorro-antd/core/resize-observers';\nimport { NzDropDownModule } from 'ng-zorro-antd/dropdown';\nimport { NzEmptyModule } from 'ng-zorro-antd/empty';\nimport { NzI18nModule } from 'ng-zorro-antd/i18n';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\nimport { NzMenuModule } from 'ng-zorro-antd/menu';\nimport { NzPaginationModule } from 'ng-zorro-antd/pagination';\nimport { NzRadioModule } from 'ng-zorro-antd/radio';\nimport { NzSpinModule } from 'ng-zorro-antd/spin';\nimport { NzFilterTriggerComponent } from './addon/filter-trigger.component';\nimport { NzTableFilterComponent } from './addon/filter.component';\nimport { NzRowExpandButtonDirective } from './addon/row-expand-button.directive';\nimport { NzRowIndentDirective } from './addon/row-indent.directive';\nimport { NzTableSelectionComponent } from './addon/selection.component';\nimport { NzTableSortersComponent } from './addon/sorters.component';\nimport { NzCellFixedDirective } from './cell/cell-fixed.directive';\nimport { NzTableCellDirective } from './cell/cell.directive';\nimport { NzTdAddOnComponent } from './cell/td-addon.component';\nimport { NzThAddOnComponent } from './cell/th-addon.component';\nimport { NzThMeasureDirective } from './cell/th-measure.directive';\nimport { NzThSelectionComponent } from './cell/th-selection.component';\nimport { NzCellAlignDirective } from './styled/align.directive';\nimport { NzCellEllipsisDirective } from './styled/ellipsis.directive';\nimport { NzCellBreakWordDirective } from './styled/word-break.directive';\nimport { NzTableContentComponent } from './table/table-content.component';\nimport { NzTableFixedRowComponent } from './table/table-fixed-row.component';\nimport { NzTableInnerDefaultComponent } from './table/table-inner-default.component';\nimport { NzTableInnerScrollComponent } from './table/table-inner-scroll.component';\nimport { NzTableVirtualScrollDirective } from './table/table-virtual-scroll.directive';\nimport { NzTableComponent } from './table/table.component';\nimport { NzTbodyComponent } from './table/tbody.component';\nimport { NzTheadComponent } from './table/thead.component';\nimport { NzTableTitleFooterComponent } from './table/title-footer.component';\nimport { NzTrExpandDirective } from './table/tr-expand.directive';\nimport { NzTrMeasureComponent } from './table/tr-measure.component';\nimport { NzTrDirective } from './table/tr.directive';\n\n@NgModule({\n  declarations: [\n    NzTableComponent,\n    NzThAddOnComponent,\n    NzTableCellDirective,\n    NzThMeasureDirective,\n    NzTdAddOnComponent,\n    NzTheadComponent,\n    NzTbodyComponent,\n    NzTrDirective,\n    NzTrExpandDirective,\n    NzTableVirtualScrollDirective,\n    NzCellFixedDirective,\n    NzTableContentComponent,\n    NzTableTitleFooterComponent,\n    NzTableInnerDefaultComponent,\n    NzTableInnerScrollComponent,\n    NzTrMeasureComponent,\n    NzRowIndentDirective,\n    NzRowExpandButtonDirective,\n    NzCellBreakWordDirective,\n    NzCellAlignDirective,\n    NzTableSortersComponent,\n    NzTableFilterComponent,\n    NzTableSelectionComponent,\n    NzCellEllipsisDirective,\n    NzFilterTriggerComponent,\n    NzTableFixedRowComponent,\n    NzThSelectionComponent\n  ],\n  exports: [\n    NzTableComponent,\n    NzThAddOnComponent,\n    NzTableCellDirective,\n    NzThMeasureDirective,\n    NzTdAddOnComponent,\n    NzTheadComponent,\n    NzTbodyComponent,\n    NzTrDirective,\n    NzTableVirtualScrollDirective,\n    NzCellFixedDirective,\n    NzFilterTriggerComponent,\n    NzTrExpandDirective,\n    NzCellBreakWordDirective,\n    NzCellAlignDirective,\n    NzCellEllipsisDirective,\n    NzTableFixedRowComponent,\n    NzThSelectionComponent\n  ],\n  imports: [\n    NzMenuModule,\n    FormsModule,\n    NzOutletModule,\n    NzRadioModule,\n    NzCheckboxModule,\n    NzDropDownModule,\n    NzButtonModule,\n    CommonModule,\n    PlatformModule,\n    NzPaginationModule,\n    NzResizeObserversModule,\n    NzSpinModule,\n    NzI18nModule,\n    NzIconModule,\n    NzEmptyModule,\n    ScrollingModule\n  ]\n})\nexport class NzTableModule {}\n"]}