{"version":3,"file":"ng-zorro-antd-core-services.umd.js","sources":["ng-zorro-antd/core/services/resize.ts","ng-zorro-antd/core/services/singleton.ts","ng-zorro-antd/core/services/drag.ts","ng-zorro-antd/core/services/scroll.ts","ng-zorro-antd/core/services/breakpoint.ts"],"names":["Subject","auditTime","finalize","Injectable","NgZone","RendererFactory2","environment","getEventPosition","isTouchEvent","map","filter","reqAnimFrame","Inject","DOCUMENT","startWith","distinctUntilChanged","MediaMatcher"],"mappings":"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","sourcesContent":["/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { Injectable, NgZone, Renderer2, RendererFactory2 } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { auditTime, finalize } from 'rxjs/operators';\n\nconst NOOP = (): void => {};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NzResizeService {\n  private readonly resizeSource$ = new Subject<void>();\n\n  private listeners = 0;\n\n  private renderer: Renderer2;\n\n  private disposeHandle = NOOP;\n\n  private handler = (): void => {\n    this.ngZone.run(() => {\n      this.resizeSource$.next();\n    });\n  };\n\n  constructor(private ngZone: NgZone, private rendererFactory2: RendererFactory2) {\n    this.renderer = this.rendererFactory2.createRenderer(null, null);\n  }\n\n  subscribe(): Observable<void> {\n    this.registerListener();\n\n    return this.resizeSource$.pipe(\n      auditTime(16),\n      finalize(() => this.unregisterListener())\n    );\n  }\n\n  unsubscribe(): void {\n    this.unregisterListener();\n  }\n\n  private registerListener(): void {\n    if (this.listeners === 0) {\n      this.ngZone.runOutsideAngular(() => {\n        this.disposeHandle = this.renderer.listen('window', 'resize', this.handler);\n      });\n    }\n\n    this.listeners += 1;\n  }\n\n  private unregisterListener(): void {\n    this.listeners -= 1;\n\n    if (this.listeners === 0) {\n      this.disposeHandle();\n      this.disposeHandle = NOOP;\n    }\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { Injectable } from '@angular/core';\n\nimport { environment } from 'ng-zorro-antd/core/environments';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\n\ninterface SingletonRegistryItem {\n  target: NzSafeAny;\n}\n\n/**\n * When running in test, singletons should not be destroyed. So we keep references of singletons\n * in this global variable.\n */\nconst testSingleRegistry = new Map<string, SingletonRegistryItem>();\n\n/**\n * Some singletons should have life cycle that is same to Angular's. This service make sure that\n * those singletons get destroyed in HMR.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class NzSingletonService {\n  private get singletonRegistry(): Map<string, SingletonRegistryItem> {\n    return environment.isTestMode ? testSingleRegistry : this._singletonRegistry;\n  }\n\n  /**\n   * This registry is used to register singleton in dev mode.\n   * So that singletons get destroyed when hot module reload happens.\n   *\n   * This works in prod mode too but with no specific effect.\n   */\n  private _singletonRegistry = new Map<string, SingletonRegistryItem>();\n\n  registerSingletonWithKey(key: string, target: NzSafeAny): void {\n    const alreadyHave = this.singletonRegistry.has(key);\n    const item: SingletonRegistryItem = alreadyHave ? this.singletonRegistry.get(key)! : this.withNewTarget(target);\n\n    if (!alreadyHave) {\n      this.singletonRegistry.set(key, item);\n    }\n  }\n\n  getSingletonWithKey<T>(key: string): T | null {\n    return this.singletonRegistry.has(key) ? (this.singletonRegistry.get(key)!.target as T) : null;\n  }\n\n  private withNewTarget(target: NzSafeAny): SingletonRegistryItem {\n    return {\n      target\n    };\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { Injectable, Renderer2, RendererFactory2 } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { filter, finalize, map } from 'rxjs/operators';\n\nimport { getEventPosition, isTouchEvent } from 'ng-zorro-antd/core/util';\n\ninterface Point {\n  x: number;\n  y: number;\n}\n\ntype Delta = Point;\n\ninterface HandlerItem {\n  handler?(e: Event): void;\n\n  teardown(): void;\n}\n\nfunction getPagePosition(event: MouseEvent | TouchEvent): Point {\n  const e = getEventPosition(event);\n  return {\n    x: e.pageX,\n    y: e.pageY\n  };\n}\n\n/**\n * This module provide a global dragging service to other components.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class NzDragService {\n  private draggingThreshold = 5;\n  private currentDraggingSequence: Subject<MouseEvent | Touch> | null = null;\n  private currentStartingPoint: Point | null = null;\n  private handleRegistry = new Set<HandlerItem>();\n  private renderer: Renderer2;\n\n  constructor(rendererFactory2: RendererFactory2) {\n    this.renderer = rendererFactory2.createRenderer(null, null);\n  }\n\n  requestDraggingSequence(event: MouseEvent | TouchEvent): Observable<Delta> {\n    if (!this.handleRegistry.size) {\n      this.registerDraggingHandler(isTouchEvent(event));\n    }\n\n    // Complete last dragging sequence if a new target is dragged.\n    if (this.currentDraggingSequence) {\n      this.currentDraggingSequence.complete();\n    }\n\n    this.currentStartingPoint = getPagePosition(event);\n    this.currentDraggingSequence = new Subject<MouseEvent | Touch>();\n\n    return this.currentDraggingSequence.pipe(\n      map((e: MouseEvent | Touch) => {\n        return {\n          x: e.pageX - this.currentStartingPoint!.x,\n          y: e.pageY - this.currentStartingPoint!.y\n        };\n      }),\n      filter((e: Delta) => Math.abs(e.x) > this.draggingThreshold || Math.abs(e.y) > this.draggingThreshold),\n      finalize(() => this.teardownDraggingSequence())\n    );\n  }\n\n  private registerDraggingHandler(isTouch: boolean): void {\n    if (isTouch) {\n      this.handleRegistry.add({\n        teardown: this.renderer.listen('document', 'touchmove', (e: TouchEvent) => {\n          if (this.currentDraggingSequence) {\n            this.currentDraggingSequence.next(e.touches[0] || e.changedTouches[0]);\n          }\n        })\n      });\n      this.handleRegistry.add({\n        teardown: this.renderer.listen('document', 'touchend', () => {\n          if (this.currentDraggingSequence) {\n            this.currentDraggingSequence.complete();\n          }\n        })\n      });\n    } else {\n      this.handleRegistry.add({\n        teardown: this.renderer.listen('document', 'mousemove', e => {\n          if (this.currentDraggingSequence) {\n            this.currentDraggingSequence.next(e);\n          }\n        })\n      });\n      this.handleRegistry.add({\n        teardown: this.renderer.listen('document', 'mouseup', () => {\n          if (this.currentDraggingSequence) {\n            this.currentDraggingSequence.complete();\n          }\n        })\n      });\n    }\n  }\n\n  private teardownDraggingSequence(): void {\n    this.currentDraggingSequence = null;\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { DOCUMENT } from '@angular/common';\nimport { Inject, Injectable } from '@angular/core';\nimport { reqAnimFrame } from 'ng-zorro-antd/core/polyfill';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\n\nexport type EasyingFn = (t: number, b: number, c: number, d: number) => number;\n\nfunction easeInOutCubic(t: number, b: number, c: number, d: number): number {\n  const cc = c - b;\n  let tt = t / (d / 2);\n  if (tt < 1) {\n    return (cc / 2) * tt * tt * tt + b;\n  } else {\n    return (cc / 2) * ((tt -= 2) * tt * tt + 2) + b;\n  }\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NzScrollService {\n  private doc: Document;\n\n  constructor(@Inject(DOCUMENT) doc: NzSafeAny) {\n    this.doc = doc;\n  }\n\n  /** Set the position of the scroll bar of `el`. */\n  setScrollTop(el: Element | Window, topValue: number = 0): void {\n    if (el === window) {\n      this.doc.body.scrollTop = topValue;\n      this.doc.documentElement!.scrollTop = topValue;\n    } else {\n      (el as Element).scrollTop = topValue;\n    }\n  }\n\n  /** Get position of `el` against window. */\n  getOffset(el: Element): { top: number; left: number } {\n    const ret = {\n      top: 0,\n      left: 0\n    };\n    if (!el || !el.getClientRects().length) {\n      return ret;\n    }\n\n    const rect = el.getBoundingClientRect();\n    if (rect.width || rect.height) {\n      const doc = el.ownerDocument!.documentElement;\n      ret.top = rect.top - doc!.clientTop;\n      ret.left = rect.left - doc!.clientLeft;\n    } else {\n      ret.top = rect.top;\n      ret.left = rect.left;\n    }\n\n    return ret;\n  }\n\n  /** Get the position of the scoll bar of `el`. */\n  // TODO: remove '| Window' as the fallback already happens here\n  getScroll(el?: Element | Window, top: boolean = true): number {\n    const target = el ? el : window;\n    const prop = top ? 'pageYOffset' : 'pageXOffset';\n    const method = top ? 'scrollTop' : 'scrollLeft';\n    const isWindow = target === window;\n    // @ts-ignore\n    let ret = isWindow ? target[prop] : target[method];\n    if (isWindow && typeof ret !== 'number') {\n      ret = this.doc.documentElement![method];\n    }\n    return ret;\n  }\n\n  /**\n   * Scroll `el` to some position with animation.\n   *\n   * @param containerEl container, `window` by default\n   * @param targetTopValue Scroll to `top`, 0 by default\n   * @param easing Transition curve, `easeInOutCubic` by default\n   * @param callback callback invoked when transition is done\n   */\n  scrollTo(containerEl: Element | Window, targetTopValue: number = 0, easing?: EasyingFn, callback?: () => void): void {\n    const target = containerEl ? containerEl : window;\n    const scrollTop = this.getScroll(target);\n    const startTime = Date.now();\n    const frameFunc = () => {\n      const timestamp = Date.now();\n      const time = timestamp - startTime;\n      this.setScrollTop(target, (easing || easeInOutCubic)(time, scrollTop, targetTopValue, 450));\n      if (time < 450) {\n        reqAnimFrame(frameFunc);\n      } else {\n        if (callback) {\n          callback();\n        }\n      }\n    };\n    reqAnimFrame(frameFunc);\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { MediaMatcher } from '@angular/cdk/layout';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { distinctUntilChanged, map, startWith } from 'rxjs/operators';\n\nimport { NzResizeService } from './resize';\n\nexport enum NzBreakpointEnum {\n  xxl = 'xxl',\n  xl = 'xl',\n  lg = 'lg',\n  md = 'md',\n  sm = 'sm',\n  xs = 'xs'\n}\n\nexport type BreakpointMap = { [key in NzBreakpointEnum]: string };\nexport type BreakpointBooleanMap = { [key in NzBreakpointEnum]: boolean };\nexport type NzBreakpointKey = keyof typeof NzBreakpointEnum;\n\nexport const gridResponsiveMap: BreakpointMap = {\n  xs: '(max-width: 575px)',\n  sm: '(min-width: 576px)',\n  md: '(min-width: 768px)',\n  lg: '(min-width: 992px)',\n  xl: '(min-width: 1200px)',\n  xxl: '(min-width: 1600px)'\n};\n\nexport const siderResponsiveMap: BreakpointMap = {\n  xs: '(max-width: 479.98px)',\n  sm: '(max-width: 575.98px)',\n  md: '(max-width: 767.98px)',\n  lg: '(max-width: 991.98px)',\n  xl: '(max-width: 1199.98px)',\n  xxl: '(max-width: 1599.98px)'\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NzBreakpointService {\n  constructor(private resizeService: NzResizeService, private mediaMatcher: MediaMatcher) {\n    this.resizeService.subscribe().subscribe(() => {});\n  }\n\n  subscribe(breakpointMap: BreakpointMap): Observable<NzBreakpointEnum>;\n  subscribe(breakpointMap: BreakpointMap, fullMap: true): Observable<BreakpointBooleanMap>;\n  subscribe(breakpointMap: BreakpointMap, fullMap?: true): Observable<NzBreakpointEnum | BreakpointBooleanMap> {\n    if (fullMap) {\n      const get = () => this.matchMedia(breakpointMap, true);\n      return this.resizeService.subscribe().pipe(\n        map(get),\n        startWith(get()),\n        distinctUntilChanged((x: [NzBreakpointEnum, BreakpointBooleanMap], y: [NzBreakpointEnum, BreakpointBooleanMap]) => x[0] === y[0]),\n        map(x => x[1])\n      );\n    } else {\n      const get = () => this.matchMedia(breakpointMap);\n      return this.resizeService.subscribe().pipe(map(get), startWith(get()), distinctUntilChanged());\n    }\n  }\n\n  private matchMedia(breakpointMap: BreakpointMap): NzBreakpointEnum;\n  private matchMedia(breakpointMap: BreakpointMap, fullMap: true): [NzBreakpointEnum, BreakpointBooleanMap];\n  private matchMedia(breakpointMap: BreakpointMap, fullMap?: true): NzBreakpointEnum | [NzBreakpointEnum, BreakpointBooleanMap] {\n    let bp = NzBreakpointEnum.md;\n\n    const breakpointBooleanMap: Partial<BreakpointBooleanMap> = {};\n\n    Object.keys(breakpointMap).map(breakpoint => {\n      const castBP = breakpoint as NzBreakpointEnum;\n      const matched = this.mediaMatcher.matchMedia(gridResponsiveMap[castBP]).matches;\n\n      breakpointBooleanMap[breakpoint as NzBreakpointEnum] = matched;\n\n      if (matched) {\n        bp = castBP;\n      }\n    });\n\n    if (fullMap) {\n      return [bp, breakpointBooleanMap as BreakpointBooleanMap];\n    } else {\n      return bp;\n    }\n  }\n}\n"]}