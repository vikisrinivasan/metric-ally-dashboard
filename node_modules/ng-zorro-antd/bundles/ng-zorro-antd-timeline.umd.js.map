{"version":3,"file":"ng-zorro-antd-timeline.umd.js","sources":["ng-zorro-antd/timeline/timeline.service.ts","ng-zorro-antd/timeline/typings.ts","ng-zorro-antd/timeline/timeline-item.component.ts","ng-zorro-antd/timeline/timeline.component.ts","ng-zorro-antd/timeline/timeline.module.ts"],"names":["ReplaySubject","Injectable","Component","ChangeDetectionStrategy","ViewEncapsulation","ChangeDetectorRef","ViewChild","Input","Subject","takeUntil","ContentChildren","NgModule","CommonModule","PlatformModule","NzIconModule","NzOutletModule"],"mappings":"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","sourcesContent":["/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nimport { Injectable } from '@angular/core';\nimport { ReplaySubject } from 'rxjs';\n\n@Injectable()\nexport class TimelineService {\n  check$ = new ReplaySubject(1);\n  markForCheck(): void {\n    this.check$.next();\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nconst TimelineModes = ['left', 'alternate', 'right', 'custom'] as const;\nexport type NzTimelineMode = typeof TimelineModes[number];\n\nconst TimelinePositions = ['left', 'right'] as const;\nexport type NzTimelinePosition = typeof TimelinePositions[number];\n\nexport const TimelineTimeDefaultColors = ['red', 'blue', 'green', 'grey', 'gray'] as const;\nexport type NzTimelineItemColor = typeof TimelineTimeDefaultColors[number];\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  Input,\n  OnChanges,\n  SimpleChanges,\n  TemplateRef,\n  ViewChild,\n  ViewEncapsulation\n} from '@angular/core';\n\nimport { TimelineService } from './timeline.service';\nimport { NzTimelineItemColor, NzTimelinePosition, TimelineTimeDefaultColors } from './typings';\n\nfunction isDefaultColor(color?: string): boolean {\n  return TimelineTimeDefaultColors.findIndex(i => i === color) !== -1;\n}\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  preserveWhitespaces: false,\n  selector: 'nz-timeline-item, [nz-timeline-item]',\n  exportAs: 'nzTimelineItem',\n  template: `\n    <ng-template #template>\n      <li\n        class=\"ant-timeline-item\"\n        [class.ant-timeline-item-right]=\"(nzPosition || position) === 'right'\"\n        [class.ant-timeline-item-left]=\"(nzPosition || position) === 'left'\"\n        [class.ant-timeline-item-last]=\"isLast\"\n      >\n        <div class=\"ant-timeline-item-tail\"></div>\n        <div\n          class=\"ant-timeline-item-head\"\n          [class.ant-timeline-item-head-red]=\"nzColor === 'red'\"\n          [class.ant-timeline-item-head-blue]=\"nzColor === 'blue'\"\n          [class.ant-timeline-item-head-green]=\"nzColor === 'green'\"\n          [class.ant-timeline-item-head-gray]=\"nzColor === 'gray'\"\n          [class.ant-timeline-item-head-custom]=\"!!nzDot\"\n          [style.border-color]=\"borderColor\"\n        >\n          <ng-container *nzStringTemplateOutlet=\"nzDot\">{{ nzDot }}</ng-container>\n        </div>\n        <div class=\"ant-timeline-item-content\">\n          <ng-content></ng-content>\n        </div>\n      </li>\n    </ng-template>\n  `\n})\nexport class NzTimelineItemComponent implements OnChanges {\n  @ViewChild('template', { static: false }) template!: TemplateRef<void>;\n\n  @Input() nzPosition?: NzTimelinePosition;\n  @Input() nzColor: NzTimelineItemColor = 'blue';\n  @Input() nzDot?: string | TemplateRef<void>;\n\n  isLast = false;\n  borderColor: string | null = null;\n  position?: NzTimelinePosition;\n\n  constructor(private cdr: ChangeDetectorRef, private timelineService: TimelineService) {}\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.timelineService.markForCheck();\n    if (changes.nzColor) {\n      this.updateCustomColor();\n    }\n  }\n\n  detectChanges(): void {\n    this.cdr.detectChanges();\n  }\n\n  private updateCustomColor(): void {\n    this.borderColor = isDefaultColor(this.nzColor) ? null : this.nzColor;\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChildren,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  QueryList,\n  SimpleChange,\n  SimpleChanges,\n  TemplateRef,\n  ViewEncapsulation\n} from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { NzTimelineItemComponent } from './timeline-item.component';\nimport { TimelineService } from './timeline.service';\nimport { NzTimelineMode, NzTimelinePosition } from './typings';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  preserveWhitespaces: false,\n  selector: 'nz-timeline',\n  providers: [TimelineService],\n  exportAs: 'nzTimeline',\n  template: `\n    <ul\n      class=\"ant-timeline\"\n      [class.ant-timeline-right]=\"nzMode === 'right'\"\n      [class.ant-timeline-alternate]=\"nzMode === 'alternate' || nzMode === 'custom'\"\n      [class.ant-timeline-pending]=\"!!nzPending\"\n      [class.ant-timeline-reverse]=\"nzReverse\"\n    >\n      <!-- pending dot (reversed) -->\n      <ng-container *ngIf=\"nzReverse\" [ngTemplateOutlet]=\"pendingTemplate\"></ng-container>\n      <!-- timeline items -->\n      <ng-container *ngFor=\"let item of timelineItems\">\n        <ng-template [ngTemplateOutlet]=\"item.template\"></ng-template>\n      </ng-container>\n      <ng-container *ngIf=\"!nzReverse\" [ngTemplateOutlet]=\"pendingTemplate\"></ng-container>\n      <!-- pending dot -->\n    </ul>\n    <ng-template #pendingTemplate>\n      <li *ngIf=\"nzPending\" class=\"ant-timeline-item ant-timeline-item-pending\">\n        <div class=\"ant-timeline-item-tail\"></div>\n        <div class=\"ant-timeline-item-head ant-timeline-item-head-custom ant-timeline-item-head-blue\">\n          <ng-container *nzStringTemplateOutlet=\"nzPendingDot\">\n            {{ nzPendingDot }}<i *ngIf=\"!nzPendingDot\" nz-icon nzType=\"loading\"></i>\n          </ng-container>\n        </div>\n        <div class=\"ant-timeline-item-content\">\n          <ng-container *nzStringTemplateOutlet=\"nzPending\">\n            {{ isPendingBoolean ? '' : nzPending }}\n          </ng-container>\n        </div>\n      </li>\n    </ng-template>\n    <!-- Grasp items -->\n    <ng-content></ng-content>\n  `\n})\nexport class NzTimelineComponent implements AfterContentInit, OnChanges, OnDestroy, OnInit {\n  @ContentChildren(NzTimelineItemComponent) listOfItems!: QueryList<NzTimelineItemComponent>;\n\n  @Input() nzMode: NzTimelineMode = 'left';\n  @Input() nzPending?: string | boolean | TemplateRef<void>;\n  @Input() nzPendingDot?: string | TemplateRef<void>;\n  @Input() nzReverse: boolean = false;\n\n  isPendingBoolean: boolean = false;\n  timelineItems: NzTimelineItemComponent[] = [];\n\n  private destroy$ = new Subject<void>();\n\n  constructor(private cdr: ChangeDetectorRef, private timelineService: TimelineService) {}\n\n  ngOnChanges(changes: SimpleChanges): void {\n    const { nzMode, nzReverse, nzPending } = changes;\n\n    if (simpleChangeActivated(nzMode) || simpleChangeActivated(nzReverse)) {\n      this.updateChildren();\n    }\n\n    if (nzPending) {\n      this.isPendingBoolean = nzPending.currentValue === true;\n    }\n  }\n\n  ngOnInit(): void {\n    this.timelineService.check$.pipe(takeUntil(this.destroy$)).subscribe(() => {\n      this.cdr.markForCheck();\n    });\n  }\n\n  ngAfterContentInit(): void {\n    this.updateChildren();\n\n    this.listOfItems.changes.pipe(takeUntil(this.destroy$)).subscribe(() => {\n      this.updateChildren();\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  private updateChildren(): void {\n    if (this.listOfItems && this.listOfItems.length) {\n      const length = this.listOfItems.length;\n\n      this.listOfItems.forEach((item, index) => {\n        item.isLast = !this.nzReverse ? index === length - 1 : index === 0;\n        item.position = getInferredTimelineItemPosition(index, this.nzMode);\n        item.detectChanges();\n      });\n      this.timelineItems = this.nzReverse ? this.listOfItems.toArray().reverse() : this.listOfItems.toArray();\n    }\n    this.cdr.markForCheck();\n  }\n}\n\nfunction simpleChangeActivated(simpleChange?: SimpleChange): boolean {\n  return !!(simpleChange && (simpleChange.previousValue !== simpleChange.currentValue || simpleChange.isFirstChange()));\n}\n\nfunction getInferredTimelineItemPosition(index: number, mode: NzTimelineMode): NzTimelinePosition | undefined {\n  return mode === 'custom'\n    ? undefined\n    : mode === 'left'\n    ? 'left'\n    : mode === 'right'\n    ? 'right'\n    : mode === 'alternate' && index % 2 === 0\n    ? 'left'\n    : 'right';\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nimport { PlatformModule } from '@angular/cdk/platform';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { NzOutletModule } from 'ng-zorro-antd/core/outlet';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\n\nimport { NzTimelineItemComponent } from './timeline-item.component';\nimport { NzTimelineComponent } from './timeline.component';\n\n@NgModule({\n  declarations: [NzTimelineItemComponent, NzTimelineComponent],\n  exports: [NzTimelineItemComponent, NzTimelineComponent],\n  imports: [CommonModule, PlatformModule, NzIconModule, NzOutletModule]\n})\nexport class NzTimelineModule {}\n"]}