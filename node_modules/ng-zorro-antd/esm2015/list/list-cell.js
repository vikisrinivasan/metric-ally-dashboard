/**
 * @fileoverview added by tsickle
 * Generated from: list-cell.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE
 */
import { ChangeDetectionStrategy, Component, Directive, Input } from '@angular/core';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from 'ng-zorro-antd/empty';

const _c0 = ["*"];
export class NzListEmptyComponent {
}
NzListEmptyComponent.ɵfac = function NzListEmptyComponent_Factory(t) { return new (t || NzListEmptyComponent)(); };
NzListEmptyComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: NzListEmptyComponent, selectors: [["nz-list-empty"]], hostAttrs: [1, "ant-list-empty-text"], inputs: { nzNoResult: "nzNoResult" }, exportAs: ["nzListHeader"], decls: 1, vars: 2, consts: [[3, "nzComponentName", "specificContent"]], template: function NzListEmptyComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelement(0, "nz-embed-empty", 0);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("nzComponentName", "list")("specificContent", ctx.nzNoResult);
    } }, directives: [ɵngcc1.NzEmbedEmptyComponent], encapsulation: 2, changeDetection: 0 });
NzListEmptyComponent.propDecorators = {
    nzNoResult: [{ type: Input }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NzListEmptyComponent, [{
        type: Component,
        args: [{
                selector: 'nz-list-empty',
                exportAs: 'nzListHeader',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: ` <nz-embed-empty [nzComponentName]="'list'" [specificContent]="nzNoResult"></nz-embed-empty> `,
                host: {
                    class: 'ant-list-empty-text'
                }
            }]
    }], null, { nzNoResult: [{
            type: Input
        }] }); })();
if (false) {
    /** @type {?} */
    NzListEmptyComponent.prototype.nzNoResult;
}
export class NzListHeaderComponent {
}
NzListHeaderComponent.ɵfac = function NzListHeaderComponent_Factory(t) { return new (t || NzListHeaderComponent)(); };
NzListHeaderComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: NzListHeaderComponent, selectors: [["nz-list-header"]], hostAttrs: [1, "ant-list-header"], exportAs: ["nzListHeader"], ngContentSelectors: _c0, decls: 1, vars: 0, template: function NzListHeaderComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NzListHeaderComponent, [{
        type: Component,
        args: [{
                selector: 'nz-list-header',
                exportAs: 'nzListHeader',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: ` <ng-content></ng-content> `,
                host: {
                    class: 'ant-list-header'
                }
            }]
    }], null, null); })();
export class NzListFooterComponent {
}
NzListFooterComponent.ɵfac = function NzListFooterComponent_Factory(t) { return new (t || NzListFooterComponent)(); };
NzListFooterComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: NzListFooterComponent, selectors: [["nz-list-footer"]], hostAttrs: [1, "ant-list-footer"], exportAs: ["nzListFooter"], ngContentSelectors: _c0, decls: 1, vars: 0, template: function NzListFooterComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NzListFooterComponent, [{
        type: Component,
        args: [{
                selector: 'nz-list-footer',
                exportAs: 'nzListFooter',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: ` <ng-content></ng-content> `,
                host: {
                    class: 'ant-list-footer'
                }
            }]
    }], null, null); })();
export class NzListPaginationComponent {
}
NzListPaginationComponent.ɵfac = function NzListPaginationComponent_Factory(t) { return new (t || NzListPaginationComponent)(); };
NzListPaginationComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: NzListPaginationComponent, selectors: [["nz-list-pagination"]], hostAttrs: [1, "ant-list-pagination"], exportAs: ["nzListPagination"], ngContentSelectors: _c0, decls: 1, vars: 0, template: function NzListPaginationComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NzListPaginationComponent, [{
        type: Component,
        args: [{
                selector: 'nz-list-pagination',
                exportAs: 'nzListPagination',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: ` <ng-content></ng-content> `,
                host: {
                    class: 'ant-list-pagination'
                }
            }]
    }], null, null); })();
export class NzListLoadMoreDirective {
}
NzListLoadMoreDirective.ɵfac = function NzListLoadMoreDirective_Factory(t) { return new (t || NzListLoadMoreDirective)(); };
NzListLoadMoreDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: NzListLoadMoreDirective, selectors: [["nz-list-load-more"]], exportAs: ["nzListLoadMoreDirective"] });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NzListLoadMoreDirective, [{
        type: Directive,
        args: [{
                selector: 'nz-list-load-more',
                exportAs: 'nzListLoadMoreDirective'
            }]
    }], null, null); })();
export class NzListGridDirective {
}
NzListGridDirective.ɵfac = function NzListGridDirective_Factory(t) { return new (t || NzListGridDirective)(); };
NzListGridDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: NzListGridDirective, selectors: [["nz-list", "nzGrid", ""]], hostAttrs: [1, "ant-list-grid"] });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NzListGridDirective, [{
        type: Directive,
        args: [{
                selector: 'nz-list[nzGrid]',
                host: {
                    class: 'ant-list-grid'
                }
            }]
    }], null, null); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGlzdC1jZWxsLmpzIiwic291cmNlcyI6WyJuZy16b3Jyby1hbnRkL2xpc3QvbGlzdC1jZWxsLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUtBLE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxTQUFTLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBZSxNQUFNLGVBQWUsQ0FBQzs7Ozs7QUFXbEcsTUFBTSxPQUFPLG9CQUFvQjtBQUNqQztnREFWQyxTQUFTLFNBQUMsa0JBQ1QsUUFBUSxFQUFFLGVBQWU7V0FDekIsUUFBUSxFQUFFLGNBQWMsa0JBQ3hCLGVBQWUsRUFBRSx1QkFBdUIsQ0FBQyxNQUFNLGtCQUMvQyxRQUFRLEVBQUUsK0ZBQStGLGtCQUN6RyxJQUFJLEVBQUUsc0JBQ0osS0FBSyxFQUFFLHFCQUFxQixrQkFDN0IsY0FDRjs7Ozs2RkFDRztBQUFDO0FBQ0kseUJBQU4sS0FBSztBQUFJOzs7Ozs7Ozs7Ozs7OztvQkFBRTtBQUFDO0FBQWE7QUFBcUIsSUFBL0MsMENBQWlEO0FBQ25EO0FBV0EsTUFBTSxPQUFPLHFCQUFxQjtBQUFHO2lEQVRwQyxTQUFTLFNBQUMsa0JBQ1QsUUFBUSxFQUFFLGdCQUFnQjtVQUMxQixRQUFRLEVBQUUsY0FBYyxrQkFDeEIsZUFBZSxFQUFFLHVCQUF1QixDQUFDLE1BQU0sa0JBQy9DLFFBQVEsRUFBRSw2QkFBNkIsa0JBQ3ZDLElBQUksRUFBRSxzQkFDSixLQUFLLEVBQUUsaUJBQWlCLGtCQUN6QixjQUNGOzs7Ozs7Ozs7Ozs7Ozs7MEJBQ0c7QUFXSixNQUFNLE9BQU8scUJBQXFCO0FBQUc7aURBVHBDLFNBQVMsU0FBQyxrQkFDVCxRQUFRLEVBQUUsZ0JBQWdCO1VBQzFCLFFBQVEsRUFBRSxjQUFjLGtCQUN4QixlQUFlLEVBQUUsdUJBQXVCLENBQUMsTUFBTSxrQkFDL0MsUUFBUSxFQUFFLDZCQUE2QixrQkFDdkMsSUFBSSxFQUFFLHNCQUNKLEtBQUssRUFBRSxpQkFBaUIsa0JBQ3pCLGNBQ0Y7Ozs7Ozs7Ozs7Ozs7OzswQkFDRztBQVdKLE1BQU0sT0FBTyx5QkFBeUI7QUFBRztxREFUeEMsU0FBUyxTQUFDLGtCQUNULFFBQVEsRUFBRSxvQkFBb0I7TUFDOUIsUUFBUSxFQUFFLGtCQUFrQixrQkFDNUIsZUFBZSxFQUFFLHVCQUF1QixDQUFDLE1BQU0sa0JBQy9DLFFBQVEsRUFBRSw2QkFBNkIsa0JBQ3ZDLElBQUksRUFBRSxzQkFDSixLQUFLLEVBQUUscUJBQXFCLGtCQUM3QixjQUNGOzs7Ozs7Ozs7Ozs7Ozs7MEJBQ0c7QUFNSixNQUFNLE9BQU8sdUJBQXVCO0FBQUc7bURBSnRDLFNBQVMsU0FBQyxrQkFDVCxRQUFRLEVBQUUsbUJBQW1CO1NBQzdCLFFBQVEsRUFBRSx5QkFBeUIsY0FDcEM7Ozs7Ozs7MEJBQ0k7QUFRTCxNQUFNLE9BQU8sbUJBQW1CO0FBQUc7K0NBTmxDLFNBQVMsU0FBQyxrQkFDVCxRQUFRLEVBQUUsaUJBQWlCO2VBQzNCLElBQUksRUFBRSxzQkFDSixLQUFLLEVBQUUsZUFBZSxrQkFDdkIsY0FDRjs7Ozs7Ozs7OzBCQUNJO0FBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFVzZSBvZiB0aGlzIHNvdXJjZSBjb2RlIGlzIGdvdmVybmVkIGJ5IGFuIE1JVC1zdHlsZSBsaWNlbnNlIHRoYXQgY2FuIGJlXG4gKiBmb3VuZCBpbiB0aGUgTElDRU5TRSBmaWxlIGF0IGh0dHBzOi8vZ2l0aHViLmNvbS9ORy1aT1JSTy9uZy16b3Jyby1hbnRkL2Jsb2IvbWFzdGVyL0xJQ0VOU0VcbiAqL1xuXG5pbXBvcnQgeyBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneSwgQ29tcG9uZW50LCBEaXJlY3RpdmUsIElucHV0LCBUZW1wbGF0ZVJlZiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICduei1saXN0LWVtcHR5JyxcbiAgZXhwb3J0QXM6ICduekxpc3RIZWFkZXInLFxuICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaCxcbiAgdGVtcGxhdGU6IGAgPG56LWVtYmVkLWVtcHR5IFtuekNvbXBvbmVudE5hbWVdPVwiJ2xpc3QnXCIgW3NwZWNpZmljQ29udGVudF09XCJuek5vUmVzdWx0XCI+PC9uei1lbWJlZC1lbXB0eT4gYCxcbiAgaG9zdDoge1xuICAgIGNsYXNzOiAnYW50LWxpc3QtZW1wdHktdGV4dCdcbiAgfVxufSlcbmV4cG9ydCBjbGFzcyBOekxpc3RFbXB0eUNvbXBvbmVudCB7XG4gIEBJbnB1dCgpIG56Tm9SZXN1bHQ/OiBzdHJpbmcgfCBUZW1wbGF0ZVJlZjx2b2lkPjtcbn1cblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnbnotbGlzdC1oZWFkZXInLFxuICBleHBvcnRBczogJ256TGlzdEhlYWRlcicsXG4gIGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoLFxuICB0ZW1wbGF0ZTogYCA8bmctY29udGVudD48L25nLWNvbnRlbnQ+IGAsXG4gIGhvc3Q6IHtcbiAgICBjbGFzczogJ2FudC1saXN0LWhlYWRlcidcbiAgfVxufSlcbmV4cG9ydCBjbGFzcyBOekxpc3RIZWFkZXJDb21wb25lbnQge31cblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnbnotbGlzdC1mb290ZXInLFxuICBleHBvcnRBczogJ256TGlzdEZvb3RlcicsXG4gIGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoLFxuICB0ZW1wbGF0ZTogYCA8bmctY29udGVudD48L25nLWNvbnRlbnQ+IGAsXG4gIGhvc3Q6IHtcbiAgICBjbGFzczogJ2FudC1saXN0LWZvb3RlcidcbiAgfVxufSlcbmV4cG9ydCBjbGFzcyBOekxpc3RGb290ZXJDb21wb25lbnQge31cblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnbnotbGlzdC1wYWdpbmF0aW9uJyxcbiAgZXhwb3J0QXM6ICduekxpc3RQYWdpbmF0aW9uJyxcbiAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2gsXG4gIHRlbXBsYXRlOiBgIDxuZy1jb250ZW50PjwvbmctY29udGVudD4gYCxcbiAgaG9zdDoge1xuICAgIGNsYXNzOiAnYW50LWxpc3QtcGFnaW5hdGlvbidcbiAgfVxufSlcbmV4cG9ydCBjbGFzcyBOekxpc3RQYWdpbmF0aW9uQ29tcG9uZW50IHt9XG5cbkBEaXJlY3RpdmUoe1xuICBzZWxlY3RvcjogJ256LWxpc3QtbG9hZC1tb3JlJyxcbiAgZXhwb3J0QXM6ICduekxpc3RMb2FkTW9yZURpcmVjdGl2ZSdcbn0pXG5leHBvcnQgY2xhc3MgTnpMaXN0TG9hZE1vcmVEaXJlY3RpdmUge31cblxuQERpcmVjdGl2ZSh7XG4gIHNlbGVjdG9yOiAnbnotbGlzdFtuekdyaWRdJyxcbiAgaG9zdDoge1xuICAgIGNsYXNzOiAnYW50LWxpc3QtZ3JpZCdcbiAgfVxufSlcbmV4cG9ydCBjbGFzcyBOekxpc3RHcmlkRGlyZWN0aXZlIHt9XG4iXX0=