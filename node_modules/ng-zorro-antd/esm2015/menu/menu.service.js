/**
 * @fileoverview added by tsickle
 * Generated from: menu.service.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE
 */
import { Injectable } from '@angular/core';
import { BehaviorSubject, Subject } from 'rxjs';
import * as ɵngcc0 from '@angular/core';
export class MenuService {
    constructor() {
        /**
         * all descendant menu click *
         */
        this.descendantMenuItemClick$ = new Subject();
        /**
         * child menu item click *
         */
        this.childMenuItemClick$ = new Subject();
        this.theme$ = new BehaviorSubject('light');
        this.mode$ = new BehaviorSubject('vertical');
        this.inlineIndent$ = new BehaviorSubject(24);
        this.isChildSubMenuOpen$ = new BehaviorSubject(false);
    }
    /**
     * @param {?} menu
     * @return {?}
     */
    onDescendantMenuItemClick(menu) {
        this.descendantMenuItemClick$.next(menu);
    }
    /**
     * @param {?} menu
     * @return {?}
     */
    onChildMenuItemClick(menu) {
        this.childMenuItemClick$.next(menu);
    }
    /**
     * @param {?} mode
     * @return {?}
     */
    setMode(mode) {
        this.mode$.next(mode);
    }
    /**
     * @param {?} theme
     * @return {?}
     */
    setTheme(theme) {
        this.theme$.next(theme);
    }
    /**
     * @param {?} indent
     * @return {?}
     */
    setInlineIndent(indent) {
        this.inlineIndent$.next(indent);
    }
}
MenuService.ɵfac = function MenuService_Factory(t) { return new (t || MenuService)(); };
MenuService.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: MenuService, factory: MenuService.ɵfac });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MenuService, [{
        type: Injectable
    }], function () { return []; }, null); })();
if (false) {
    /**
     * all descendant menu click *
     * @type {?}
     */
    MenuService.prototype.descendantMenuItemClick$;
    /**
     * child menu item click *
     * @type {?}
     */
    MenuService.prototype.childMenuItemClick$;
    /** @type {?} */
    MenuService.prototype.theme$;
    /** @type {?} */
    MenuService.prototype.mode$;
    /** @type {?} */
    MenuService.prototype.inlineIndent$;
    /** @type {?} */
    MenuService.prototype.isChildSubMenuOpen$;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWVudS5zZXJ2aWNlLmpzIiwic291cmNlcyI6WyJuZy16b3Jyby1hbnRkL21lbnUvbWVudS5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUtBLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFM0MsT0FBTyxFQUFFLGVBQWUsRUFBRSxPQUFPLEVBQUUsTUFBTSxNQUFNLENBQUM7O0FBSWhELE1BQU0sT0FBTyxXQUFXO0FBQ3hCLElBRkE7QUFDRTtBQUFZO0FBQ1k7QUFDeEIsUUFBQSw2QkFBd0IsR0FBRyxJQUFJLE9BQU8sRUFBYSxDQUFDO0FBQ3REO0FBQVk7QUFDRztBQUFZLFFBQXpCLHdCQUFtQixHQUFHLElBQUksT0FBTyxFQUFhLENBQUM7QUFDakQsUUFBRSxXQUFNLEdBQUcsSUFBSSxlQUFlLENBQWtCLE9BQU8sQ0FBQyxDQUFDO0FBQ3pELFFBQUUsVUFBSyxHQUFHLElBQUksZUFBZSxDQUFpQixVQUFVLENBQUMsQ0FBQztBQUMxRCxRQUFFLGtCQUFhLEdBQUcsSUFBSSxlQUFlLENBQVMsRUFBRSxDQUFDLENBQUM7QUFDbEQsUUFBRSx3QkFBbUIsR0FBRyxJQUFJLGVBQWUsQ0FBVSxLQUFLLENBQUMsQ0FBQztBQUM1RCxJQW9CQSxDQUFDO0FBQ0Q7QUFBUTtBQUF1QjtBQUFtQjtBQUFRLElBcEJ4RCx5QkFBeUIsQ0FBQyxJQUFlO0FBQUksUUFDM0MsSUFBSSxDQUFDLHdCQUF3QixDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztBQUM3QyxJQUFFLENBQUM7QUFDSDtBQUNPO0FBQXVCO0FBQzdCO0FBQVEsSUFEUCxvQkFBb0IsQ0FBQyxJQUFlO0FBQUksUUFDdEMsSUFBSSxDQUFDLG1CQUFtQixDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztBQUN4QyxJQUFFLENBQUM7QUFDSDtBQUNPO0FBQXVCO0FBQ3JCO0FBQVEsSUFEZixPQUFPLENBQUMsSUFBb0I7QUFBSSxRQUM5QixJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztBQUMxQixJQUFFLENBQUM7QUFDSDtBQUNPO0FBQXdCO0FBQ3hCO0FBQVEsSUFEYixRQUFRLENBQUMsS0FBc0I7QUFBSSxRQUNqQyxJQUFJLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztBQUM1QixJQUFFLENBQUM7QUFDSDtBQUNPO0FBQXlCO0FBQ3ZCO0FBQVEsSUFEZixlQUFlLENBQUMsTUFBYztBQUFJLFFBQ2hDLElBQUksQ0FBQyxhQUFhLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO0FBQ3BDLElBQUUsQ0FBQztBQUNIO3VDQTlCQyxVQUFVOzs7O2dEQUNUO0FBQUM7QUFBYTtBQUFRO0FBQ1E7QUFDbkI7QUFBUSxJQUFuQiwrQ0FBb0Q7QUFDdEQ7QUFBUTtBQUNEO0FBQWlCO0FBQVEsSUFBOUIsMENBQStDO0FBQ2pEO0FBQXFCLElBQW5CLDZCQUF1RDtBQUN6RDtBQUFxQixJQUFuQiw0QkFBd0Q7QUFDMUQ7QUFBcUIsSUFBbkIsb0NBQWdEO0FBQ2xEO0FBQXFCLElBQW5CLDBDQUEwRDtBQUM1RDtBQUNDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBVc2Ugb2YgdGhpcyBzb3VyY2UgY29kZSBpcyBnb3Zlcm5lZCBieSBhbiBNSVQtc3R5bGUgbGljZW5zZSB0aGF0IGNhbiBiZVxuICogZm91bmQgaW4gdGhlIExJQ0VOU0UgZmlsZSBhdCBodHRwczovL2dpdGh1Yi5jb20vTkctWk9SUk8vbmctem9ycm8tYW50ZC9ibG9iL21hc3Rlci9MSUNFTlNFXG4gKi9cblxuaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgTnpTYWZlQW55IH0gZnJvbSAnbmctem9ycm8tYW50ZC9jb3JlL3R5cGVzJztcbmltcG9ydCB7IEJlaGF2aW9yU3ViamVjdCwgU3ViamVjdCB9IGZyb20gJ3J4anMnO1xuaW1wb3J0IHsgTnpNZW51TW9kZVR5cGUsIE56TWVudVRoZW1lVHlwZSB9IGZyb20gJy4vbWVudS50eXBlcyc7XG5cbkBJbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBNZW51U2VydmljZSB7XG4gIC8qKiBhbGwgZGVzY2VuZGFudCBtZW51IGNsaWNrICoqL1xuICBkZXNjZW5kYW50TWVudUl0ZW1DbGljayQgPSBuZXcgU3ViamVjdDxOelNhZmVBbnk+KCk7XG4gIC8qKiBjaGlsZCBtZW51IGl0ZW0gY2xpY2sgKiovXG4gIGNoaWxkTWVudUl0ZW1DbGljayQgPSBuZXcgU3ViamVjdDxOelNhZmVBbnk+KCk7XG4gIHRoZW1lJCA9IG5ldyBCZWhhdmlvclN1YmplY3Q8TnpNZW51VGhlbWVUeXBlPignbGlnaHQnKTtcbiAgbW9kZSQgPSBuZXcgQmVoYXZpb3JTdWJqZWN0PE56TWVudU1vZGVUeXBlPigndmVydGljYWwnKTtcbiAgaW5saW5lSW5kZW50JCA9IG5ldyBCZWhhdmlvclN1YmplY3Q8bnVtYmVyPigyNCk7XG4gIGlzQ2hpbGRTdWJNZW51T3BlbiQgPSBuZXcgQmVoYXZpb3JTdWJqZWN0PGJvb2xlYW4+KGZhbHNlKTtcblxuICBvbkRlc2NlbmRhbnRNZW51SXRlbUNsaWNrKG1lbnU6IE56U2FmZUFueSk6IHZvaWQge1xuICAgIHRoaXMuZGVzY2VuZGFudE1lbnVJdGVtQ2xpY2skLm5leHQobWVudSk7XG4gIH1cblxuICBvbkNoaWxkTWVudUl0ZW1DbGljayhtZW51OiBOelNhZmVBbnkpOiB2b2lkIHtcbiAgICB0aGlzLmNoaWxkTWVudUl0ZW1DbGljayQubmV4dChtZW51KTtcbiAgfVxuXG4gIHNldE1vZGUobW9kZTogTnpNZW51TW9kZVR5cGUpOiB2b2lkIHtcbiAgICB0aGlzLm1vZGUkLm5leHQobW9kZSk7XG4gIH1cblxuICBzZXRUaGVtZSh0aGVtZTogTnpNZW51VGhlbWVUeXBlKTogdm9pZCB7XG4gICAgdGhpcy50aGVtZSQubmV4dCh0aGVtZSk7XG4gIH1cblxuICBzZXRJbmxpbmVJbmRlbnQoaW5kZW50OiBudW1iZXIpOiB2b2lkIHtcbiAgICB0aGlzLmlubGluZUluZGVudCQubmV4dChpbmRlbnQpO1xuICB9XG59XG4iXX0=