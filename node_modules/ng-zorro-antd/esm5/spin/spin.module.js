/**
 * @fileoverview added by tsickle
 * Generated from: spin.module.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE
 */
import { ObserversModule } from '@angular/cdk/observers';
import { CommonModule } from '@angular/common';
import { NgModule } from '@angular/core';
import { NzSpinComponent } from './spin.component';
import * as ɵngcc0 from '@angular/core';
var NzSpinModule = /** @class */ (function () {
    function NzSpinModule() {
    }
NzSpinModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: NzSpinModule });
NzSpinModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function NzSpinModule_Factory(t) { return new (t || NzSpinModule)(); }, imports: [[CommonModule, ObserversModule]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NzSpinModule, { declarations: function () { return [NzSpinComponent]; }, imports: function () { return [CommonModule, ObserversModule]; }, exports: function () { return [NzSpinComponent]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NzSpinModule, [{
        type: NgModule,
        args: [{
                exports: [NzSpinComponent],
                declarations: [NzSpinComponent],
                imports: [CommonModule, ObserversModule]
            }]
    }], function () { return []; }, null); })();
    return NzSpinModule;
}());
export { NzSpinModule };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3Bpbi5tb2R1bGUuanMiLCJzb3VyY2VzIjpbIm5nLXpvcnJvLWFudGQvc3Bpbi9zcGluLm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFLQSxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sd0JBQXdCLENBQUM7QUFDekQsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQy9DLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFekMsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLGtCQUFrQixDQUFDOztBQUVuRDtBQUVNLElBRk47QUFDYyxJQUlhLENBQUM7Z0RBTDNCLFFBQVEsU0FBQztrQkFDUixPQUFPLEVBQUUsQ0FBQyxlQUFlLENBQUMsc0JBQzFCLFlBQVksRUFBRSxDQUFDLGVBQWUsQ0FBQyxzQkFDL0IsT0FBTyxFQUFFLENBQUMsWUFBWSxFQUFFLGVBQWUsQ0FBQztHQUN6Qzs7Ozs7Ozs7Z0RBQ1E7QUFBQyxJQUFpQixtQkFBQztBQUMzQixDQUQyQixBQUw1QixJQUs0QjtBQUM1QixTQURhLFlBQVk7QUFDekIiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFVzZSBvZiB0aGlzIHNvdXJjZSBjb2RlIGlzIGdvdmVybmVkIGJ5IGFuIE1JVC1zdHlsZSBsaWNlbnNlIHRoYXQgY2FuIGJlXG4gKiBmb3VuZCBpbiB0aGUgTElDRU5TRSBmaWxlIGF0IGh0dHBzOi8vZ2l0aHViLmNvbS9ORy1aT1JSTy9uZy16b3Jyby1hbnRkL2Jsb2IvbWFzdGVyL0xJQ0VOU0VcbiAqL1xuXG5pbXBvcnQgeyBPYnNlcnZlcnNNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jZGsvb2JzZXJ2ZXJzJztcbmltcG9ydCB7IENvbW1vbk1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XG5pbXBvcnQgeyBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5pbXBvcnQgeyBOelNwaW5Db21wb25lbnQgfSBmcm9tICcuL3NwaW4uY29tcG9uZW50JztcblxuQE5nTW9kdWxlKHtcbiAgZXhwb3J0czogW056U3BpbkNvbXBvbmVudF0sXG4gIGRlY2xhcmF0aW9uczogW056U3BpbkNvbXBvbmVudF0sXG4gIGltcG9ydHM6IFtDb21tb25Nb2R1bGUsIE9ic2VydmVyc01vZHVsZV1cbn0pXG5leHBvcnQgY2xhc3MgTnpTcGluTW9kdWxlIHt9XG4iXX0=