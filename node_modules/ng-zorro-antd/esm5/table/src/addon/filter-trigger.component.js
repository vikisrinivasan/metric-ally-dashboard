/**
 * @fileoverview added by tsickle
 * Generated from: src/addon/filter-trigger.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE
 */
import { ChangeDetectionStrategy, ChangeDetectorRef, Component, EventEmitter, Input, Output, ViewEncapsulation } from '@angular/core';
import { NzDropdownMenuComponent } from 'ng-zorro-antd/dropdown';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from 'ng-zorro-antd/dropdown';

var _c0 = ["*"];
var NzFilterTriggerComponent = /** @class */ (function () {
    function NzFilterTriggerComponent(cdr) {
        this.cdr = cdr;
        this.nzActive = false;
        this.nzVisible = false;
        this.nzVisibleChange = new EventEmitter();
    }
    /**
     * @param {?} visible
     * @return {?}
     */
    NzFilterTriggerComponent.prototype.onVisibleChange = /**
     * @param {?} visible
     * @return {?}
     */
    function (visible) {
        this.nzVisible = visible;
        this.nzVisibleChange.next(visible);
    };
    /**
     * @param {?} $event
     * @return {?}
     */
    NzFilterTriggerComponent.prototype.onFilterClick = /**
     * @param {?} $event
     * @return {?}
     */
    function ($event) {
        $event.stopPropagation();
    };
    /**
     * @return {?}
     */
    NzFilterTriggerComponent.prototype.hide = /**
     * @return {?}
     */
    function () {
        this.nzVisible = false;
        this.cdr.markForCheck();
    };
    /**
     * @return {?}
     */
    NzFilterTriggerComponent.prototype.show = /**
     * @return {?}
     */
    function () {
        this.nzVisible = true;
        this.cdr.markForCheck();
    };
    /** @nocollapse */
    NzFilterTriggerComponent.ctorParameters = function () { return [
        { type: ChangeDetectorRef }
    ]; };
    NzFilterTriggerComponent.propDecorators = {
        nzActive: [{ type: Input }],
        nzDropdownMenu: [{ type: Input }],
        nzVisible: [{ type: Input }],
        nzVisibleChange: [{ type: Output }]
    };
NzFilterTriggerComponent.ɵfac = function NzFilterTriggerComponent_Factory(t) { return new (t || NzFilterTriggerComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };
NzFilterTriggerComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: NzFilterTriggerComponent, selectors: [["nz-filter-trigger"]], hostVars: 4, hostBindings: function NzFilterTriggerComponent_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵclassProp("ant-table-filter-trigger-container", true)("ant-table-filter-trigger-container-open", ctx.nzVisible);
    } }, inputs: { nzActive: "nzActive", nzVisible: "nzVisible", nzDropdownMenu: "nzDropdownMenu" }, outputs: { nzVisibleChange: "nzVisibleChange" }, exportAs: ["nzFilterTrigger"], ngContentSelectors: _c0, decls: 2, vars: 7, consts: [["nz-dropdown", "", "nzTrigger", "click", "nzPlacement", "bottomRight", 1, "ant-table-filter-trigger", 3, "nzClickHide", "nzDropdownMenu", "nzVisible", "nzVisibleChange", "click"]], template: function NzFilterTriggerComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵelementStart(0, "span", 0);
        ɵngcc0.ɵɵlistener("nzVisibleChange", function NzFilterTriggerComponent_Template_span_nzVisibleChange_0_listener($event) { return ctx.onVisibleChange($event); })("click", function NzFilterTriggerComponent_Template_span_click_0_listener($event) { return ctx.onFilterClick($event); });
        ɵngcc0.ɵɵprojection(1);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵclassProp("active", ctx.nzActive)("ant-table-filter-open", ctx.nzVisible);
        ɵngcc0.ɵɵproperty("nzClickHide", false)("nzDropdownMenu", ctx.nzDropdownMenu)("nzVisible", ctx.nzVisible);
    } }, directives: [ɵngcc1.NzDropDownDirective], encapsulation: 2, changeDetection: 0 });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NzFilterTriggerComponent, [{
        type: Component,
        args: [{
                selector: 'nz-filter-trigger',
                exportAs: "nzFilterTrigger",
                changeDetection: ChangeDetectionStrategy.OnPush,
                preserveWhitespaces: false,
                encapsulation: ViewEncapsulation.None,
                template: "\n    <span\n      nz-dropdown\n      class=\"ant-table-filter-trigger\"\n      nzTrigger=\"click\"\n      nzPlacement=\"bottomRight\"\n      [nzClickHide]=\"false\"\n      [nzDropdownMenu]=\"nzDropdownMenu\"\n      [class.active]=\"nzActive\"\n      [class.ant-table-filter-open]=\"nzVisible\"\n      [nzVisible]=\"nzVisible\"\n      (nzVisibleChange)=\"onVisibleChange($event)\"\n      (click)=\"onFilterClick($event)\"\n    >\n      <ng-content></ng-content>\n    </span>\n  ",
                host: {
                    '[class.ant-table-filter-trigger-container]': 'true',
                    '[class.ant-table-filter-trigger-container-open]': 'nzVisible'
                }
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }]; }, { nzActive: [{
            type: Input
        }], nzVisible: [{
            type: Input
        }], nzVisibleChange: [{
            type: Output
        }], nzDropdownMenu: [{
            type: Input
        }] }); })();
    return NzFilterTriggerComponent;
}());
export { NzFilterTriggerComponent };
if (false) {
    /** @type {?} */
    NzFilterTriggerComponent.prototype.nzActive;
    /** @type {?} */
    NzFilterTriggerComponent.prototype.nzDropdownMenu;
    /** @type {?} */
    NzFilterTriggerComponent.prototype.nzVisible;
    /** @type {?} */
    NzFilterTriggerComponent.prototype.nzVisibleChange;
    /**
     * @type {?}
     * @private
     */
    NzFilterTriggerComponent.prototype.cdr;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmlsdGVyLXRyaWdnZXIuY29tcG9uZW50LmpzIiwic291cmNlcyI6WyJuZy16b3Jyby1hbnRkL3RhYmxlL3NyYy9hZGRvbi9maWx0ZXItdHJpZ2dlci5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBS0EsT0FBTyxFQUFFLHVCQUF1QixFQUFFLGlCQUFpQixFQUFFLFNBQVMsRUFBRSxZQUFZLEVBQUUsS0FBSyxFQUFFLE1BQU0sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUN0SSxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsTUFBTSx3QkFBd0IsQ0FBQzs7Ozs7QUFFakU7QUFFYyxJQThDWixrQ0FBb0IsR0FBc0I7QUFBSSxRQUExQixRQUFHLEdBQUgsR0FBRyxDQUFtQjtBQUFDLFFBbkJsQyxhQUFRLEdBQUcsS0FBSyxDQUFDO0FBQzVCLFFBQ1csY0FBUyxHQUFHLEtBQUssQ0FBQztBQUM3QixRQUFxQixvQkFBZSxHQUFHLElBQUksWUFBWSxFQUFXLENBQUM7QUFDbkUsSUFlK0MsQ0FBQztBQUNoRDtBQUNNO0FBQTBCO0FBQW1CO0FBQVEsSUFqQnpELGtEQUFlO0FBQU87QUFDbEI7QUFBbUI7QUFDdEIsSUFGRCxVQUFnQixPQUFnQjtBQUFJLFFBQ2xDLElBQUksQ0FBQyxTQUFTLEdBQUcsT0FBTyxDQUFDO0FBQzdCLFFBQUksSUFBSSxDQUFDLGVBQWUsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUM7QUFDdkMsSUFBRSxDQUFDO0FBQ0Y7QUFBUTtBQUF5QjtBQUN6QjtBQUFRLElBRGYsZ0RBQWE7QUFBTztBQUNuQjtBQUFtQjtBQUN0QixJQUZFLFVBQWMsTUFBa0I7QUFBSSxRQUNsQyxNQUFNLENBQUMsZUFBZSxFQUFFLENBQUM7QUFDN0IsSUFBRSxDQUFDO0FBQ0Y7QUFBUTtBQUNFO0FBQVEsSUFEakIsdUNBQUk7QUFBTztBQUNFO0FBQVEsSUFEckI7QUFBYyxRQUNaLElBQUksQ0FBQyxTQUFTLEdBQUcsS0FBSyxDQUFDO0FBQzNCLFFBQUksSUFBSSxDQUFDLEdBQUcsQ0FBQyxZQUFZLEVBQUUsQ0FBQztBQUM1QixJQUFFLENBQUM7QUFDRjtBQUFRO0FBQ0U7QUFBUSxJQURqQix1Q0FBSTtBQUFPO0FBQ0U7QUFBUSxJQURyQjtBQUFjLFFBQ1osSUFBSSxDQUFDLFNBQVMsR0FBRyxJQUFJLENBQUM7QUFDMUIsUUFBSSxJQUFJLENBQUMsR0FBRyxDQUFDLFlBQVksRUFBRSxDQUFDO0FBQzVCLElBQUUsQ0FBQyxDQW5CSztBQUFDO3FDQTVCUixTQUFTLFNBQUMsdkRBNEJxQjtRQTNCOUIsUUFBUSxFQUFFLGxCQTZCb0IsZ0JBakNFLGlCQUFpQjtDQUlwQixEQUp1QjthQUtwRCxRQUFRLEVBQUUsaUJBQWlCLHhDQUxtQztjQU05RCxlQUFlLEVBQUUsL0JBTjZGLDJCQWdDN0csS0FBSztpQkExQmtDLENBQUMsTUFBTSx4QkEwQnBDLGlDQUNWLEtBQUs7R0ExQk4sbUJBQW1CLEVBQUUsS0FBSyw3QkEwQmYsNEJBQ1YsS0FBSzthQTFCTixhQUFhLEVBQUUsNUJBMEJKLGtDQUNWLE1BQU07Q0EzQnlCLENBQUMsSUFBSSxOQTJCMUI7cUJBMUJYLFFBQVEsRUFBRTs7MkdBZ0JULHNCQUNEO0dBQUksRUFBRSwwQkFDSiw0Q0FBNEMsRUFBRSxNQUFNLDBCQUNwRCxpREFBaUQsRUFBRSxXQUFXLHNCQUMvRCxrQkFDRjs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7b0JBS2tCO0FBQUMsSUFpQnBCLCtCQUFDO0FBQ0EsQ0FEQSxBQWpERCxJQWlEQztBQUNELFNBdEJhLHdCQUF3QjtBQUNwQztBQUFhO0FBQ1IsSUFESiw0Q0FBMEI7QUFDNUI7QUFBcUIsSUFBbkIsa0RBQWtEO0FBQ3BEO0FBQXFCLElBQW5CLDZDQUEyQjtBQUM3QjtBQUFxQixJQUFuQixtREFBaUU7QUFDbkU7QUFBUTtBQUFpQjtBQUFnQjtBQUNwQyxJQWNTLHVDQUE4QjtBQUFDO0FBQUUiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFVzZSBvZiB0aGlzIHNvdXJjZSBjb2RlIGlzIGdvdmVybmVkIGJ5IGFuIE1JVC1zdHlsZSBsaWNlbnNlIHRoYXQgY2FuIGJlXG4gKiBmb3VuZCBpbiB0aGUgTElDRU5TRSBmaWxlIGF0IGh0dHBzOi8vZ2l0aHViLmNvbS9ORy1aT1JSTy9uZy16b3Jyby1hbnRkL2Jsb2IvbWFzdGVyL0xJQ0VOU0VcbiAqL1xuXG5pbXBvcnQgeyBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneSwgQ2hhbmdlRGV0ZWN0b3JSZWYsIENvbXBvbmVudCwgRXZlbnRFbWl0dGVyLCBJbnB1dCwgT3V0cHV0LCBWaWV3RW5jYXBzdWxhdGlvbiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgTnpEcm9wZG93bk1lbnVDb21wb25lbnQgfSBmcm9tICduZy16b3Jyby1hbnRkL2Ryb3Bkb3duJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnbnotZmlsdGVyLXRyaWdnZXInLFxuICBleHBvcnRBczogYG56RmlsdGVyVHJpZ2dlcmAsXG4gIGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoLFxuICBwcmVzZXJ2ZVdoaXRlc3BhY2VzOiBmYWxzZSxcbiAgZW5jYXBzdWxhdGlvbjogVmlld0VuY2Fwc3VsYXRpb24uTm9uZSxcbiAgdGVtcGxhdGU6IGBcbiAgICA8c3BhblxuICAgICAgbnotZHJvcGRvd25cbiAgICAgIGNsYXNzPVwiYW50LXRhYmxlLWZpbHRlci10cmlnZ2VyXCJcbiAgICAgIG56VHJpZ2dlcj1cImNsaWNrXCJcbiAgICAgIG56UGxhY2VtZW50PVwiYm90dG9tUmlnaHRcIlxuICAgICAgW256Q2xpY2tIaWRlXT1cImZhbHNlXCJcbiAgICAgIFtuekRyb3Bkb3duTWVudV09XCJuekRyb3Bkb3duTWVudVwiXG4gICAgICBbY2xhc3MuYWN0aXZlXT1cIm56QWN0aXZlXCJcbiAgICAgIFtjbGFzcy5hbnQtdGFibGUtZmlsdGVyLW9wZW5dPVwibnpWaXNpYmxlXCJcbiAgICAgIFtuelZpc2libGVdPVwibnpWaXNpYmxlXCJcbiAgICAgIChuelZpc2libGVDaGFuZ2UpPVwib25WaXNpYmxlQ2hhbmdlKCRldmVudClcIlxuICAgICAgKGNsaWNrKT1cIm9uRmlsdGVyQ2xpY2soJGV2ZW50KVwiXG4gICAgPlxuICAgICAgPG5nLWNvbnRlbnQ+PC9uZy1jb250ZW50PlxuICAgIDwvc3Bhbj5cbiAgYCxcbiAgaG9zdDoge1xuICAgICdbY2xhc3MuYW50LXRhYmxlLWZpbHRlci10cmlnZ2VyLWNvbnRhaW5lcl0nOiAndHJ1ZScsXG4gICAgJ1tjbGFzcy5hbnQtdGFibGUtZmlsdGVyLXRyaWdnZXItY29udGFpbmVyLW9wZW5dJzogJ256VmlzaWJsZSdcbiAgfVxufSlcbmV4cG9ydCBjbGFzcyBOekZpbHRlclRyaWdnZXJDb21wb25lbnQge1xuICBASW5wdXQoKSBuekFjdGl2ZSA9IGZhbHNlO1xuICBASW5wdXQoKSBuekRyb3Bkb3duTWVudSE6IE56RHJvcGRvd25NZW51Q29tcG9uZW50O1xuICBASW5wdXQoKSBuelZpc2libGUgPSBmYWxzZTtcbiAgQE91dHB1dCgpIHJlYWRvbmx5IG56VmlzaWJsZUNoYW5nZSA9IG5ldyBFdmVudEVtaXR0ZXI8Ym9vbGVhbj4oKTtcbiAgb25WaXNpYmxlQ2hhbmdlKHZpc2libGU6IGJvb2xlYW4pOiB2b2lkIHtcbiAgICB0aGlzLm56VmlzaWJsZSA9IHZpc2libGU7XG4gICAgdGhpcy5uelZpc2libGVDaGFuZ2UubmV4dCh2aXNpYmxlKTtcbiAgfVxuICBvbkZpbHRlckNsaWNrKCRldmVudDogTW91c2VFdmVudCk6IHZvaWQge1xuICAgICRldmVudC5zdG9wUHJvcGFnYXRpb24oKTtcbiAgfVxuICBoaWRlKCk6IHZvaWQge1xuICAgIHRoaXMubnpWaXNpYmxlID0gZmFsc2U7XG4gICAgdGhpcy5jZHIubWFya0ZvckNoZWNrKCk7XG4gIH1cbiAgc2hvdygpOiB2b2lkIHtcbiAgICB0aGlzLm56VmlzaWJsZSA9IHRydWU7XG4gICAgdGhpcy5jZHIubWFya0ZvckNoZWNrKCk7XG4gIH1cbiAgY29uc3RydWN0b3IocHJpdmF0ZSBjZHI6IENoYW5nZURldGVjdG9yUmVmKSB7fVxufVxuIl19