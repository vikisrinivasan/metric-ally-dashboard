/**
 * @fileoverview added by tsickle
 * Generated from: year-picker.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE
 */
import { Directive, Host, Optional } from '@angular/core';
import { NzDatePickerComponent } from './date-picker.component';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from './date-picker.component';
var NzYearPickerComponent = /** @class */ (function () {
    function NzYearPickerComponent(datePicker) {
        this.datePicker = datePicker;
        this.datePicker.nzMode = 'year';
        this.datePicker.nzFormat = 'yyyy';
    }
    /** @nocollapse */
    NzYearPickerComponent.ctorParameters = function () { return [
        { type: NzDatePickerComponent, decorators: [{ type: Optional }, { type: Host }] }
    ]; };
NzYearPickerComponent.ɵfac = function NzYearPickerComponent_Factory(t) { return new (t || NzYearPickerComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.NzDatePickerComponent, 9)); };
NzYearPickerComponent.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: NzYearPickerComponent, selectors: [["nz-year-picker"]], exportAs: ["nzYearPicker"] });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NzYearPickerComponent, [{
        type: Directive,
        args: [{
                selector: 'nz-year-picker',
                exportAs: 'nzYearPicker'
            }]
    }], function () { return [{ type: ɵngcc1.NzDatePickerComponent, decorators: [{
                type: Optional
            }, {
                type: Host
            }] }]; }, null); })();
    return NzYearPickerComponent;
}());
export { NzYearPickerComponent };
if (false) {
    /** @type {?} */
    NzYearPickerComponent.prototype.datePicker;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoieWVhci1waWNrZXIuY29tcG9uZW50LmpzIiwic291cmNlcyI6WyJuZy16b3Jyby1hbnRkL2RhdGUtcGlja2VyL3llYXItcGlja2VyLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFLQSxPQUFPLEVBQUUsU0FBUyxFQUFFLElBQUksRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDMUQsT0FBTyxFQUFFLHFCQUFxQixFQUFFLE1BQU0seUJBQXlCLENBQUM7OztBQUVoRTtBQUVjLElBSVosK0JBQXVDLFVBQWlDO0FBQzFFLFFBRHlDLGVBQVUsR0FBVixVQUFVLENBQXVCO0FBQUMsUUFDdkUsSUFBSSxDQUFDLFVBQVUsQ0FBQyxNQUFNLEdBQUcsTUFBTSxDQUFDO0FBQ3BDLFFBQUksSUFBSSxDQUFDLFVBQVUsQ0FBQyxRQUFRLEdBQUcsTUFBTSxDQUFDO0FBQ3RDLElBQUUsQ0FBQyxBQUxNO0FBQUM7a0NBSlQsU0FBUyxTQUFDLHBEQUlzQjtRQUgvQixRQUFRLEVBQUUsZ0JBQWdCLHNCQUMxQixRQUFRLEVBQUUsY0FBYyxoRkFJZixnQkFSRixxQkFBcUIsdUJBUWYsUUFBUSxZQUFJLElBQUk7UUFIOUIsUkFHb0M7Ozs7Ozs7Ozs7Ozs7a0NBQVM7QUFBQyxJQUkvQyw0QkFBQztBQUNBLENBREEsQUFWRCxJQVVDO0FBQ0QsU0FOYSxxQkFBcUI7QUFDakM7QUFBYTtBQUFxQixJQUFyQiwyQ0FBNEQ7QUFBQztBQUFFIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBVc2Ugb2YgdGhpcyBzb3VyY2UgY29kZSBpcyBnb3Zlcm5lZCBieSBhbiBNSVQtc3R5bGUgbGljZW5zZSB0aGF0IGNhbiBiZVxuICogZm91bmQgaW4gdGhlIExJQ0VOU0UgZmlsZSBhdCBodHRwczovL2dpdGh1Yi5jb20vTkctWk9SUk8vbmctem9ycm8tYW50ZC9ibG9iL21hc3Rlci9MSUNFTlNFXG4gKi9cblxuaW1wb3J0IHsgRGlyZWN0aXZlLCBIb3N0LCBPcHRpb25hbCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgTnpEYXRlUGlja2VyQ29tcG9uZW50IH0gZnJvbSAnLi9kYXRlLXBpY2tlci5jb21wb25lbnQnO1xuXG5ARGlyZWN0aXZlKHtcbiAgc2VsZWN0b3I6ICduei15ZWFyLXBpY2tlcicsXG4gIGV4cG9ydEFzOiAnbnpZZWFyUGlja2VyJ1xufSlcbi8vIHRzbGludDpkaXNhYmxlLW5leHQtbGluZTpkaXJlY3RpdmUtY2xhc3Mtc3VmZml4XG5leHBvcnQgY2xhc3MgTnpZZWFyUGlja2VyQ29tcG9uZW50IHtcbiAgY29uc3RydWN0b3IoQE9wdGlvbmFsKCkgQEhvc3QoKSBwdWJsaWMgZGF0ZVBpY2tlcjogTnpEYXRlUGlja2VyQ29tcG9uZW50KSB7XG4gICAgdGhpcy5kYXRlUGlja2VyLm56TW9kZSA9ICd5ZWFyJztcbiAgICB0aGlzLmRhdGVQaWNrZXIubnpGb3JtYXQgPSAneXl5eSc7XG4gIH1cbn1cbiJdfQ==