/**
 * @fileoverview added by tsickle
 * Generated from: step.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { __decorate, __metadata } from "tslib";
/**
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE
 */
import { ChangeDetectionStrategy, Component, Input, ViewEncapsulation } from '@angular/core';
import { InputBoolean } from 'ng-zorro-antd/core/util';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';

function NzSliderStepComponent_span_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "span", 2);
} if (rf & 2) {
    var mark_r1 = ctx.$implicit;
    ɵngcc0.ɵɵclassProp("ant-slider-dot-active", mark_r1.active);
    ɵngcc0.ɵɵproperty("ngStyle", mark_r1.style);
} }
var NzSliderStepComponent = /** @class */ (function () {
    function NzSliderStepComponent() {
        this.lowerBound = null;
        this.upperBound = null;
        this.marksArray = [];
        this.vertical = false;
        this.included = false;
        this.steps = [];
    }
    /**
     * @param {?} changes
     * @return {?}
     */
    NzSliderStepComponent.prototype.ngOnChanges = /**
     * @param {?} changes
     * @return {?}
     */
    function (changes) {
        if (changes.marksArray) {
            this.buildSteps();
        }
        if (changes.marksArray || changes.lowerBound || changes.upperBound) {
            this.togglePointActive();
        }
    };
    /**
     * @param {?} _index
     * @param {?} step
     * @return {?}
     */
    NzSliderStepComponent.prototype.trackById = /**
     * @param {?} _index
     * @param {?} step
     * @return {?}
     */
    function (_index, step) {
        return step.value;
    };
    /**
     * @private
     * @return {?}
     */
    NzSliderStepComponent.prototype.buildSteps = /**
     * @private
     * @return {?}
     */
    function () {
        /** @type {?} */
        var orient = this.vertical ? 'bottom' : 'left';
        this.steps = this.marksArray.map((/**
         * @param {?} mark
         * @return {?}
         */
        function (mark) {
            var _a;
            var value = mark.value, offset = mark.offset, config = mark.config;
            return {
                value: value,
                offset: offset,
                config: config,
                active: false,
                style: (_a = {},
                    _a[orient] = offset + "%",
                    _a)
            };
        }));
    };
    /**
     * @private
     * @return {?}
     */
    NzSliderStepComponent.prototype.togglePointActive = /**
     * @private
     * @return {?}
     */
    function () {
        var _this = this;
        if (this.steps && this.lowerBound !== null && this.upperBound !== null) {
            this.steps.forEach((/**
             * @param {?} step
             * @return {?}
             */
            function (step) {
                /** @type {?} */
                var value = step.value;
                /** @type {?} */
                var isActive = (!_this.included && value === _this.upperBound) || (_this.included && value <= (/** @type {?} */ (_this.upperBound)) && value >= (/** @type {?} */ (_this.lowerBound)));
                step.active = isActive;
            }));
        }
    };
    NzSliderStepComponent.propDecorators = {
        lowerBound: [{ type: Input }],
        upperBound: [{ type: Input }],
        marksArray: [{ type: Input }],
        vertical: [{ type: Input }],
        included: [{ type: Input }]
    };
    __decorate([
        InputBoolean(),
        __metadata("design:type", Object)
    ], NzSliderStepComponent.prototype, "vertical", void 0);
    __decorate([
        InputBoolean(),
        __metadata("design:type", Object)
    ], NzSliderStepComponent.prototype, "included", void 0);
NzSliderStepComponent.ɵfac = function NzSliderStepComponent_Factory(t) { return new (t || NzSliderStepComponent)(); };
NzSliderStepComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: NzSliderStepComponent, selectors: [["nz-slider-step"]], inputs: { lowerBound: "lowerBound", upperBound: "upperBound", marksArray: "marksArray", vertical: "vertical", included: "included" }, exportAs: ["nzSliderStep"], features: [ɵngcc0.ɵɵNgOnChangesFeature], decls: 2, vars: 2, consts: [[1, "ant-slider-step"], ["class", "ant-slider-dot", 3, "ant-slider-dot-active", "ngStyle", 4, "ngFor", "ngForOf", "ngForTrackBy"], [1, "ant-slider-dot", 3, "ngStyle"]], template: function NzSliderStepComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵtemplate(1, NzSliderStepComponent_span_1_Template, 1, 3, "span", 1);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngForOf", ctx.steps)("ngForTrackBy", ctx.trackById);
    } }, directives: [ɵngcc1.NgForOf, ɵngcc1.NgStyle], encapsulation: 2, changeDetection: 0 });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NzSliderStepComponent, [{
        type: Component,
        args: [{
                changeDetection: ChangeDetectionStrategy.OnPush,
                encapsulation: ViewEncapsulation.None,
                selector: 'nz-slider-step',
                exportAs: 'nzSliderStep',
                preserveWhitespaces: false,
                template: "\n    <div class=\"ant-slider-step\">\n      <span\n        class=\"ant-slider-dot\"\n        *ngFor=\"let mark of steps; trackBy: trackById\"\n        [class.ant-slider-dot-active]=\"mark.active\"\n        [ngStyle]=\"mark.style!\"\n      >\n      </span>\n    </div>\n  "
            }]
    }], function () { return []; }, { lowerBound: [{
            type: Input
        }], upperBound: [{
            type: Input
        }], marksArray: [{
            type: Input
        }], vertical: [{
            type: Input
        }], included: [{
            type: Input
        }] }); })();
    return NzSliderStepComponent;
}());
export { NzSliderStepComponent };
if (false) {
    /** @type {?} */
    NzSliderStepComponent.ngAcceptInputType_vertical;
    /** @type {?} */
    NzSliderStepComponent.ngAcceptInputType_included;
    /** @type {?} */
    NzSliderStepComponent.prototype.lowerBound;
    /** @type {?} */
    NzSliderStepComponent.prototype.upperBound;
    /** @type {?} */
    NzSliderStepComponent.prototype.marksArray;
    /** @type {?} */
    NzSliderStepComponent.prototype.vertical;
    /** @type {?} */
    NzSliderStepComponent.prototype.included;
    /** @type {?} */
    NzSliderStepComponent.prototype.steps;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RlcC5jb21wb25lbnQuanMiLCJzb3VyY2VzIjpbIm5nLXpvcnJvLWFudGQvc2xpZGVyL3N0ZXAuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFLQSxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBNEIsaUJBQWlCLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFHdkgsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLHlCQUF5QixDQUFDOzs7Ozs7Ozs7OztBQUl2RDtBQUM0QyxJQUQ1QztBQUNzQixRQXFCWCxlQUFVLEdBQWtCLElBQUksQ0FBQztBQUM1QyxRQUFXLGVBQVUsR0FBa0IsSUFBSSxDQUFDO0FBQzVDLFFBQVcsZUFBVSxHQUFxQixFQUFFLENBQUM7QUFDN0MsUUFBMkIsYUFBUSxHQUFHLEtBQUssQ0FBQztBQUM1QyxRQUEyQixhQUFRLEdBQUcsS0FBSyxDQUFDO0FBQzVDLFFBQ0UsVUFBSyxHQUFzQixFQUFFLENBQUM7QUFDaEMsSUEwQ0EsQ0FBQztBQUNEO0FBQVE7QUFBMEI7QUFBbUI7QUFBUSxJQTFDM0QsMkNBQVc7QUFBTztBQUNwQjtBQUFtQjtBQUFRLElBRHpCLFVBQVksT0FBc0I7QUFBSSxRQUNwQyxJQUFJLE9BQU8sQ0FBQyxVQUFVLEVBQUU7QUFDNUIsWUFBTSxJQUFJLENBQUMsVUFBVSxFQUFFLENBQUM7QUFDeEIsU0FBSztBQUNMLFFBQUksSUFBSSxPQUFPLENBQUMsVUFBVSxJQUFJLE9BQU8sQ0FBQyxVQUFVLElBQUksT0FBTyxDQUFDLFVBQVUsRUFBRTtBQUN4RSxZQUFNLElBQUksQ0FBQyxpQkFBaUIsRUFBRSxDQUFDO0FBQy9CLFNBQUs7QUFDTCxJQUFFLENBQUM7QUFFSDtBQUFRO0FBQXlCO0FBQXVCO0FBQzFDO0FBQVEsSUFEcEIseUNBQVM7QUFBTztBQUF5QjtBQUN0QztBQUNKO0FBRUcsSUFKRixVQUFVLE1BQWMsRUFBRSxJQUFxQjtBQUFJLFFBQ2pELE9BQU8sSUFB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QUFDNUM7QUFDb0IsSUFBbEIsc0NBQThCO0FBQ2hDO0FBQ0MiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFVzZSBvZiB0aGlzIHNvdXJjZSBjb2RlIGlzIGdvdmVybmVkIGJ5IGFuIE1JVC1zdHlsZSBsaWNlbnNlIHRoYXQgY2FuIGJlXG4gKiBmb3VuZCBpbiB0aGUgTElDRU5TRSBmaWxlIGF0IGh0dHBzOi8vZ2l0aHViLmNvbS9ORy1aT1JSTy9uZy16b3Jyby1hbnRkL2Jsb2IvbWFzdGVyL0xJQ0VOU0VcbiAqL1xuXG5pbXBvcnQgeyBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneSwgQ29tcG9uZW50LCBJbnB1dCwgT25DaGFuZ2VzLCBTaW1wbGVDaGFuZ2VzLCBWaWV3RW5jYXBzdWxhdGlvbiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQm9vbGVhbklucHV0IH0gZnJvbSAnbmctem9ycm8tYW50ZC9jb3JlL3R5cGVzJztcblxuaW1wb3J0IHsgSW5wdXRCb29sZWFuIH0gZnJvbSAnbmctem9ycm8tYW50ZC9jb3JlL3V0aWwnO1xuXG5pbXBvcnQgeyBOekRpc3BsYXllZFN0ZXAsIE56RXh0ZW5kZWRNYXJrIH0gZnJvbSAnLi90eXBpbmdzJztcblxuQENvbXBvbmVudCh7XG4gIGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoLFxuICBlbmNhcHN1bGF0aW9uOiBWaWV3RW5jYXBzdWxhdGlvbi5Ob25lLFxuICBzZWxlY3RvcjogJ256LXNsaWRlci1zdGVwJyxcbiAgZXhwb3J0QXM6ICduelNsaWRlclN0ZXAnLFxuICBwcmVzZXJ2ZVdoaXRlc3BhY2VzOiBmYWxzZSxcbiAgdGVtcGxhdGU6IGBcbiAgICA8ZGl2IGNsYXNzPVwiYW50LXNsaWRlci1zdGVwXCI+XG4gICAgICA8c3BhblxuICAgICAgICBjbGFzcz1cImFudC1zbGlkZXItZG90XCJcbiAgICAgICAgKm5nRm9yPVwibGV0IG1hcmsgb2Ygc3RlcHM7IHRyYWNrQnk6IHRyYWNrQnlJZFwiXG4gICAgICAgIFtjbGFzcy5hbnQtc2xpZGVyLWRvdC1hY3RpdmVdPVwibWFyay5hY3RpdmVcIlxuICAgICAgICBbbmdTdHlsZV09XCJtYXJrLnN0eWxlIVwiXG4gICAgICA+XG4gICAgICA8L3NwYW4+XG4gICAgPC9kaXY+XG4gIGBcbn0pXG5leHBvcnQgY2xhc3MgTnpTbGlkZXJTdGVwQ29tcG9uZW50IGltcGxlbWVudHMgT25DaGFuZ2VzIHtcbiAgc3RhdGljIG5nQWNjZXB0SW5wdXRUeXBlX3ZlcnRpY2FsOiBCb29sZWFuSW5wdXQ7XG4gIHN0YXRpYyBuZ0FjY2VwdElucHV0VHlwZV9pbmNsdWRlZDogQm9vbGVhbklucHV0O1xuXG4gIEBJbnB1dCgpIGxvd2VyQm91bmQ6IG51bWJlciB8IG51bGwgPSBudWxsO1xuICBASW5wdXQoKSB1cHBlckJvdW5kOiBudW1iZXIgfCBudWxsID0gbnVsbDtcbiAgQElucHV0KCkgbWFya3NBcnJheTogTnpFeHRlbmRlZE1hcmtbXSA9IFtdO1xuICBASW5wdXQoKSBASW5wdXRCb29sZWFuKCkgdmVydGljYWwgPSBmYWxzZTtcbiAgQElucHV0KCkgQElucHV0Qm9vbGVhbigpIGluY2x1ZGVkID0gZmFsc2U7XG5cbiAgc3RlcHM6IE56RGlzcGxheWVkU3RlcFtdID0gW107XG5cbiAgbmdPbkNoYW5nZXMoY2hhbmdlczogU2ltcGxlQ2hhbmdlcyk6IHZvaWQge1xuICAgIGlmIChjaGFuZ2VzLm1hcmtzQXJyYXkpIHtcbiAgICAgIHRoaXMuYnVpbGRTdGVwcygpO1xuICAgIH1cbiAgICBpZiAoY2hhbmdlcy5tYXJrc0FycmF5IHx8IGNoYW5nZXMubG93ZXJCb3VuZCB8fCBjaGFuZ2VzLnVwcGVyQm91bmQpIHtcbiAgICAgIHRoaXMudG9nZ2xlUG9pbnRBY3RpdmUoKTtcbiAgICB9XG4gIH1cblxuICB0cmFja0J5SWQoX2luZGV4OiBudW1iZXIsIHN0ZXA6IE56RGlzcGxheWVkU3RlcCk6IG51bWJlciB7XG4gICAgcmV0dXJuIHN0ZXAudmFsdWU7XG4gIH1cblxuICBwcml2YXRlIGJ1aWxkU3RlcHMoKTogdm9pZCB7XG4gICAgY29uc3Qgb3JpZW50ID0gdGhpcy52ZXJ0aWNhbCA/ICdib3R0b20nIDogJ2xlZnQnO1xuXG4gICAgdGhpcy5zdGVwcyA9IHRoaXMubWFya3NBcnJheS5tYXAobWFyayA9PiB7XG4gICAgICBjb25zdCB7IHZhbHVlLCBvZmZzZXQsIGNvbmZpZyB9ID0gbWFyaztcblxuICAgICAgcmV0dXJuIHtcbiAgICAgICAgdmFsdWUsXG4gICAgICAgIG9mZnNldCxcbiAgICAgICAgY29uZmlnLFxuICAgICAgICBhY3RpdmU6IGZhbHNlLFxuICAgICAgICBzdHlsZToge1xuICAgICAgICAgIFtvcmllbnRdOiBgJHtvZmZzZXR9JWBcbiAgICAgICAgfVxuICAgICAgfTtcbiAgICB9KTtcbiAgfVxuXG4gIHByaXZhdGUgdG9nZ2xlUG9pbnRBY3RpdmUoKTogdm9pZCB7XG4gICAgaWYgKHRoaXMuc3RlcHMgJiYgdGhpcy5sb3dlckJvdW5kICE9PSBudWxsICYmIHRoaXMudXBwZXJCb3VuZCAhPT0gbnVsbCkge1xuICAgICAgdGhpcy5zdGVwcy5mb3JFYWNoKHN0ZXAgPT4ge1xuICAgICAgICBjb25zdCB2YWx1ZSA9IHN0ZXAudmFsdWU7XG4gICAgICAgIGNvbnN0IGlzQWN0aXZlID1cbiAgICAgICAgICAoIXRoaXMuaW5jbHVkZWQgJiYgdmFsdWUgPT09IHRoaXMudXBwZXJCb3VuZCkgfHwgKHRoaXMuaW5jbHVkZWQgJiYgdmFsdWUgPD0gdGhpcy51cHBlckJvdW5kISAmJiB2YWx1ZSA+PSB0aGlzLmxvd2VyQm91bmQhKTtcbiAgICAgICAgc3RlcC5hY3RpdmUgPSBpc0FjdGl2ZTtcbiAgICAgIH0pO1xuICAgIH1cbiAgfVxufVxuIl19