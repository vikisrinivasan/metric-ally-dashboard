/**
 * @fileoverview added by tsickle
 * Generated from: breadcrumb-separator.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE
 */
import { Component } from '@angular/core';
import * as ɵngcc0 from '@angular/core';

var _c0 = ["*"];
var NzBreadCrumbSeparatorComponent = /** @class */ (function () {
    function NzBreadCrumbSeparatorComponent() {
    }
NzBreadCrumbSeparatorComponent.ɵfac = function NzBreadCrumbSeparatorComponent_Factory(t) { return new (t || NzBreadCrumbSeparatorComponent)(); };
NzBreadCrumbSeparatorComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: NzBreadCrumbSeparatorComponent, selectors: [["nz-breadcrumb-separator"]], exportAs: ["nzBreadcrumbSeparator"], ngContentSelectors: _c0, decls: 2, vars: 0, consts: [[1, "ant-breadcrumb-separator"]], template: function NzBreadCrumbSeparatorComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵelementStart(0, "span", 0);
        ɵngcc0.ɵɵprojection(1);
        ɵngcc0.ɵɵelementEnd();
    } }, encapsulation: 2 });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NzBreadCrumbSeparatorComponent, [{
        type: Component,
        args: [{
                selector: 'nz-breadcrumb-separator',
                exportAs: 'nzBreadcrumbSeparator',
                template: "\n    <span class=\"ant-breadcrumb-separator\">\n      <ng-content></ng-content>\n    </span>\n  "
            }]
    }], function () { return []; }, null); })();
    return NzBreadCrumbSeparatorComponent;
}());
export { NzBreadCrumbSeparatorComponent };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnJlYWRjcnVtYi1zZXBhcmF0b3IuY29tcG9uZW50LmpzIiwic291cmNlcyI6WyJuZy16b3Jyby1hbnRkL2JyZWFkY3J1bWIvYnJlYWRjcnVtYi1zZXBhcmF0b3IuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUtBLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxlQUFlLENBQUM7Ozs7QUFFMUM7QUFFYyxJQUZkO0FBQytCLElBUWMsQ0FBQztrRUFUN0MsU0FBUyxTQUFDLHNCQUNULFFBQVEsRUFBRSx5QkFBeUI7aUJBQ25DLFFBQVEsRUFBRSx1QkFBdUIsc0JBQ2pDLFFBQVEsRUFBRSxtR0FJVCxrQkFDRjs7Ozs7Ozs7Ozs7OztnREFDTztBQUFDLElBQW9DLHFDQUFDO0FBQzdDLENBRDZDLEFBVDlDLElBUzhDO0FBQzlDLFNBRGEsOEJBQThCO0FBQzNDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBVc2Ugb2YgdGhpcyBzb3VyY2UgY29kZSBpcyBnb3Zlcm5lZCBieSBhbiBNSVQtc3R5bGUgbGljZW5zZSB0aGF0IGNhbiBiZVxuICogZm91bmQgaW4gdGhlIExJQ0VOU0UgZmlsZSBhdCBodHRwczovL2dpdGh1Yi5jb20vTkctWk9SUk8vbmctem9ycm8tYW50ZC9ibG9iL21hc3Rlci9MSUNFTlNFXG4gKi9cblxuaW1wb3J0IHsgQ29tcG9uZW50IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ256LWJyZWFkY3J1bWItc2VwYXJhdG9yJyxcbiAgZXhwb3J0QXM6ICduekJyZWFkY3J1bWJTZXBhcmF0b3InLFxuICB0ZW1wbGF0ZTogYFxuICAgIDxzcGFuIGNsYXNzPVwiYW50LWJyZWFkY3J1bWItc2VwYXJhdG9yXCI+XG4gICAgICA8bmctY29udGVudD48L25nLWNvbnRlbnQ+XG4gICAgPC9zcGFuPlxuICBgXG59KVxuZXhwb3J0IGNsYXNzIE56QnJlYWRDcnVtYlNlcGFyYXRvckNvbXBvbmVudCB7fVxuIl19