/**
 * @fileoverview added by tsickle
 * Generated from: nz-pipe.module.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE
 */
import { CommonModule } from '@angular/common';
import { NgModule } from '@angular/core';
import { NzToCssUnitPipe } from './nz-css-unit.pipe';
import { NzTimeRangePipe } from './time-range.pipe';
import * as ɵngcc0 from '@angular/core';
var NzPipesModule = /** @class */ (function () {
    function NzPipesModule() {
    }
NzPipesModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: NzPipesModule });
NzPipesModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function NzPipesModule_Factory(t) { return new (t || NzPipesModule)(); }, imports: [[CommonModule]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NzPipesModule, { declarations: function () { return [NzTimeRangePipe, NzToCssUnitPipe]; }, imports: function () { return [CommonModule]; }, exports: function () { return [NzTimeRangePipe, NzToCssUnitPipe]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NzPipesModule, [{
        type: NgModule,
        args: [{
                imports: [CommonModule],
                exports: [NzTimeRangePipe, NzToCssUnitPipe],
                declarations: [NzTimeRangePipe, NzToCssUnitPipe]
            }]
    }], function () { return []; }, null); })();
    return NzPipesModule;
}());
export { NzPipesModule };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibnotcGlwZS5tb2R1bGUuanMiLCJzb3VyY2VzIjpbIm5nLXpvcnJvLWFudGQvY29yZS9waXBlL256LXBpcGUubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUtBLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUMvQyxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRXpDLE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQztBQUNyRCxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sbUJBQW1CLENBQUM7O0FBRXBEO0FBRVUsSUFGVjtBQUNlLElBSWEsQ0FBQztpREFMNUIsUUFBUSxTQUFDO2lCQUNSLE9BQU8sRUFBRSxDQUFDLFlBQVksQ0FBQyxzQkFDdkIsT0FBTyxFQUFFLENBQUMsZUFBZSxFQUFFLGVBQWUsQ0FBQyxzQkFDM0MsWUFBWSxFQUFFLENBQUMsZUFBZSxFQUFFO2NBQWUsQ0FBQyxrQkFDakQ7Ozs7Ozs7O2dEQUNRO0FBQUMsSUFBa0Isb0JBQUM7QUFDNUIsQ0FENEIsQUFMN0IsSUFLNkI7QUFDN0IsU0FEYSxhQUFhO0FBQzFCIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBVc2Ugb2YgdGhpcyBzb3VyY2UgY29kZSBpcyBnb3Zlcm5lZCBieSBhbiBNSVQtc3R5bGUgbGljZW5zZSB0aGF0IGNhbiBiZVxuICogZm91bmQgaW4gdGhlIExJQ0VOU0UgZmlsZSBhdCBodHRwczovL2dpdGh1Yi5jb20vTkctWk9SUk8vbmctem9ycm8tYW50ZC9ibG9iL21hc3Rlci9MSUNFTlNFXG4gKi9cblxuaW1wb3J0IHsgQ29tbW9uTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcbmltcG9ydCB7IE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbmltcG9ydCB7IE56VG9Dc3NVbml0UGlwZSB9IGZyb20gJy4vbnotY3NzLXVuaXQucGlwZSc7XG5pbXBvcnQgeyBOelRpbWVSYW5nZVBpcGUgfSBmcm9tICcuL3RpbWUtcmFuZ2UucGlwZSc7XG5cbkBOZ01vZHVsZSh7XG4gIGltcG9ydHM6IFtDb21tb25Nb2R1bGVdLFxuICBleHBvcnRzOiBbTnpUaW1lUmFuZ2VQaXBlLCBOelRvQ3NzVW5pdFBpcGVdLFxuICBkZWNsYXJhdGlvbnM6IFtOelRpbWVSYW5nZVBpcGUsIE56VG9Dc3NVbml0UGlwZV1cbn0pXG5leHBvcnQgY2xhc3MgTnpQaXBlc01vZHVsZSB7fVxuIl19