/**
 * @fileoverview added by tsickle
 * Generated from: element-patch.directive.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE
 */
import { Directive, ElementRef } from '@angular/core';
/**
 * A patch directive to select the element of a component.
 */
import * as ɵngcc0 from '@angular/core';
var NzElementPatchDirective = /** @class */ (function () {
    function NzElementPatchDirective(elementRef) {
        this.elementRef = elementRef;
    }
    /** @nocollapse */
    NzElementPatchDirective.ctorParameters = function () { return [
        { type: ElementRef }
    ]; };
NzElementPatchDirective.ɵfac = function NzElementPatchDirective_Factory(t) { return new (t || NzElementPatchDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };
NzElementPatchDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: NzElementPatchDirective, selectors: [["", "nz-element", ""]], exportAs: ["nzElement"] });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NzElementPatchDirective, [{
        type: Directive,
        args: [{
                selector: '[nz-element]',
                exportAs: 'nzElement'
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, null); })();
    return NzElementPatchDirective;
}());
export { NzElementPatchDirective };
if (false) {
    /** @type {?} */
    NzElementPatchDirective.prototype.elementRef;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZWxlbWVudC1wYXRjaC5kaXJlY3RpdmUuanMiLCJzb3VyY2VzIjpbIm5nLXpvcnJvLWFudGQvY29yZS9lbGVtZW50LXBhdGNoL2VsZW1lbnQtcGF0Y2guZGlyZWN0aXZlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUtBLE9BQU8sRUFBRSxTQUFTLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3REO0FBQ0c7QUFDdUQ7O0FBRTFEO0FBRWtCLElBR2hCLGlDQUFtQixVQUFzQjtBQUFJLFFBQTFCLGVBQVUsR0FBVixVQUFVLENBQVk7QUFBQyxJQUFFLENBQUMsQUFEdEM7QUFBQztvQ0FKVCxTQUFTLFNBQUMsdERBSXNCO1FBSC9CLFFBQVEsRUFBRSxsQkFNQSxnQkFaUSxVQUFVO0dBTUosSEFOTztlQU8vQixRQUFRLEVBQUUsV0FBVyxrQkFDdEI7Ozs7Ozs7OzJFQVJ5QztBQUFDLElBVzNDLDhCQUFDO0FBQ0EsQ0FEQSxBQU5ELElBTUM7QUFDRCxTQUhhLHVCQUF1QjtBQUNuQztBQUFhO0FBQXFCLElBQXJCLDZDQUE2QjtBQUFDO0FBQUUiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFVzZSBvZiB0aGlzIHNvdXJjZSBjb2RlIGlzIGdvdmVybmVkIGJ5IGFuIE1JVC1zdHlsZSBsaWNlbnNlIHRoYXQgY2FuIGJlXG4gKiBmb3VuZCBpbiB0aGUgTElDRU5TRSBmaWxlIGF0IGh0dHBzOi8vZ2l0aHViLmNvbS9ORy1aT1JSTy9uZy16b3Jyby1hbnRkL2Jsb2IvbWFzdGVyL0xJQ0VOU0VcbiAqL1xuXG5pbXBvcnQgeyBEaXJlY3RpdmUsIEVsZW1lbnRSZWYgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuLyoqXG4gKiBBIHBhdGNoIGRpcmVjdGl2ZSB0byBzZWxlY3QgdGhlIGVsZW1lbnQgb2YgYSBjb21wb25lbnQuXG4gKi9cbkBEaXJlY3RpdmUoe1xuICBzZWxlY3RvcjogJ1tuei1lbGVtZW50XScsXG4gIGV4cG9ydEFzOiAnbnpFbGVtZW50J1xufSlcbmV4cG9ydCBjbGFzcyBOekVsZW1lbnRQYXRjaERpcmVjdGl2ZSB7XG4gIGNvbnN0cnVjdG9yKHB1YmxpYyBlbGVtZW50UmVmOiBFbGVtZW50UmVmKSB7fVxufVxuIl19