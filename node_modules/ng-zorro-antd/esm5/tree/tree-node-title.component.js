/**
 * @fileoverview added by tsickle
 * Generated from: tree-node-title.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE
 */
import { ChangeDetectionStrategy, Component, Input } from '@angular/core';
import { NzTreeNode } from 'ng-zorro-antd/core/tree';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';
import * as ɵngcc2 from 'ng-zorro-antd/icon';
import * as ɵngcc3 from 'ng-zorro-antd/core/highlight';

function NzTreeNodeTitleComponent_ng_template_0_Template(rf, ctx) { }
function NzTreeNodeTitleComponent_ng_container_1_span_1_i_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "i", 5);
} if (rf & 2) {
    var ctx_r3 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵproperty("nzType", ctx_r3.icon);
} }
function NzTreeNodeTitleComponent_ng_container_1_span_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span");
    ɵngcc0.ɵɵelementStart(1, "span");
    ɵngcc0.ɵɵtemplate(2, NzTreeNodeTitleComponent_ng_container_1_span_1_i_2_Template, 1, 1, "i", 4);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r2 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵclassProp("ant-tree-icon__open", ctx_r2.isSwitcherOpen)("ant-tree-icon__close", ctx_r2.isSwitcherClose)("ant-tree-icon_loading", ctx_r2.isLoading)("ant-select-tree-iconEle", ctx_r2.selectMode)("ant-tree-iconEle", !ctx_r2.selectMode);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵclassProp("ant-select-tree-iconEle", ctx_r2.selectMode)("ant-select-tree-icon__customize", ctx_r2.selectMode)("ant-tree-iconEle", !ctx_r2.selectMode)("ant-tree-icon__customize", !ctx_r2.selectMode);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r2.icon);
} }
function NzTreeNodeTitleComponent_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtemplate(1, NzTreeNodeTitleComponent_ng_container_1_span_1_Template, 3, 19, "span", 2);
    ɵngcc0.ɵɵelement(2, "span", 3);
    ɵngcc0.ɵɵpipe(3, "nzHighlight");
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    var ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r1.icon && ctx_r1.showIcon);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("innerHTML", ɵngcc0.ɵɵpipeBind4(3, 2, ctx_r1.title, ctx_r1.matchedValue, "i", "font-highlight"), ɵngcc0.ɵɵsanitizeHtml);
} }
var _c0 = function (a0, a1) { return { $implicit: a0, origin: a1 }; };
var NzTreeNodeTitleComponent = /** @class */ (function () {
    function NzTreeNodeTitleComponent() {
        this.treeTemplate = null;
        this.selectMode = false;
    }
    Object.defineProperty(NzTreeNodeTitleComponent.prototype, "canDraggable", {
        get: /**
         * @return {?}
         */
        function () {
            return this.draggable && !this.isDisabled ? true : null;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(NzTreeNodeTitleComponent.prototype, "matchedValue", {
        get: /**
         * @return {?}
         */
        function () {
            return this.isMatched ? this.searchValue : '';
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(NzTreeNodeTitleComponent.prototype, "isSwitcherOpen", {
        get: /**
         * @return {?}
         */
        function () {
            return this.isExpanded && !this.isLeaf;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(NzTreeNodeTitleComponent.prototype, "isSwitcherClose", {
        get: /**
         * @return {?}
         */
        function () {
            return !this.isExpanded && !this.isLeaf;
        },
        enumerable: true,
        configurable: true
    });
    NzTreeNodeTitleComponent.propDecorators = {
        searchValue: [{ type: Input }],
        treeTemplate: [{ type: Input }],
        draggable: [{ type: Input }],
        showIcon: [{ type: Input }],
        selectMode: [{ type: Input }],
        context: [{ type: Input }],
        icon: [{ type: Input }],
        title: [{ type: Input }],
        isLoading: [{ type: Input }],
        isSelected: [{ type: Input }],
        isDisabled: [{ type: Input }],
        isMatched: [{ type: Input }],
        isExpanded: [{ type: Input }],
        isLeaf: [{ type: Input }]
    };
NzTreeNodeTitleComponent.ɵfac = function NzTreeNodeTitleComponent_Factory(t) { return new (t || NzTreeNodeTitleComponent)(); };
NzTreeNodeTitleComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: NzTreeNodeTitleComponent, selectors: [["nz-tree-node-title"]], hostVars: 21, hostBindings: function NzTreeNodeTitleComponent_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵattribute("title", ctx.title)("draggable", ctx.canDraggable)("aria-grabbed", ctx.canDraggable);
        ɵngcc0.ɵɵclassProp("draggable", ctx.canDraggable)("ant-select-tree-node-content-wrapper", ctx.selectMode)("ant-select-tree-node-content-wrapper-open", ctx.selectMode && ctx.isSwitcherOpen)("ant-select-tree-node-content-wrapper-close", ctx.selectMode && ctx.isSwitcherClose)("ant-select-tree-node-selected", ctx.selectMode && ctx.isSelected)("ant-tree-node-content-wrapper", !ctx.selectMode)("ant-tree-node-content-wrapper-open", !ctx.selectMode && ctx.isSwitcherOpen)("ant-tree-node-content-wrapper-close", !ctx.selectMode && ctx.isSwitcherClose)("ant-tree-node-selected", !ctx.selectMode && ctx.isSelected);
    } }, inputs: { treeTemplate: "treeTemplate", selectMode: "selectMode", searchValue: "searchValue", draggable: "draggable", showIcon: "showIcon", context: "context", icon: "icon", title: "title", isLoading: "isLoading", isSelected: "isSelected", isDisabled: "isDisabled", isMatched: "isMatched", isExpanded: "isExpanded", isLeaf: "isLeaf" }, decls: 2, vars: 6, consts: [[3, "ngTemplateOutlet", "ngTemplateOutletContext"], [4, "ngIf"], [3, "ant-tree-icon__open", "ant-tree-icon__close", "ant-tree-icon_loading", "ant-select-tree-iconEle", "ant-tree-iconEle", 4, "ngIf"], [1, "ant-tree-title", 3, "innerHTML"], ["nz-icon", "", 3, "nzType", 4, "ngIf"], ["nz-icon", "", 3, "nzType"]], template: function NzTreeNodeTitleComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtemplate(0, NzTreeNodeTitleComponent_ng_template_0_Template, 0, 0, "ng-template", 0);
        ɵngcc0.ɵɵtemplate(1, NzTreeNodeTitleComponent_ng_container_1_Template, 4, 7, "ng-container", 1);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngTemplateOutlet", ctx.treeTemplate)("ngTemplateOutletContext", ɵngcc0.ɵɵpureFunction2(3, _c0, ctx.context, ctx.context.origin));
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", !ctx.treeTemplate);
    } }, directives: [ɵngcc1.NgTemplateOutlet, ɵngcc1.NgIf, ɵngcc2.NzIconDirective], pipes: [ɵngcc3.NzHighlightPipe], encapsulation: 2, changeDetection: 0 });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NzTreeNodeTitleComponent, [{
        type: Component,
        args: [{
                selector: 'nz-tree-node-title',
                template: " <ng-template [ngTemplateOutlet]=\"treeTemplate\" [ngTemplateOutletContext]=\"{ $implicit: context, origin: context.origin }\">\n    </ng-template>\n    <ng-container *ngIf=\"!treeTemplate\">\n      <span\n        *ngIf=\"icon && showIcon\"\n        [class.ant-tree-icon__open]=\"isSwitcherOpen\"\n        [class.ant-tree-icon__close]=\"isSwitcherClose\"\n        [class.ant-tree-icon_loading]=\"isLoading\"\n        [class.ant-select-tree-iconEle]=\"selectMode\"\n        [class.ant-tree-iconEle]=\"!selectMode\"\n      >\n        <span\n          [class.ant-select-tree-iconEle]=\"selectMode\"\n          [class.ant-select-tree-icon__customize]=\"selectMode\"\n          [class.ant-tree-iconEle]=\"!selectMode\"\n          [class.ant-tree-icon__customize]=\"!selectMode\"\n        >\n          <i nz-icon *ngIf=\"icon\" [nzType]=\"icon\"></i>\n        </span>\n      </span>\n      <span class=\"ant-tree-title\" [innerHTML]=\"title | nzHighlight: matchedValue:'i':'font-highlight'\"> </span>\n    </ng-container>",
                changeDetection: ChangeDetectionStrategy.OnPush,
                preserveWhitespaces: false,
                host: {
                    '[attr.title]': 'title',
                    '[attr.draggable]': 'canDraggable',
                    '[attr.aria-grabbed]': 'canDraggable',
                    '[class.draggable]': 'canDraggable',
                    '[class.ant-select-tree-node-content-wrapper]': "selectMode",
                    '[class.ant-select-tree-node-content-wrapper-open]': "selectMode && isSwitcherOpen",
                    '[class.ant-select-tree-node-content-wrapper-close]': "selectMode && isSwitcherClose",
                    '[class.ant-select-tree-node-selected]': "selectMode && isSelected",
                    '[class.ant-tree-node-content-wrapper]': "!selectMode",
                    '[class.ant-tree-node-content-wrapper-open]': "!selectMode && isSwitcherOpen",
                    '[class.ant-tree-node-content-wrapper-close]': "!selectMode && isSwitcherClose",
                    '[class.ant-tree-node-selected]': "!selectMode && isSelected"
                }
            }]
    }], function () { return []; }, { treeTemplate: [{
            type: Input
        }], selectMode: [{
            type: Input
        }], searchValue: [{
            type: Input
        }], draggable: [{
            type: Input
        }], showIcon: [{
            type: Input
        }], context: [{
            type: Input
        }], icon: [{
            type: Input
        }], title: [{
            type: Input
        }], isLoading: [{
            type: Input
        }], isSelected: [{
            type: Input
        }], isDisabled: [{
            type: Input
        }], isMatched: [{
            type: Input
        }], isExpanded: [{
            type: Input
        }], isLeaf: [{
            type: Input
        }] }); })();
    return NzTreeNodeTitleComponent;
}());
export { NzTreeNodeTitleComponent };
if (false) {
    /** @type {?} */
    NzTreeNodeTitleComponent.prototype.searchValue;
    /** @type {?} */
    NzTreeNodeTitleComponent.prototype.treeTemplate;
    /** @type {?} */
    NzTreeNodeTitleComponent.prototype.draggable;
    /** @type {?} */
    NzTreeNodeTitleComponent.prototype.showIcon;
    /** @type {?} */
    NzTreeNodeTitleComponent.prototype.selectMode;
    /** @type {?} */
    NzTreeNodeTitleComponent.prototype.context;
    /** @type {?} */
    NzTreeNodeTitleComponent.prototype.icon;
    /** @type {?} */
    NzTreeNodeTitleComponent.prototype.title;
    /** @type {?} */
    NzTreeNodeTitleComponent.prototype.isLoading;
    /** @type {?} */
    NzTreeNodeTitleComponent.prototype.isSelected;
    /** @type {?} */
    NzTreeNodeTitleComponent.prototype.isDisabled;
    /** @type {?} */
    NzTreeNodeTitleComponent.prototype.isMatched;
    /** @type {?} */
    NzTreeNodeTitleComponent.prototype.isExpanded;
    /** @type {?} */
    NzTreeNodeTitleComponent.prototype.isLeaf;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHJlZS1ub2RlLXRpdGxlLmNvbXBvbmVudC5qcyIsInNvdXJjZXMiOlsibmctem9ycm8tYW50ZC90cmVlL3RyZWUtbm9kZS10aXRsZS5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBS0EsT0FBTyxFQUFFLHVCQUF1QixFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQWUsTUFBTSxlQUFlLENBQUM7QUFDdkYsT0FBTyxFQUFFLFVBQVUsRUFBcUIsTUFBTSx5QkFBeUIsQ0FBQzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFFeEU7QUFFYSxJQUZiO0FBQ3lCLFFBMENkLGlCQUFZLEdBQTZFLElBQUksQ0FBQztBQUN6RyxRQUVXLGVBQVUsR0FBRyxLQUFLLENBQUM7QUFDOUIsSUF5QkEsQ0FBQztBQUNELElBaEJFLHNCQUFJLGtEQUFZO0FBQUk7QUFDdEI7QUFBdUI7QUFBWSxRQURqQztBQUFjLFlBQ1osT0FBTyxJQUFJLENBQUMsU0FBUyxJQUFJLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUM7QUFDNUQsUUFBRSxDQUFDO0FBRUg7QUFBMEI7QUFDSixPQUhuQjtBQUNILElBQ0Usc0JBQUksa0RBQVk7QUFBSTtBQUNkO0FBQXVCO0FBQVksUUFEekM7QUFBYyxZQUNaLE9BQU8sSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDO0FBQ2xELFFBQUUsQ0FBQztBQUVIO0FBQTBCO0FBQ1AsT0FIaEI7QUFDSCxJQUNFLHNCQUFJLG9EQUFjO0FBQUk7QUFDakI7QUFBdUI7QUFBWSxRQUR4QztBQUFjLFlBQ1osT0FBTyxJQUFJLENBQUMsVUFBVSxJQUFJLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQztBQUMzQyxRQUFFLENBQUM7QUFFSDtBQUEwQjtBQUNSLE9BSGY7QUFDSCxJQUNFLHNCQUFJLHFEQUFlO0FBQUk7QUFDbEI7QUFBdUI7QUFBWSxRQUR4QztBQUFjLFlBQ1osT0FBTyxDQUFDLElBQUksQ0FBQyxVQUFVLElBQUksQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDO0FBQzVDLFFBQUUsQ0FBQztBQUNGO0FBQ3dCO0FBQTJCLE9BRmpELEFBOUJLO0FBQUM7WUF6Q1IsU0FBUyxTQUFDLDlCQTBDTSw4QkFBZCxLQUFLO1lBekNOLFFBQVEsRUFBRSx0QkF5Q0MsK0JBQ1YsS0FBSztDQTFDd0Isc0JBQzlCLFFBQVEsRUFBRSxqQ0F5Q0MsNEJBQ1YsS0FBSztBQUFLLDJCQUNWLEtBQUs7QUFBSyw2QkFDVixLQUFLO0FBQUssMEJBQ1YsS0FBSztBQUFLLHVCQUNWLEtBQUs7QUFBSyx3QkFDVixLQUFLO0FBQUssNEJBQ1YsS0FBSztBQUFLLDZCQUNWLEtBQUs7QUFBSyw2QkFDVixLQUFLO0FBQUssNEJBQ1YsS0FBSztBQUFLLDZCQUNWLEtBQUs7QUFBSyx5QkFDVixLQUFLO0FBQUk7Ozs7a0lBaENRLHNCQUNsQixlQUFlLEVBQUUsdUJBQXVCLENBQUMsTUFBTSxzQkFDL0MsbUJBQW1CLEVBQUUsS0FBSyxzQkFDMUIsSUFBSSxFQUFFLDBCQUNKLGNBQWMsRUFBRSxPQUFPLDBCQUN2QixrQkFBa0IsRUFBRSxjQUFjLDBCQUNsQyxxQkFBcUIsRUFBRSxjQUFjLDBCQUNyQyxtQkFBbUIsRUFBRSxjQUFjLDBCQUNuQyw4Q0FBOEMsRUFBRSxZQUFZO0dBQzVELG1EQUFtRCxFQUFFLDhCQUE4QiwwQkFDbkYsb0RBQW9ELEVBQUUsK0JBQStCLDBCQUNyRix1Q0FBdUMsRUFBRSwwQkFBMEIsMEJBQ25FLHVDQUF1QyxFQUFFLGFBQWEsMEJBQ3RELDRDQUE0QyxFQUFFLCtCQUErQiwwQkFDN0UsNkNBQTZDLEVBQUUsZ0NBQWdDLDBCQUMvRSxnQ0FBZ0MsRUFBRSwyQkFBMkIsc0JBQzlELGtCQUNGOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O29CQWVpQjtBQUFDLElBaUJuQiwrQkFBQztBQUNBLENBREEsQUF4RUQsSUF3RUM7QUFDRCxTQWhDYSx3QkFBd0I7QUFDcEM7QUFBYTtBQUNaLElBREEsK0NBQThCO0FBQ2hDO0FBQXFCLElBQW5CLGdEQUF1RztBQUN6RztBQUFxQixJQUFuQiw2Q0FBNkI7QUFDL0I7QUFBcUIsSUFBbkIsNENBQTRCO0FBQzlCO0FBQXFCLElBQW5CLDhDQUE0QjtBQUM5QjtBQUFxQixJQUFuQiwyQ0FBOEI7QUFDaEM7QUFBcUIsSUFBbkIsd0NBQXVCO0FBQ3pCO0FBQXFCLElBQW5CLHlDQUF3QjtBQUMxQjtBQUFxQixJQUFuQiw2Q0FBNkI7QUFDL0I7QUFBcUIsSUFBbkIsOENBQThCO0FBQ2hDO0FBQXFCLElBQW5CLDhDQUE4QjtBQUNoQztBQUFxQixJQUFuQiw2Q0FBNkI7QUFDL0I7QUFBcUIsSUFBbkIsOENBQThCO0FBQ2hDO0FBQXFCLElBQW5CLDBDQUEwQjtBQUM1QjtBQUNDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBVc2Ugb2YgdGhpcyBzb3VyY2UgY29kZSBpcyBnb3Zlcm5lZCBieSBhbiBNSVQtc3R5bGUgbGljZW5zZSB0aGF0IGNhbiBiZVxuICogZm91bmQgaW4gdGhlIExJQ0VOU0UgZmlsZSBhdCBodHRwczovL2dpdGh1Yi5jb20vTkctWk9SUk8vbmctem9ycm8tYW50ZC9ibG9iL21hc3Rlci9MSUNFTlNFXG4gKi9cblxuaW1wb3J0IHsgQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksIENvbXBvbmVudCwgSW5wdXQsIFRlbXBsYXRlUmVmIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBOelRyZWVOb2RlLCBOelRyZWVOb2RlT3B0aW9ucyB9IGZyb20gJ25nLXpvcnJvLWFudGQvY29yZS90cmVlJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnbnotdHJlZS1ub2RlLXRpdGxlJyxcbiAgdGVtcGxhdGU6IGAgPG5nLXRlbXBsYXRlIFtuZ1RlbXBsYXRlT3V0bGV0XT1cInRyZWVUZW1wbGF0ZVwiIFtuZ1RlbXBsYXRlT3V0bGV0Q29udGV4dF09XCJ7ICRpbXBsaWNpdDogY29udGV4dCwgb3JpZ2luOiBjb250ZXh0Lm9yaWdpbiB9XCI+XG4gICAgPC9uZy10ZW1wbGF0ZT5cbiAgICA8bmctY29udGFpbmVyICpuZ0lmPVwiIXRyZWVUZW1wbGF0ZVwiPlxuICAgICAgPHNwYW5cbiAgICAgICAgKm5nSWY9XCJpY29uICYmIHNob3dJY29uXCJcbiAgICAgICAgW2NsYXNzLmFudC10cmVlLWljb25fX29wZW5dPVwiaXNTd2l0Y2hlck9wZW5cIlxuICAgICAgICBbY2xhc3MuYW50LXRyZWUtaWNvbl9fY2xvc2VdPVwiaXNTd2l0Y2hlckNsb3NlXCJcbiAgICAgICAgW2NsYXNzLmFudC10cmVlLWljb25fbG9hZGluZ109XCJpc0xvYWRpbmdcIlxuICAgICAgICBbY2xhc3MuYW50LXNlbGVjdC10cmVlLWljb25FbGVdPVwic2VsZWN0TW9kZVwiXG4gICAgICAgIFtjbGFzcy5hbnQtdHJlZS1pY29uRWxlXT1cIiFzZWxlY3RNb2RlXCJcbiAgICAgID5cbiAgICAgICAgPHNwYW5cbiAgICAgICAgICBbY2xhc3MuYW50LXNlbGVjdC10cmVlLWljb25FbGVdPVwic2VsZWN0TW9kZVwiXG4gICAgICAgICAgW2NsYXNzLmFudC1zZWxlY3QtdHJlZS1pY29uX19jdXN0b21pemVdPVwic2VsZWN0TW9kZVwiXG4gICAgICAgICAgW2NsYXNzLmFudC10cmVlLWljb25FbGVdPVwiIXNlbGVjdE1vZGVcIlxuICAgICAgICAgIFtjbGFzcy5hbnQtdHJlZS1pY29uX19jdXN0b21pemVdPVwiIXNlbGVjdE1vZGVcIlxuICAgICAgICA+XG4gICAgICAgICAgPGkgbnotaWNvbiAqbmdJZj1cImljb25cIiBbbnpUeXBlXT1cImljb25cIj48L2k+XG4gICAgICAgIDwvc3Bhbj5cbiAgICAgIDwvc3Bhbj5cbiAgICAgIDxzcGFuIGNsYXNzPVwiYW50LXRyZWUtdGl0bGVcIiBbaW5uZXJIVE1MXT1cInRpdGxlIHwgbnpIaWdobGlnaHQ6IG1hdGNoZWRWYWx1ZTonaSc6J2ZvbnQtaGlnaGxpZ2h0J1wiPiA8L3NwYW4+XG4gICAgPC9uZy1jb250YWluZXI+YCxcbiAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2gsXG4gIHByZXNlcnZlV2hpdGVzcGFjZXM6IGZhbHNlLFxuICBob3N0OiB7XG4gICAgJ1thdHRyLnRpdGxlXSc6ICd0aXRsZScsXG4gICAgJ1thdHRyLmRyYWdnYWJsZV0nOiAnY2FuRHJhZ2dhYmxlJyxcbiAgICAnW2F0dHIuYXJpYS1ncmFiYmVkXSc6ICdjYW5EcmFnZ2FibGUnLFxuICAgICdbY2xhc3MuZHJhZ2dhYmxlXSc6ICdjYW5EcmFnZ2FibGUnLFxuICAgICdbY2xhc3MuYW50LXNlbGVjdC10cmVlLW5vZGUtY29udGVudC13cmFwcGVyXSc6IGBzZWxlY3RNb2RlYCxcbiAgICAnW2NsYXNzLmFudC1zZWxlY3QtdHJlZS1ub2RlLWNvbnRlbnQtd3JhcHBlci1vcGVuXSc6IGBzZWxlY3RNb2RlICYmIGlzU3dpdGNoZXJPcGVuYCxcbiAgICAnW2NsYXNzLmFudC1zZWxlY3QtdHJlZS1ub2RlLWNvbnRlbnQtd3JhcHBlci1jbG9zZV0nOiBgc2VsZWN0TW9kZSAmJiBpc1N3aXRjaGVyQ2xvc2VgLFxuICAgICdbY2xhc3MuYW50LXNlbGVjdC10cmVlLW5vZGUtc2VsZWN0ZWRdJzogYHNlbGVjdE1vZGUgJiYgaXNTZWxlY3RlZGAsXG4gICAgJ1tjbGFzcy5hbnQtdHJlZS1ub2RlLWNvbnRlbnQtd3JhcHBlcl0nOiBgIXNlbGVjdE1vZGVgLFxuICAgICdbY2xhc3MuYW50LXRyZWUtbm9kZS1jb250ZW50LXdyYXBwZXItb3Blbl0nOiBgIXNlbGVjdE1vZGUgJiYgaXNTd2l0Y2hlck9wZW5gLFxuICAgICdbY2xhc3MuYW50LXRyZWUtbm9kZS1jb250ZW50LXdyYXBwZXItY2xvc2VdJzogYCFzZWxlY3RNb2RlICYmIGlzU3dpdGNoZXJDbG9zZWAsXG4gICAgJ1tjbGFzcy5hbnQtdHJlZS1ub2RlLXNlbGVjdGVkXSc6IGAhc2VsZWN0TW9kZSAmJiBpc1NlbGVjdGVkYFxuICB9XG59KVxuZXhwb3J0IGNsYXNzIE56VHJlZU5vZGVUaXRsZUNvbXBvbmVudCB7XG4gIEBJbnB1dCgpIHNlYXJjaFZhbHVlITogc3RyaW5nO1xuICBASW5wdXQoKSB0cmVlVGVtcGxhdGU6IFRlbXBsYXRlUmVmPHsgJGltcGxpY2l0OiBOelRyZWVOb2RlOyBvcmlnaW46IE56VHJlZU5vZGVPcHRpb25zIH0+IHwgbnVsbCA9IG51bGw7XG4gIEBJbnB1dCgpIGRyYWdnYWJsZSE6IGJvb2xlYW47XG4gIEBJbnB1dCgpIHNob3dJY29uITogYm9vbGVhbjtcbiAgQElucHV0KCkgc2VsZWN0TW9kZSA9IGZhbHNlO1xuICBASW5wdXQoKSBjb250ZXh0ITogTnpUcmVlTm9kZTtcbiAgQElucHV0KCkgaWNvbiE6IHN0cmluZztcbiAgQElucHV0KCkgdGl0bGUhOiBzdHJpbmc7XG4gIEBJbnB1dCgpIGlzTG9hZGluZyE6IGJvb2xlYW47XG4gIEBJbnB1dCgpIGlzU2VsZWN0ZWQhOiBib29sZWFuO1xuICBASW5wdXQoKSBpc0Rpc2FibGVkITogYm9vbGVhbjtcbiAgQElucHV0KCkgaXNNYXRjaGVkITogYm9vbGVhbjtcbiAgQElucHV0KCkgaXNFeHBhbmRlZCE6IGJvb2xlYW47XG4gIEBJbnB1dCgpIGlzTGVhZiE6IGJvb2xlYW47XG5cbiAgZ2V0IGNhbkRyYWdnYWJsZSgpOiBib29sZWFuIHwgbnVsbCB7XG4gICAgcmV0dXJuIHRoaXMuZHJhZ2dhYmxlICYmICF0aGlzLmlzRGlzYWJsZWQgPyB0cnVlIDogbnVsbDtcbiAgfVxuXG4gIGdldCBtYXRjaGVkVmFsdWUoKTogc3RyaW5nIHtcbiAgICByZXR1cm4gdGhpcy5pc01hdGNoZWQgPyB0aGlzLnNlYXJjaFZhbHVlIDogJyc7XG4gIH1cblxuICBnZXQgaXNTd2l0Y2hlck9wZW4oKTogYm9vbGVhbiB7XG4gICAgcmV0dXJuIHRoaXMuaXNFeHBhbmRlZCAmJiAhdGhpcy5pc0xlYWY7XG4gIH1cblxuICBnZXQgaXNTd2l0Y2hlckNsb3NlKCk6IGJvb2xlYW4ge1xuICAgIHJldHVybiAhdGhpcy5pc0V4cGFuZGVkICYmICF0aGlzLmlzTGVhZjtcbiAgfVxufVxuIl19