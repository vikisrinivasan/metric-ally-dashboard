/**
 * @fileoverview added by tsickle
 * Generated from: icon.module.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE
 */
import { PlatformModule } from '@angular/cdk/platform';
import { NgModule } from '@angular/core';
import { NzIconDirective } from './icon.directive';
import { NZ_ICONS, NZ_ICONS_PATCH, NzIconPatchService } from './icon.service';
import * as ɵngcc0 from '@angular/core';
var NzIconModule = /** @class */ (function () {
    function NzIconModule() {
    }
    /**
     * @param {?} icons
     * @return {?}
     */
    NzIconModule.forRoot = /**
     * @param {?} icons
     * @return {?}
     */
    function (icons) {
        return {
            ngModule: NzIconModule,
            providers: [
                {
                    provide: NZ_ICONS,
                    useValue: icons
                }
            ]
        };
    };
    /**
     * @param {?} icons
     * @return {?}
     */
    NzIconModule.forChild = /**
     * @param {?} icons
     * @return {?}
     */
    function (icons) {
        return {
            ngModule: NzIconModule,
            providers: [
                NzIconPatchService,
                {
                    provide: NZ_ICONS_PATCH,
                    useValue: icons
                }
            ]
        };
    };
NzIconModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: NzIconModule });
NzIconModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function NzIconModule_Factory(t) { return new (t || NzIconModule)(); }, imports: [[PlatformModule]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NzIconModule, { declarations: function () { return [NzIconDirective]; }, imports: function () { return [PlatformModule]; }, exports: function () { return [NzIconDirective]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NzIconModule, [{
        type: NgModule,
        args: [{
                exports: [NzIconDirective],
                declarations: [NzIconDirective],
                imports: [PlatformModule]
            }]
    }], function () { return []; }, null); })();
    return NzIconModule;
}());
export { NzIconModule };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaWNvbi5tb2R1bGUuanMiLCJzb3VyY2VzIjpbIm5nLXpvcnJvLWFudGQvaWNvbi9pY29uLm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFJQSxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sdUJBQXVCLENBQUM7QUFDdkQsT0FBTyxFQUF1QixRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFHOUQsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBQ25ELE9BQU8sRUFBRSxRQUFRLEVBQUUsY0FBYyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sZ0JBQWdCLENBQUM7O0FBRTlFO0FBRU0sSUFGTjtBQUNjLElBNkJkLENBQUM7QUFDRDtBQUFRO0FBQXdCO0FBQW1CO0FBQVEsSUF6QmxELG9CQUFPO0FBQU87QUFBd0I7QUFBbUI7QUFBUSxJQUF4RSxVQUFlLEtBQXVCO0FBQUksUUFDeEMsT0FBTztBQUNYLFlBQU0sUUFBUSxFQUFFLFlBQVk7QUFDNUIsWUFBTSxTQUFTLEVBQUU7QUFDakIsZ0JBQVE7QUFDUixvQkFBVSxPQUFPLEVBQUUsUUFBUTtBQUMzQixvQkFBVSxRQUFRLEVBQUUsS0FBSztBQUN6QixpQkFBUztBQUNULGFBQU87QUFDUCxTQUFLLENBQUM7QUFDTixJQUFFLENBQUM7QUFFSDtBQUFRO0FBQXdCO0FBQW1CO0FBQVEsSUFBbEQscUJBQVE7QUFBTztBQUF3QjtBQUFtQjtBQUFRLElBQXpFLFVBQWdCLEtBQXVCO0FBQUksUUFDekMsT0FBTztBQUNYLFlBQU0sUUFBUSxFQUFFLFlBQVk7QUFDNUIsWUFBTSxTQUFTLEVBQUU7QUFDakIsZ0JBQVEsa0JBQWtCO0FBQzFCLGdCQUFRO0FBQ1Isb0JBQVUsT0FBTyxFQUFFLGNBQWM7QUFDakMsb0JBQVUsUUFBUSxFQUFFLEtBQUs7QUFDekIsaUJBQVM7QUFDVCxhQUFPO0FBQ1AsU0FBSyxDQUFDO0FBQ04sSUFBRSxDQUFDO2dEQTdCRixRQUFRLFNBQUM7a0JBQ1IsT0FBTyxFQUFFLENBQUMsZUFBZSxDQUFDLHNCQUMxQixZQUFZLEVBQUUsQ0FBQyxlQUFlLENBQUMsc0JBQy9CLE9BQU8sRUFBRSxDQUFDLGNBQWMsQ0FBQztHQUMxQjs7Ozs7Ozs7Z0RBQ1E7QUFBQyxJQXlCVixtQkFBQztBQUNBLENBREEsQUE5QkQsSUE4QkM7QUFDRCxTQTFCYSxZQUFZO0FBQ3hCIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBVc2Ugb2YgdGhpcyBzb3VyY2UgY29kZSBpcyBnb3Zlcm5lZCBieSBhbiBNSVQtc3R5bGUgbGljZW5zZSB0aGF0IGNhbiBiZVxuICogZm91bmQgaW4gdGhlIExJQ0VOU0UgZmlsZSBhdCBodHRwczovL2dpdGh1Yi5jb20vTkctWk9SUk8vbmctem9ycm8tYW50ZC9ibG9iL21hc3Rlci9MSUNFTlNFXG4gKi9cbmltcG9ydCB7IFBsYXRmb3JtTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY2RrL3BsYXRmb3JtJztcbmltcG9ydCB7IE1vZHVsZVdpdGhQcm92aWRlcnMsIE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBJY29uRGVmaW5pdGlvbiB9IGZyb20gJ0BhbnQtZGVzaWduL2ljb25zLWFuZ3VsYXInO1xuXG5pbXBvcnQgeyBOekljb25EaXJlY3RpdmUgfSBmcm9tICcuL2ljb24uZGlyZWN0aXZlJztcbmltcG9ydCB7IE5aX0lDT05TLCBOWl9JQ09OU19QQVRDSCwgTnpJY29uUGF0Y2hTZXJ2aWNlIH0gZnJvbSAnLi9pY29uLnNlcnZpY2UnO1xuXG5ATmdNb2R1bGUoe1xuICBleHBvcnRzOiBbTnpJY29uRGlyZWN0aXZlXSxcbiAgZGVjbGFyYXRpb25zOiBbTnpJY29uRGlyZWN0aXZlXSxcbiAgaW1wb3J0czogW1BsYXRmb3JtTW9kdWxlXVxufSlcbmV4cG9ydCBjbGFzcyBOekljb25Nb2R1bGUge1xuICBzdGF0aWMgZm9yUm9vdChpY29uczogSWNvbkRlZmluaXRpb25bXSk6IE1vZHVsZVdpdGhQcm92aWRlcnM8TnpJY29uTW9kdWxlPiB7XG4gICAgcmV0dXJuIHtcbiAgICAgIG5nTW9kdWxlOiBOekljb25Nb2R1bGUsXG4gICAgICBwcm92aWRlcnM6IFtcbiAgICAgICAge1xuICAgICAgICAgIHByb3ZpZGU6IE5aX0lDT05TLFxuICAgICAgICAgIHVzZVZhbHVlOiBpY29uc1xuICAgICAgICB9XG4gICAgICBdXG4gICAgfTtcbiAgfVxuXG4gIHN0YXRpYyBmb3JDaGlsZChpY29uczogSWNvbkRlZmluaXRpb25bXSk6IE1vZHVsZVdpdGhQcm92aWRlcnM8TnpJY29uTW9kdWxlPiB7XG4gICAgcmV0dXJuIHtcbiAgICAgIG5nTW9kdWxlOiBOekljb25Nb2R1bGUsXG4gICAgICBwcm92aWRlcnM6IFtcbiAgICAgICAgTnpJY29uUGF0Y2hTZXJ2aWNlLFxuICAgICAgICB7XG4gICAgICAgICAgcHJvdmlkZTogTlpfSUNPTlNfUEFUQ0gsXG4gICAgICAgICAgdXNlVmFsdWU6IGljb25zXG4gICAgICAgIH1cbiAgICAgIF1cbiAgICB9O1xuICB9XG59XG4iXX0=