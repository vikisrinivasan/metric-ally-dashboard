/**
 * @fileoverview added by tsickle
 * Generated from: space.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { __decorate, __metadata } from "tslib";
/**
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE
 */
import { ChangeDetectionStrategy, Component, ContentChildren, Input, QueryList } from '@angular/core';
import { NzConfigService, WithConfig } from 'ng-zorro-antd/core/config';
import { Subject } from 'rxjs';
import { startWith, takeUntil } from 'rxjs/operators';
import { NzSpaceItemComponent } from './space-item.component';
/** @type {?} */
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from 'ng-zorro-antd/core/config';

var _c0 = ["*"];
var NZ_CONFIG_COMPONENT_NAME = 'space';
var NzSpaceComponent = /** @class */ (function () {
    function NzSpaceComponent(nzConfigService) {
        this.nzConfigService = nzConfigService;
        this.nzDirection = 'horizontal';
        this.nzSize = 'small';
        this.destroy$ = new Subject();
    }
    /**
     * @private
     * @return {?}
     */
    NzSpaceComponent.prototype.updateSpaceItems = /**
     * @private
     * @return {?}
     */
    function () {
        var _this = this;
        if (this.nzSpaceItemComponents) {
            this.nzSpaceItemComponents.forEach((/**
             * @param {?} item
             * @return {?}
             */
            function (item) {
                item.setDirectionAndSize(_this.nzDirection, _this.nzSize);
            }));
        }
    };
    /**
     * @return {?}
     */
    NzSpaceComponent.prototype.ngOnChanges = /**
     * @return {?}
     */
    function () {
        this.updateSpaceItems();
    };
    /**
     * @return {?}
     */
    NzSpaceComponent.prototype.ngOnDestroy = /**
     * @return {?}
     */
    function () {
        this.destroy$.next();
        this.destroy$.complete();
    };
    /**
     * @return {?}
     */
    NzSpaceComponent.prototype.ngAfterViewInit = /**
     * @return {?}
     */
    function () {
        var _this = this;
        this.nzSpaceItemComponents.changes.pipe(startWith(null), takeUntil(this.destroy$)).subscribe((/**
         * @return {?}
         */
        function () {
            _this.updateSpaceItems();
        }));
    };
    /** @nocollapse */
    NzSpaceComponent.ctorParameters = function () { return [
        { type: NzConfigService }
    ]; };
    NzSpaceComponent.propDecorators = {
        nzDirection: [{ type: Input }],
        nzSize: [{ type: Input }],
        nzSpaceItemComponents: [{ type: ContentChildren, args: [NzSpaceItemComponent,] }]
    };
    __decorate([
        WithConfig(NZ_CONFIG_COMPONENT_NAME),
        __metadata("design:type", Object)
    ], NzSpaceComponent.prototype, "nzSize", void 0);
NzSpaceComponent.ɵfac = function NzSpaceComponent_Factory(t) { return new (t || NzSpaceComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.NzConfigService)); };
NzSpaceComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: NzSpaceComponent, selectors: [["nz-space"]], contentQueries: function NzSpaceComponent_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {
        ɵngcc0.ɵɵcontentQuery(dirIndex, NzSpaceItemComponent, false);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.nzSpaceItemComponents = _t);
    } }, hostAttrs: [1, "ant-space"], hostVars: 4, hostBindings: function NzSpaceComponent_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵclassProp("ant-space-horizontal", ctx.nzDirection === "horizontal")("ant-space-vertical", ctx.nzDirection === "vertical");
    } }, inputs: { nzDirection: "nzDirection", nzSize: "nzSize" }, exportAs: ["NzSpace"], features: [ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c0, decls: 1, vars: 0, template: function NzSpaceComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NzSpaceComponent, [{
        type: Component,
        args: [{
                selector: 'nz-space',
                exportAs: 'NzSpace',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: " <ng-content></ng-content> ",
                host: {
                    class: 'ant-space',
                    '[class.ant-space-horizontal]': 'nzDirection === "horizontal"',
                    '[class.ant-space-vertical]': 'nzDirection === "vertical"'
                }
            }]
    }], function () { return [{ type: ɵngcc1.NzConfigService }]; }, { nzDirection: [{
            type: Input
        }], nzSize: [{
            type: Input
        }], nzSpaceItemComponents: [{
            type: ContentChildren,
            args: [NzSpaceItemComponent]
        }] }); })();
    return NzSpaceComponent;
}());
export { NzSpaceComponent };
if (false) {
    /** @type {?} */
    NzSpaceComponent.prototype.nzDirection;
    /** @type {?} */
    NzSpaceComponent.prototype.nzSize;
    /** @type {?} */
    NzSpaceComponent.prototype.nzSpaceItemComponents;
    /**
     * @type {?}
     * @private
     */
    NzSpaceComponent.prototype.destroy$;
    /** @type {?} */
    NzSpaceComponent.prototype.nzConfigService;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3BhY2UuY29tcG9uZW50LmpzIiwic291cmNlcyI6WyJuZy16b3Jyby1hbnRkL3NwYWNlL3NwYWNlLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBS0EsT0FBTyxFQUFpQix1QkFBdUIsRUFBRSxTQUFTLEVBQUUsZUFBZSxFQUFFLEtBQUssRUFBd0IsU0FBUyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzNJLE9BQU8sRUFBRSxlQUFlLEVBQUUsVUFBVSxFQUFFLE1BQU0sMkJBQTJCLENBQUM7QUFFeEUsT0FBTyxFQUFFLE9BQU8sRUFBRSxNQUFNLE1BQU0sQ0FBQztBQUMvQixPQUFPLEVBQUUsU0FBUyxFQUFFLFNBQVMsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBRXRELE9BQU8sRUFBRSxvQkFBb0IsRUFBRSxNQUFNLHdCQUF3QixDQUFDO0FBQzlEOzs7OztBQUFpQixJQUVYLHdCQUF3QixHQUFHLE9BQU87QUFFeEM7QUFFZSxJQWlCYiwwQkFBbUIsZUFBZ0M7QUFBSSxRQUFwQyxvQkFBZSxHQUFmLGVBQWUsQ0FBaUI7QUFBQyxRQVAzQyxnQkFBVyxHQUFxQixZQUFZLENBQUM7QUFDeEQsUUFBaUQsV0FBTSxHQUF5QixPQUFPLENBQUM7QUFDeEYsUUFHVSxhQUFRLEdBQUcsSUFBSSxPQUFPLEVBQUUsQ0FBQztBQUNuQyxJQUN3RCxDQUFDO0FBQ3pEO0FBQ087QUFBZ0I7QUFDbEI7QUFBUSxJQURILDJDQUFnQjtBQUFPO0FBQ3JCO0FBQW1CO0FBQzlCLElBRkM7QUFBYyxRQUFkLGlCQU1DO0FBQ0gsUUFOSSxJQUFJLElBQUksQ0FBQyxxQkFBcUIsRUFBRTtBQUNwQyxZQUFNLElBQUksQ0FBQyxxQkFBcUIsQ0FBQyxPQUFPO0FBQU07QUFDcEI7QUFBMkI7QUFDakQsWUFGcUMsVUFBQSxJQUFJO0FBQUksZ0JBQ3pDLElBQUksQ0FBQyxtQkFBbUIsQ0FBQyxLQUFJLENBQUMsV0FBVyxFQUFFLEtBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQztBQUNoRSxZQUFNLENBQUMsRUFBQyxDQUFDO0FBQ1QsU0FBSztBQUNMLElBQUUsQ0FBQztBQUVIO0FBQVE7QUFDTDtBQUFRLElBRFQsc0NBQVc7QUFBTztBQUNMO0FBQVEsSUFEckI7QUFBYyxRQUNaLElBQUksQ0FBQyxnQkFBZ0IsRUFBRSxDQUFDO0FBQzVCLElBQUUsQ0FBQztBQUVIO0FBQVE7QUFDTDtBQUFRLElBRFQsc0NBQVc7QUFBTztBQUNMO0FBQVEsSUFEckI7QUFBYyxRQUNaLElBQUksQ0FBQyxRQUFRLENBQUMsSUFBSSxFQUFFLENBQUM7QUFDekIsUUFBSSxJQUFJLENBQUMsUUFBUSxDQUFDLFFBQVEsRUFBRSxDQUFDO0FBQzdCLElBQUUsQ0FBQztBQUVIO0FBQVE7QUFBbUI7QUFDcEIsSUFETCwwQ0FBZTtBQUFPO0FBQ1Q7QUFBUSxJQURyQjtBQUFjLFFBQWQsaUJBSUM7QUFDSCxRQUpJLElBQUksQ0FBQyxxQkFBcUIsQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsRUFBRSxTQUFTLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsU0FBUztBQUFNO0FBQ2xGO0FBQ25CLFFBRmdHO0FBQzNGLFlBQUEsS0FBSSxDQUFDLGdCQUFnQixFQUFFLENBQUM7QUFDOUIsUUFBSSxDQUFDLEVBQUMsQ0FBQztBQUNQLElBQUUsQ0FBQyxDQS9CSztBQUFDOzZCQVhSLFNBQVMsU0FBQywvQ0FXcUI7UUFWOUIsUUFBUSxFQUFFLFVBQVUsNUJBV1IsZ0JBdEJMLGVBQWU7QUFBRztNQVl6QixRQUFRLEVBQUUsU0FBUyx6QkFaZ0I7T0FhbkMsZUFBZSxFQUFFLHhCQVhoQiw4QkFvQkEsS0FBSztPQVRrQyxDQUFDLE1BQU0sZEFTcEMseUJBQ1YsS0FBSztDQVROLFFBQVEsRUFBRSw2QkFBNkIsc0JBQ3ZDLElBQUksRUFBRSxwRUFRSyx3Q0FFVixlQUFlLFNBQUMsb0JBQW9CO0lBVG5DLEpBU3lDO0VBVHBDLEVBQUUsV0FBVyxmQVM4QixJQUZIO3dCQU43Qyx4QkFNMEQsUUFBbEQsVUFBVSxDQUFDLHdCQUF3QixDQUFDO1FBTmQsRUFBRSw4QkFBOEIseENBTWhCO3dCQUw5Qyw0QkFBNEIscERBTzlCLG9EQUZzRjtBQUx0RCw0QkFBNEIsc0JBQzNELGtCQUNGOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztvQkFJRDtBQUNBLElBNEJBLHVCQUFDO0FBQ0EsQ0FEQSxBQTNDRCxJQTJDQztBQUNELFNBakNhLGdCQUFnQjtBQUFJO0FBQWE7QUFBcUIsSUFDakUsdUNBQXNEO0FBQ3hEO0FBQXFCLElBQW5CLGtDQUFzRjtBQUN4RjtBQUNvQixJQUFsQixpREFBK0Y7QUFDakc7QUFDTztBQUFpQjtBQUVyQjtBQUFRLElBRlQsb0NBQWlDO0FBQ25DO0FBQ29CLElBQU4sMkNBQXVDO0FBQUM7QUFBRSIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogVXNlIG9mIHRoaXMgc291cmNlIGNvZGUgaXMgZ292ZXJuZWQgYnkgYW4gTUlULXN0eWxlIGxpY2Vuc2UgdGhhdCBjYW4gYmVcbiAqIGZvdW5kIGluIHRoZSBMSUNFTlNFIGZpbGUgYXQgaHR0cHM6Ly9naXRodWIuY29tL05HLVpPUlJPL25nLXpvcnJvLWFudGQvYmxvYi9tYXN0ZXIvTElDRU5TRVxuICovXG5cbmltcG9ydCB7IEFmdGVyVmlld0luaXQsIENoYW5nZURldGVjdGlvblN0cmF0ZWd5LCBDb21wb25lbnQsIENvbnRlbnRDaGlsZHJlbiwgSW5wdXQsIE9uQ2hhbmdlcywgT25EZXN0cm95LCBRdWVyeUxpc3QgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IE56Q29uZmlnU2VydmljZSwgV2l0aENvbmZpZyB9IGZyb20gJ25nLXpvcnJvLWFudGQvY29yZS9jb25maWcnO1xuXG5pbXBvcnQgeyBTdWJqZWN0IH0gZnJvbSAncnhqcyc7XG5pbXBvcnQgeyBzdGFydFdpdGgsIHRha2VVbnRpbCB9IGZyb20gJ3J4anMvb3BlcmF0b3JzJztcblxuaW1wb3J0IHsgTnpTcGFjZUl0ZW1Db21wb25lbnQgfSBmcm9tICcuL3NwYWNlLWl0ZW0uY29tcG9uZW50JztcbmltcG9ydCB7IE56U3BhY2VEaXJlY3Rpb24sIE56U3BhY2VTaXplIH0gZnJvbSAnLi90eXBlcyc7XG5cbmNvbnN0IE5aX0NPTkZJR19DT01QT05FTlRfTkFNRSA9ICdzcGFjZSc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ256LXNwYWNlJyxcbiAgZXhwb3J0QXM6ICdOelNwYWNlJyxcbiAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2gsXG4gIHRlbXBsYXRlOiBgIDxuZy1jb250ZW50PjwvbmctY29udGVudD4gYCxcbiAgaG9zdDoge1xuICAgIGNsYXNzOiAnYW50LXNwYWNlJyxcbiAgICAnW2NsYXNzLmFudC1zcGFjZS1ob3Jpem9udGFsXSc6ICduekRpcmVjdGlvbiA9PT0gXCJob3Jpem9udGFsXCInLFxuICAgICdbY2xhc3MuYW50LXNwYWNlLXZlcnRpY2FsXSc6ICduekRpcmVjdGlvbiA9PT0gXCJ2ZXJ0aWNhbFwiJ1xuICB9XG59KVxuZXhwb3J0IGNsYXNzIE56U3BhY2VDb21wb25lbnQgaW1wbGVtZW50cyBPbkNoYW5nZXMsIE9uRGVzdHJveSwgQWZ0ZXJWaWV3SW5pdCB7XG4gIEBJbnB1dCgpIG56RGlyZWN0aW9uOiBOelNwYWNlRGlyZWN0aW9uID0gJ2hvcml6b250YWwnO1xuICBASW5wdXQoKSBAV2l0aENvbmZpZyhOWl9DT05GSUdfQ09NUE9ORU5UX05BTUUpIG56U2l6ZTogbnVtYmVyIHwgTnpTcGFjZVNpemUgPSAnc21hbGwnO1xuXG4gIEBDb250ZW50Q2hpbGRyZW4oTnpTcGFjZUl0ZW1Db21wb25lbnQpIG56U3BhY2VJdGVtQ29tcG9uZW50cyE6IFF1ZXJ5TGlzdDxOelNwYWNlSXRlbUNvbXBvbmVudD47XG5cbiAgcHJpdmF0ZSBkZXN0cm95JCA9IG5ldyBTdWJqZWN0KCk7XG5cbiAgY29uc3RydWN0b3IocHVibGljIG56Q29uZmlnU2VydmljZTogTnpDb25maWdTZXJ2aWNlKSB7fVxuXG4gIHByaXZhdGUgdXBkYXRlU3BhY2VJdGVtcygpOiB2b2lkIHtcbiAgICBpZiAodGhpcy5uelNwYWNlSXRlbUNvbXBvbmVudHMpIHtcbiAgICAgIHRoaXMubnpTcGFjZUl0ZW1Db21wb25lbnRzLmZvckVhY2goaXRlbSA9PiB7XG4gICAgICAgIGl0ZW0uc2V0RGlyZWN0aW9uQW5kU2l6ZSh0aGlzLm56RGlyZWN0aW9uLCB0aGlzLm56U2l6ZSk7XG4gICAgICB9KTtcbiAgICB9XG4gIH1cblxuICBuZ09uQ2hhbmdlcygpOiB2b2lkIHtcbiAgICB0aGlzLnVwZGF0ZVNwYWNlSXRlbXMoKTtcbiAgfVxuXG4gIG5nT25EZXN0cm95KCk6IHZvaWQge1xuICAgIHRoaXMuZGVzdHJveSQubmV4dCgpO1xuICAgIHRoaXMuZGVzdHJveSQuY29tcGxldGUoKTtcbiAgfVxuXG4gIG5nQWZ0ZXJWaWV3SW5pdCgpOiB2b2lkIHtcbiAgICB0aGlzLm56U3BhY2VJdGVtQ29tcG9uZW50cy5jaGFuZ2VzLnBpcGUoc3RhcnRXaXRoKG51bGwpLCB0YWtlVW50aWwodGhpcy5kZXN0cm95JCkpLnN1YnNjcmliZSgoKSA9PiB7XG4gICAgICB0aGlzLnVwZGF0ZVNwYWNlSXRlbXMoKTtcbiAgICB9KTtcbiAgfVxufVxuIl19