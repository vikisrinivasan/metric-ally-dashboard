/**
 * @fileoverview added by tsickle
 * Generated from: space.module.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE
 */
import { CommonModule } from '@angular/common';
import { NgModule } from '@angular/core';
import { NzSpaceItemComponent } from './space-item.component';
import { NzSpaceComponent } from './space.component';
import * as ɵngcc0 from '@angular/core';
var NzSpaceModule = /** @class */ (function () {
    function NzSpaceModule() {
    }
NzSpaceModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: NzSpaceModule });
NzSpaceModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function NzSpaceModule_Factory(t) { return new (t || NzSpaceModule)(); }, imports: [[CommonModule]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NzSpaceModule, { declarations: function () { return [NzSpaceComponent, NzSpaceItemComponent]; }, imports: function () { return [CommonModule]; }, exports: function () { return [NzSpaceComponent, NzSpaceItemComponent]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NzSpaceModule, [{
        type: NgModule,
        args: [{
                declarations: [NzSpaceComponent, NzSpaceItemComponent],
                exports: [NzSpaceComponent, NzSpaceItemComponent],
                imports: [CommonModule]
            }]
    }], function () { return []; }, null); })();
    return NzSpaceModule;
}());
export { NzSpaceModule };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3BhY2UubW9kdWxlLmpzIiwic291cmNlcyI6WyJuZy16b3Jyby1hbnRkL3NwYWNlL3NwYWNlLm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFLQSxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDL0MsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUV6QyxPQUFPLEVBQUUsb0JBQW9CLEVBQUUsTUFBTSx3QkFBd0IsQ0FBQztBQUM5RCxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQzs7QUFFckQ7QUFDcUMsSUFEckM7QUFDZSxJQUlhLENBQUM7aURBTDVCLFFBQVEsU0FBQztpQkFDUixZQUFZLEVBQUUsQ0FBQyxnQkFBZ0IsRUFBRSxvQkFBb0IsQ0FBQyxzQkFDdEQsT0FBTyxFQUFFLENBQUMsZ0JBQWdCLEVBQUUsb0JBQW9CLENBQUM7SUFDakQsT0FBTyxFQUFFLENBQUMsWUFBWSxDQUFDLGtCQUN4Qjs7Ozs7Ozs7Z0RBQ1E7QUFBQyxJQUFrQixvQkFBQztBQUM1QixDQUQ0QixBQUw3QixJQUs2QjtBQUM3QixTQURhLGFBQWE7QUFDMUIiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFVzZSBvZiB0aGlzIHNvdXJjZSBjb2RlIGlzIGdvdmVybmVkIGJ5IGFuIE1JVC1zdHlsZSBsaWNlbnNlIHRoYXQgY2FuIGJlXG4gKiBmb3VuZCBpbiB0aGUgTElDRU5TRSBmaWxlIGF0IGh0dHBzOi8vZ2l0aHViLmNvbS9ORy1aT1JSTy9uZy16b3Jyby1hbnRkL2Jsb2IvbWFzdGVyL0xJQ0VOU0VcbiAqL1xuXG5pbXBvcnQgeyBDb21tb25Nb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xuaW1wb3J0IHsgTmdNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuaW1wb3J0IHsgTnpTcGFjZUl0ZW1Db21wb25lbnQgfSBmcm9tICcuL3NwYWNlLWl0ZW0uY29tcG9uZW50JztcbmltcG9ydCB7IE56U3BhY2VDb21wb25lbnQgfSBmcm9tICcuL3NwYWNlLmNvbXBvbmVudCc7XG5cbkBOZ01vZHVsZSh7XG4gIGRlY2xhcmF0aW9uczogW056U3BhY2VDb21wb25lbnQsIE56U3BhY2VJdGVtQ29tcG9uZW50XSxcbiAgZXhwb3J0czogW056U3BhY2VDb21wb25lbnQsIE56U3BhY2VJdGVtQ29tcG9uZW50XSxcbiAgaW1wb3J0czogW0NvbW1vbk1vZHVsZV1cbn0pXG5leHBvcnQgY2xhc3MgTnpTcGFjZU1vZHVsZSB7fVxuIl19