{"version":3,"file":"ngx-progressbar-core.js","sources":["@ngx-progressbar/core/lib/ng-progress-ref.ts","@ngx-progressbar/core/lib/ng-progress.interface.ts","@ngx-progressbar/core/lib/ng-progress.service.ts","@ngx-progressbar/core/lib/ng-progress.component.ts","@ngx-progressbar/core/lib/ng-progress.module.ts"],"names":[],"mappings":"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","sourcesContent":["import { NgProgressState, NgProgressConfig } from './ng-progress.interface';\r\nimport { Observable, Subject, BehaviorSubject, timer, of, combineLatest, Subscription } from 'rxjs';\r\nimport { tap, map, skip, delay, filter, debounce, switchMap, distinctUntilChanged } from 'rxjs/operators';\r\n\r\nexport class NgProgressRef {\r\n\r\n  /** Stream that emits when progress state is changed */\r\n  private readonly _state: BehaviorSubject<NgProgressState>;\r\n  state: Observable<NgProgressState>;\r\n\r\n  /** Stream that emits when config is changed */\r\n  private readonly _config: BehaviorSubject<NgProgressConfig>;\r\n  config: Observable<NgProgressState>;\r\n\r\n  /** Stream that increments and updates progress state */\r\n  private readonly _trickling = new Subject();\r\n\r\n  /** Stream that combines \"_trickling\" and \"config\" streams */\r\n  private readonly _worker = Subscription.EMPTY;\r\n\r\n  /** Get current progress state */\r\n  private get currState(): NgProgressState {\r\n    return this._state.value;\r\n  }\r\n\r\n  /** Check if progress has started */\r\n  get isStarted(): boolean {\r\n    return this.currState.active;\r\n  }\r\n\r\n  /** Progress start event */\r\n  get started(): Observable<boolean> {\r\n    return this._state.pipe(\r\n      map((state: NgProgressState) => state.active),\r\n      distinctUntilChanged(),\r\n      filter(active => active)\r\n    );\r\n  }\r\n\r\n  /** Progress ended event */\r\n  get completed(): Observable<boolean> {\r\n    return this._state.pipe(\r\n      map((state: NgProgressState) => state.active),\r\n      distinctUntilChanged(),\r\n      filter(active => !active),\r\n      skip(1)\r\n    );\r\n  }\r\n\r\n  constructor(customConfig: NgProgressConfig, private _onDestroyCallback: Function) {\r\n    this._state = new BehaviorSubject<NgProgressState>({active: false, value: 0});\r\n    this._config = new BehaviorSubject<NgProgressConfig>(customConfig);\r\n    this.state = this._state.asObservable();\r\n    this.config = this._state.asObservable();\r\n\r\n    this._worker = combineLatest(this._trickling, this._config).pipe(\r\n      debounce(([start, config]: [boolean, NgProgressConfig]) => timer(start ? config.debounceTime : 0)),\r\n      switchMap(([start, config]: [boolean, NgProgressConfig]) => start ? this.onTrickling(config) : this.onComplete(config))\r\n    ).subscribe();\r\n  }\r\n\r\n  /**\r\n   * Start the progress\r\n   */\r\n  start() {\r\n    this._trickling.next(true);\r\n  }\r\n\r\n  /**\r\n   * Complete the progress\r\n   */\r\n  complete() {\r\n    this._trickling.next(false);\r\n  }\r\n\r\n  /**\r\n   * Increment the progress\r\n   * @param amount\r\n   */\r\n  inc(amount?: number) {\r\n    const n = this.currState.value;\r\n    if (!this.isStarted) {\r\n      this.start();\r\n    } else {\r\n      if (typeof amount !== 'number') {\r\n        amount = this._config.value.trickleFunc(n);\r\n      }\r\n      this.set(n + amount);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Set the progress\r\n   * @param n\r\n   */\r\n  set(n: number) {\r\n    this.setState({value: this.clamp(n), active: true});\r\n  }\r\n\r\n  /**\r\n   * Set config\r\n   * @param config\r\n   */\r\n  setConfig(config: NgProgressConfig) {\r\n    this._config.next({...this._config.value, ...config});\r\n  }\r\n\r\n  /**\r\n   * Destroy progress reference\r\n   */\r\n  destroy() {\r\n    this._worker.unsubscribe();\r\n    this._trickling.complete();\r\n    this._state.complete();\r\n    this._config.complete();\r\n    this._onDestroyCallback();\r\n  }\r\n\r\n  /**\r\n   * Set progress state\r\n   * @param state\r\n   */\r\n  private setState(state: NgProgressState) {\r\n    this._state.next({...this.currState, ...state});\r\n  }\r\n\r\n  /**\r\n   * Clamps a value to be between min and max\r\n   * @param n\r\n   */\r\n  private clamp(n: number): number {\r\n    return Math.max(this._config.value.min, Math.min(this._config.value.max, n));\r\n  }\r\n\r\n  /**\r\n   * Keeps incrementing the progress\r\n   * @param config\r\n   */\r\n  private onTrickling(config: NgProgressConfig): Observable<number> {\r\n    if (!this.isStarted) {\r\n      this.set(this._config.value.min);\r\n    }\r\n    return timer(0, config.trickleSpeed).pipe(tap(() => this.inc()));\r\n  }\r\n\r\n  /**\r\n   * Completes then resets the progress\r\n   * @param config\r\n   */\r\n  private onComplete(config: NgProgressConfig): Observable<any> {\r\n    return !this.isStarted ? of({}) : of({}).pipe(\r\n      // Completes the progress\r\n      tap(() => this.setState({value: 100})),\r\n\r\n      // Hides the progress bar after a tiny delay\r\n      delay(config.speed * 1.7),\r\n      tap(() => this.setState({active: false})),\r\n\r\n      // Resets the progress state\r\n      delay(config.speed),\r\n      tap(() => this.setState({value: 0}))\r\n    );\r\n  }\r\n}\r\n","import { InjectionToken } from '@angular/core';\r\n\r\nexport interface NgProgressState {\r\n  active?: boolean;\r\n  value?: number;\r\n}\r\n\r\nexport interface NgProgressConfig {\r\n  spinnerPosition?: 'left' | 'right';\r\n  direction?: 'ltr+' | 'ltr-' | 'rtl+' | 'rtl-';\r\n  ease?: string;\r\n  color?: string;\r\n  thick?: boolean;\r\n  fixed?: boolean;\r\n  meteor?: boolean;\r\n  spinner?: boolean;\r\n  max?: number;\r\n  min?: number;\r\n  speed?: number;\r\n  trickleSpeed?: number;\r\n  trickleFunc?: (n: number) => number;\r\n  debounceTime?: number;\r\n}\r\n\r\nexport const NG_PROGRESS_CONFIG = new InjectionToken<NgProgressConfig>('ngProgressConfig');\r\n","import { Injectable, Inject, Optional } from '@angular/core';\r\nimport { NgProgressRef } from './ng-progress-ref';\r\nimport { NgProgressConfig, NG_PROGRESS_CONFIG } from './ng-progress.interface';\r\n\r\nconst defaultConfig: NgProgressConfig = {\r\n  min: 8,\r\n  max: 100,\r\n  speed: 200,\r\n  debounceTime: 0,\r\n  trickleSpeed: 300,\r\n  fixed: true,\r\n  meteor: true,\r\n  thick: false,\r\n  spinner: true,\r\n  ease: 'linear',\r\n  color: '#1B95E0',\r\n  direction: 'ltr+',\r\n  spinnerPosition: 'right',\r\n  trickleFunc: (n: number): number => {\r\n    if (n >= 0 && n < 20) return 10;\r\n    if (n >= 20 && n < 50) return 4;\r\n    if (n >= 50 && n < 80) return 2;\r\n    if (n >= 80 && n < 99) return 0.5;\r\n    return 0;\r\n  }\r\n};\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class NgProgress {\r\n\r\n  /** Store progress bar instances */\r\n  private readonly _instances = new Map<string, NgProgressRef>();\r\n\r\n  /** Global config */\r\n  config: NgProgressConfig;\r\n\r\n  constructor(@Optional() @Inject(NG_PROGRESS_CONFIG) config: NgProgressConfig) {\r\n    this.config = config ? {...defaultConfig, ...config} : defaultConfig;\r\n  }\r\n\r\n  /**\r\n   * Get or Create progress bar by ID\r\n   * @param id\r\n   * @param config\r\n   */\r\n  ref(id = 'root', config?: NgProgressConfig) {\r\n    if (this._instances.has(id)) {\r\n      // Get ProgressRef instance\r\n      const progressRef = this._instances.get(id);\r\n      if (config) {\r\n        progressRef.setConfig({...this.config, ...config});\r\n      }\r\n      return progressRef;\r\n    } else {\r\n      // Create new ProgressRef instance\r\n      const progressRef = new NgProgressRef({...this.config, ...config}, this.deleteInstance(id));\r\n      return this._instances.set(id, progressRef).get(id);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Destroy all progress bar instances\r\n   */\r\n  destroyAll() {\r\n    this._instances.forEach((ref: NgProgressRef) => ref.destroy());\r\n  }\r\n\r\n  /**\r\n   * A destroyer function for each progress bar instance\r\n   */\r\n  private deleteInstance(id: string) {\r\n    return () => {\r\n      this._instances.delete(id);\r\n    };\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  Input,\r\n  OnChanges,\r\n  OnDestroy,\r\n  OnInit,\r\n  Output,\r\n  ChangeDetectionStrategy,\r\n  EventEmitter,\r\n  ViewEncapsulation\r\n} from '@angular/core';\r\nimport { Observable, Subscription, SubscriptionLike} from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { NgProgress } from './ng-progress.service';\r\nimport { NgProgressRef } from './ng-progress-ref';\r\nimport { NgProgressState } from './ng-progress.interface';\r\n\r\n@Component({\r\n  selector: 'ng-progress',\r\n  host: {\r\n    'role': 'progressbar',\r\n    '[attr.spinnerPosition]': 'spinnerPosition',\r\n    '[attr.dir]': 'direction',\r\n    '[attr.thick]': 'thick',\r\n    '[attr.fixed]': 'fixed'\r\n  },\r\n  template: `\r\n    <ng-container *ngIf=\"state$ | async; let state\">\r\n      <div class=\"ng-progress-bar\"\r\n            [class.-active]=\"state.active\"\r\n            [style.transition]=\"'opacity ' + speed + 'ms ' + ease\">\r\n        <div class=\"ng-bar-placeholder\">\r\n          <div class=\"ng-bar\"\r\n                [style.transform]=\"state.transform\"\r\n                [style.backgroundColor]=\"color\"\r\n                [style.transition]=\"state.active ? 'all ' + speed + 'ms ' + ease : 'none'\">\r\n            <div *ngIf=\"meteor\" class=\"ng-meteor\" [style.boxShadow]=\"'0 0 10px '+ color + ', 0 0 5px ' + color\"></div>\r\n          </div>\r\n        </div>\r\n        <div *ngIf=\"spinner\" class=\"ng-spinner\">\r\n          <div class=\"ng-spinner-icon\"\r\n                [style.borderTopColor]=\"color\"\r\n                [style.borderLeftColor]=\"color\"></div>\r\n        </div>\r\n      </div>\r\n    </ng-container>\r\n  `,\r\n  styleUrls: ['./ng-progress.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  preserveWhitespaces: false\r\n})\r\n\r\nexport class NgProgressComponent implements OnInit, OnChanges, OnDestroy {\r\n\r\n  private _started: SubscriptionLike = Subscription.EMPTY;\r\n  private _completed: SubscriptionLike = Subscription.EMPTY;\r\n\r\n  /** Progress bar worker */\r\n  progressRef: NgProgressRef;\r\n\r\n  /** Stream that emits progress state */\r\n  state$: Observable<{ active: boolean, transform: string }>;\r\n\r\n  /** Creates a new instance if id is not already exists */\r\n  @Input() id = 'root';\r\n\r\n  /** Initializes inputs from the global config */\r\n  @Input() min: number = this._ngProgress.config.min;\r\n  @Input() max: number = this._ngProgress.config.max;\r\n  @Input() ease: string = this._ngProgress.config.ease;\r\n  @Input() color: string = this._ngProgress.config.color;\r\n  @Input() speed: number = this._ngProgress.config.speed;\r\n  @Input() thick: boolean = this._ngProgress.config.thick;\r\n  @Input() fixed: boolean = this._ngProgress.config.fixed;\r\n  @Input() meteor: boolean = this._ngProgress.config.meteor;\r\n  @Input() spinner: boolean = this._ngProgress.config.spinner;\r\n  @Input() trickleSpeed: number = this._ngProgress.config.trickleSpeed;\r\n  @Input() debounceTime: number = this._ngProgress.config.debounceTime;\r\n  @Input() trickleFunc: (n: number) => number = this._ngProgress.config.trickleFunc;\r\n  @Input() spinnerPosition: 'left' | 'right' = this._ngProgress.config.spinnerPosition;\r\n  @Input() direction: 'ltr+' | 'ltr-' | 'rtl+' | 'rtl-' = this._ngProgress.config.direction;\r\n  @Output() started = new EventEmitter();\r\n  @Output() completed = new EventEmitter();\r\n\r\n  get isStarted() {\r\n    return this.progressRef.isStarted;\r\n  }\r\n\r\n  constructor(private _ngProgress: NgProgress) {\r\n  }\r\n\r\n  ngOnChanges() {\r\n    if (this.progressRef instanceof NgProgressRef) {\r\n      // Update progress bar config when inputs change\r\n      this.progressRef.setConfig({\r\n        max: (this.max > 0 && this.max <= 100) ? this.max : 100,\r\n        min: (this.min < 100 && this.min >= 0) ? this.min : 0,\r\n        speed: this.speed,\r\n        trickleSpeed: this.trickleSpeed,\r\n        trickleFunc: this.trickleFunc,\r\n        debounceTime: this.debounceTime\r\n      });\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    // Get progress bar service instance\r\n    this.progressRef = this._ngProgress.ref(this.id, {\r\n      max: this.max,\r\n      min: this.min,\r\n      speed: this.speed,\r\n      trickleSpeed: this.trickleSpeed,\r\n      debounceTime: this.debounceTime\r\n    });\r\n\r\n    // Subscribe to progress state\r\n    this.state$ = this.progressRef.state.pipe(\r\n      map((state: NgProgressState) => ({\r\n        active: state.active,\r\n        transform: `translate3d(${state.value}%,0,0)`\r\n      }))\r\n    );\r\n\r\n    // Subscribes to started and completed events on deman\r\n    if (this.started.observers.length) {\r\n      this._started = this.progressRef.started.subscribe(() => this.started.emit());\r\n    }\r\n    if (this.completed.observers.length) {\r\n      this._completed = this.progressRef.completed.subscribe(() => this.completed.emit());\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this._started.unsubscribe();\r\n    this._completed.unsubscribe();\r\n    if (this.progressRef instanceof NgProgressRef) {\r\n      this.progressRef.destroy();\r\n    }\r\n  }\r\n\r\n  start() {\r\n    this.progressRef.start();\r\n  }\r\n\r\n  complete() {\r\n    this.progressRef.complete();\r\n  }\r\n\r\n  inc(n?: number) {\r\n    this.progressRef.inc(n);\r\n  }\r\n\r\n  set(n: number) {\r\n    this.progressRef.set(n);\r\n  }\r\n}\r\n","import { ModuleWithProviders, NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NgProgressComponent } from './ng-progress.component';\r\nimport { NgProgressConfig, NG_PROGRESS_CONFIG } from './ng-progress.interface';\r\n\r\n@NgModule({\r\n  declarations: [NgProgressComponent],\r\n  exports: [NgProgressComponent],\r\n  imports: [CommonModule]\r\n})\r\nexport class NgProgressModule {\r\n  static withConfig(config: NgProgressConfig): ModuleWithProviders {\r\n    return {\r\n      ngModule: NgProgressModule,\r\n      providers: [\r\n        {provide: NG_PROGRESS_CONFIG, useValue: config}\r\n      ]\r\n    };\r\n  }\r\n}\r\n"]}