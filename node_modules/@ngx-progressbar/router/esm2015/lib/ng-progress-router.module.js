/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { NgModule } from '@angular/core';
import { NG_PROGRESS_ROUTER_CONFIG } from './ng-progress-router.interface';
import { NgProgressRouter } from './ng-progress-router.service';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from './ng-progress-router.service';
export class NgProgressRouterModule {
    // Inject the service to activate it
    /**
     * @param {?} ngProgressRouter
     */
    constructor(ngProgressRouter) {
    }
    /**
     * @param {?} config
     * @return {?}
     */
    static withConfig(config) {
        return {
            ngModule: NgProgressRouterModule,
            providers: [
                { provide: NG_PROGRESS_ROUTER_CONFIG, useValue: config }
            ]
        };
    }
}
NgProgressRouterModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: NgProgressRouterModule });
NgProgressRouterModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function NgProgressRouterModule_Factory(t) { return new (t || NgProgressRouterModule)(ɵngcc0.ɵɵinject(ɵngcc1.NgProgressRouter)); } });
/** @nocollapse */
NgProgressRouterModule.ctorParameters = () => [
    { type: NgProgressRouter }
];
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgProgressRouterModule, [{
        type: NgModule,
        args: [{}]
    }], function () { return [{ type: ɵngcc1.NgProgressRouter }]; }, null); })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmctcHJvZ3Jlc3Mtcm91dGVyLm1vZHVsZS5qcyIsInNvdXJjZXMiOlsiQG5neC1wcm9ncmVzc2Jhci9yb3V0ZXIvbGliL25nLXByb2dyZXNzLXJvdXRlci5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxRQUFRLEVBQXVCLE1BQU0sZUFBZSxDQUFDO0FBQzlELE9BQU8sRUFBMEIseUJBQXlCLEVBQUUsTUFBTSxnQ0FBZ0MsQ0FBQztBQUNuRyxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSw4QkFBOEIsQ0FBQzs7O0FBR2hFLE1BQU0sT0FBTyxzQkFBc0I7QUFDbkM7QUFFQztBQUFRO0FBQW1DO0FBQzVDLElBREUsWUFBWSxnQkFBa0M7QUFDaEQsSUFBRSxDQUFDO0FBQ0g7QUFDTztBQUF5QjtBQUFtQjtBQUFRLElBQXpELE1BQU0sQ0FBQyxVQUFVLENBQUMsTUFBOEI7QUFBSSxRQUNsRCxPQUFPO0FBQ1gsWUFBTSxRQUFRLEVBQUUsc0JBQXNCO0FBQ3RDLFlBQU0sU0FBUyxFQUFFO0FBQ2pCLGdCQUFRLEVBQUUsT0FBTyxFQUFFLHlCQUF5QixFQUFFLFFBQVEsRUFBRSxNQUFNLEVBQUU7QUFDaEUsYUFBTztBQUNQLFNBQUssQ0FBQztBQUNOLElBQUUsQ0FBQztBQUNIO2tEQWZDLFFBQVEsU0FBQyxFQUFFO3VNQUNQO0FBQUM7QUFBbUI7QUFFUyxZQUx6QixnQkFBZ0I7QUFBRzs7Ozs7QUFGQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFHQSxBQUFBLEFBQUEsQUFBQSxBQUdBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFFQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQ0EsQUFBQSxBQUNBLEFBQUEsQUFkQSxBQUFBLEFBQUEsQUFBQSxBQUZBLEFBQUEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZ01vZHVsZSwgTW9kdWxlV2l0aFByb3ZpZGVycyB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBOZ1Byb2dyZXNzUm91dGVyQ29uZmlnLCBOR19QUk9HUkVTU19ST1VURVJfQ09ORklHIH0gZnJvbSAnLi9uZy1wcm9ncmVzcy1yb3V0ZXIuaW50ZXJmYWNlJztcclxuaW1wb3J0IHsgTmdQcm9ncmVzc1JvdXRlciB9IGZyb20gJy4vbmctcHJvZ3Jlc3Mtcm91dGVyLnNlcnZpY2UnO1xyXG5cclxuQE5nTW9kdWxlKHt9KVxyXG5leHBvcnQgY2xhc3MgTmdQcm9ncmVzc1JvdXRlck1vZHVsZSB7XHJcblxyXG4gIC8vIEluamVjdCB0aGUgc2VydmljZSB0byBhY3RpdmF0ZSBpdFxyXG4gIGNvbnN0cnVjdG9yKG5nUHJvZ3Jlc3NSb3V0ZXI6IE5nUHJvZ3Jlc3NSb3V0ZXIpIHtcclxuICB9XHJcblxyXG4gIHN0YXRpYyB3aXRoQ29uZmlnKGNvbmZpZzogTmdQcm9ncmVzc1JvdXRlckNvbmZpZyk6IE1vZHVsZVdpdGhQcm92aWRlcnMge1xyXG4gICAgcmV0dXJuIHtcclxuICAgICAgbmdNb2R1bGU6IE5nUHJvZ3Jlc3NSb3V0ZXJNb2R1bGUsXHJcbiAgICAgIHByb3ZpZGVyczogW1xyXG4gICAgICAgIHsgcHJvdmlkZTogTkdfUFJPR1JFU1NfUk9VVEVSX0NPTkZJRywgdXNlVmFsdWU6IGNvbmZpZyB9XHJcbiAgICAgIF1cclxuICAgIH07XHJcbiAgfVxyXG59XHJcbiJdfQ==