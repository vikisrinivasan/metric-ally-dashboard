{"version":3,"sources":["../../node_modules/tslib/tslib.es6.js","ng://ngx-quill/src/quill-defaults.ts","ng://ngx-quill/src/quill-editor.interfaces.ts","ng://ngx-quill/src/helpers.ts","ng://ngx-quill/src/quill-editor.component.ts","ng://ngx-quill/src/quill-view-html.component.ts","ng://ngx-quill/src/quill-view.component.ts","ng://ngx-quill/src/quill.module.ts"],"names":["__decorate","decorators","target","key","desc","d","c","arguments","length","r","Object","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","__read","o","n","m","Symbol","iterator","e","call","ar","next","done","push","value","error","defaultModules","toolbar","header","list","script","indent","direction","size","color","background","font","align","QUILL_CONFIG_TOKEN","InjectionToken","getFormat","format","configFormat","Quill","QuillEditorComponent","elementRef","domSanitizer","doc","platformId","renderer","zone","config","_this","this","required","customToolbarPosition","sanitize","styles","strict","customOptions","preserveWhitespace","trimOnValidation","onEditorCreated","EventEmitter","onEditorChanged","onContentChanged","onSelectionChanged","onFocus","onBlur","disabled","valueGetter","quillEditor","editorElement","html","querySelector","innerHTML","modelValue","getText","getContents","JSON","stringify","valueSetter","SecurityContext","HTML","clipboard","convert","parse","insert","selectionChangeHandler","range","oldRange","source","shouldTriggerOnModelTouched","onModelTouched","observers","run","emit","editor","textChangeHandler","delta","oldDelta","text","content","editorElem","trackChanges","shouldTriggerOnModelChange","sources","USER","onModelChange","editorChangeHandler","event","current","old","text_1","content_1","html_1","normalizeClassNames","classes","trim","split","reduce","prev","cur","trimmed","prototype","_modelValue","onValidatorChanged","ngAfterViewInit","isPlatformServer","runOutsideAngular","require$$0","nativeElement","insertAdjacentHTML","toolbarElem","modules","assign","undefined","placeholder","keys","forEach","setStyle","addClasses","customOption","newCustomOption","import","whitelist","register","bounds","body","debug","readOnly","scrollingContainer","formats","concat","__spread","theme","setContents","setText","contents","history","clear","setDisabledState","on","setTimeout","ngOnDestroy","off","ngOnChanges","changes","enable","currentValue","root","dataset","currentStyling","previousStyling","previousValue","removeStyle","currentClasses","previousClasses","removeClasses","classList","QuillEditorComponent_1","addClass","removeClass","writeValue","isDisabled","disable","setAttribute","removeAttribute","registerOnChange","fn","registerOnTouched","registerOnValidatorChange","validate","err","valid","textLength","minLength","minLengthError","given","maxLength","maxLengthError","requiredError","empty","ElementRef","type","Inject","args","DomSanitizer","DOCUMENT","PLATFORM_ID","Renderer2","NgZone","Input","Output","Component","encapsulation","ViewEncapsulation","None","providers","multi","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","NG_VALIDATORS","selector","template","QuillViewHTMLComponent","sanitizer","themeClass","bypassSecurityTrustHtml","QuillViewComponent","QuillModule","forRoot","ngModule","QuillModule_1","useValue","NgModule","declarations","exports","imports","CommonModule"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","export const defaultModules = {\n  toolbar: [\n    ['bold', 'italic', 'underline', 'strike'], // toggled buttons\n    ['blockquote', 'code-block'],\n\n    [{ header: 1 }, { header: 2 }], // custom button values\n    [{ list: 'ordered' }, { list: 'bullet' }],\n    [{ script: 'sub' }, { script: 'super' }], // superscript/subscript\n    [{ indent: '-1' }, { indent: '+1' }], // outdent/indent\n    [{ direction: 'rtl' }], // text direction\n\n    [{ size: ['small', false, 'large', 'huge'] }], // custom dropdown\n    [{ header: [1, 2, 3, 4, 5, 6, false] }],\n\n    [\n      { color: [] },\n      { background: [] }\n    ], // dropdown with defaults from theme\n    [{ font: [] }],\n    [{ align: [] }],\n\n    ['clean'], // remove formatting button\n\n    ['link', 'image', 'video'] // link and image, video\n  ]\n}\n","import { InjectionToken } from '@angular/core'\n\nexport type QuillToolbarConfig = Array<Array< string | {\n  indent?: string\n  list?: string\n  direction?: string\n  header?: number | Array<boolean | number>\n  color?: string[] | string\n  background?: string[] | string\n  align?: string[] | string\n  script?: string\n  font?: string[] | string\n  size?: Array<boolean | string>\n}\n>>\n\nexport interface QuillModules {\n  [key: string]: any\n  clipboard?: {\n    matchers?: any[]\n    matchVisual?: boolean\n  } | boolean\n  history?: {\n    delay?: number\n    maxStack?: number\n    userOnly?: boolean\n  } | boolean\n  keyboard?: {\n    bindings?: any\n  } | boolean\n  syntax?: boolean\n  toolbar?: QuillToolbarConfig | string | {\n    container?: string | string[] | QuillToolbarConfig\n    handlers?: {\n      [key: string]: any\n    }\n  } | boolean\n}\n\nexport type QuillFormat = 'object' | 'json' | 'html' | 'text'\n\nexport interface QuillConfig {\n  bounds?: HTMLElement | string\n  debug?: 'error' | 'warn' | 'log' | false\n  format?: QuillFormat\n  formats?: string[]\n  modules?: QuillModules\n  placeholder?: string\n  readOnly?: boolean\n  scrollingContainer?: HTMLElement | string | null\n  theme?: string\n  strict?: boolean\n  // Custom Config to track all changes or only changes by 'user'\n  trackChanges?: 'user' | 'all'\n}\n\nexport const QUILL_CONFIG_TOKEN = new InjectionToken<QuillConfig>('config')\n","import {QuillFormat} from './quill-editor.interfaces'\n\nexport const getFormat = (format?: QuillFormat, configFormat?: QuillFormat): QuillFormat => {\n  const passedFormat = format || configFormat\n  return passedFormat || 'html'\n}\n","import {DOCUMENT, isPlatformServer} from '@angular/common'\nimport {DomSanitizer} from '@angular/platform-browser'\n\nimport {QUILL_CONFIG_TOKEN, QuillConfig, QuillModules} from './quill-editor.interfaces'\n\nimport {\n  AfterViewInit,\n  Component,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Inject,\n  Input,\n  NgZone,\n  OnChanges,\n  OnDestroy,\n  Output,\n  PLATFORM_ID,\n  Renderer2,\n  SecurityContext,\n  SimpleChanges,\n  ViewEncapsulation\n} from '@angular/core'\n\nimport {ControlValueAccessor, NG_VALIDATORS, NG_VALUE_ACCESSOR, Validator} from '@angular/forms'\nimport {defaultModules} from './quill-defaults'\n\nimport {getFormat} from './helpers'\nimport { QuillDelta, QuillEditor } from './quill.interfaces'\n\n// Because quill uses `document` directly, we cannot `import` during SSR\n// instead, we load dynamically via `require('quill')` in `ngAfterViewInit()`\ndeclare const require: any\nlet Quill: any = null\n\nexport interface CustomOption {\n  import: string\n  whitelist: any[]\n}\n\nexport interface Range {\n  index: number\n  length: number\n}\n\nexport interface ContentChange {\n  content: any\n  delta: QuillDelta\n  editor: QuillEditor\n  html: string | null\n  oldDelta: QuillDelta\n  source: string\n  text: string\n}\n\nexport interface SelectionChange {\n  editor: QuillEditor\n  oldRange: Range | null\n  range: Range | null\n  source: string\n}\n\nexport interface Blur {\n  editor: QuillEditor\n  source: string\n}\n\nexport interface Focus {\n  editor: QuillEditor\n  source: string\n}\n\nexport type EditorChangeContent = ContentChange & {event: 'text-change'}\nexport type EditorChangeSelection = SelectionChange & {event: 'selection-change'}\n\n@Component({\n  encapsulation: ViewEncapsulation.None,\n  providers: [\n    {\n      multi: true,\n      provide: NG_VALUE_ACCESSOR,\n      // eslint-disable-next-line @typescript-eslint/no-use-before-define\n      useExisting: forwardRef(() => QuillEditorComponent)\n    },\n    {\n      multi: true,\n      provide: NG_VALIDATORS,\n      // eslint-disable-next-line @typescript-eslint/no-use-before-define\n      useExisting: forwardRef(() => QuillEditorComponent)\n    }\n  ],\n  selector: 'quill-editor',\n  template: `\n  <ng-content select=\"[quill-editor-toolbar]\"></ng-content>\n`\n})\nexport class QuillEditorComponent implements AfterViewInit, ControlValueAccessor, OnChanges, OnDestroy, Validator {\n\n  static normalizeClassNames(classes: string): string[] {\n    const classList = classes.trim().split(' ')\n    return classList.reduce((prev: string[], cur: string) => {\n      const trimmed = cur.trim()\n      if (trimmed) {\n        prev.push(trimmed)\n      }\n\n      return prev\n    }, [])\n  }\n\n  quillEditor!: QuillEditor\n  editorElem: HTMLElement | undefined\n  content: any\n\n  @Input() format?: 'object' | 'html' | 'text' | 'json'\n  @Input() theme?: string\n  @Input() modules?: QuillModules\n  @Input() debug?: 'warn' | 'log' | 'error' | false\n  @Input() readOnly?: boolean\n  @Input() placeholder?: string\n  @Input() maxLength?: number\n  @Input() minLength?: number\n  @Input() required = false\n  @Input() formats?: string[] | null\n  @Input() customToolbarPosition: 'top' | 'bottom' = 'top'\n  @Input() sanitize = false\n  @Input() styles: any = null\n  @Input() strict = true\n  @Input() scrollingContainer?: HTMLElement | string | null\n  @Input() bounds?: HTMLElement | string\n  @Input() customOptions: CustomOption[] = []\n  @Input() trackChanges?: 'user' | 'all'\n  @Input() preserveWhitespace = false\n  @Input() classes?: string\n  @Input() trimOnValidation = false\n\n  @Output() onEditorCreated: EventEmitter<QuillEditor> = new EventEmitter()\n  @Output() onEditorChanged: EventEmitter<EditorChangeContent | EditorChangeSelection> = new EventEmitter()\n  @Output() onContentChanged: EventEmitter<ContentChange> = new EventEmitter()\n  @Output() onSelectionChanged: EventEmitter<SelectionChange> = new EventEmitter()\n  @Output() onFocus: EventEmitter<Focus> = new EventEmitter()\n  @Output() onBlur: EventEmitter<Blur> = new EventEmitter()\n\n  disabled = false // used to store initial value before ViewInit\n\n  constructor(\n    @Inject(ElementRef) private elementRef: ElementRef,\n    @Inject(DomSanitizer) private domSanitizer: DomSanitizer,\n    @Inject(DOCUMENT) private doc: any,\n    @Inject(PLATFORM_ID) private platformId: any,\n    @Inject(Renderer2) private renderer: Renderer2,\n    @Inject(NgZone) private zone: NgZone,\n    @Inject(QUILL_CONFIG_TOKEN) private config: QuillConfig\n  ) {}\n\n  onModelChange(_modelValue?: any) {}\n  onModelTouched() {}\n  onValidatorChanged() {}\n\n  @Input()\n  valueGetter = (quillEditor: QuillEditor, editorElement: HTMLElement): string | any  => {\n    let html: string | null = editorElement.querySelector('.ql-editor')!.innerHTML\n    if (html === '<p><br></p>' || html === '<div><br></div>') {\n      html = null\n    }\n    let modelValue: string | QuillDelta | null = html\n    const format = getFormat(this.format, this.config.format)\n\n    if (format === 'text') {\n      modelValue = quillEditor.getText()\n    } else if (format === 'object') {\n      modelValue = quillEditor.getContents()\n    } else if (format === 'json') {\n      try {\n        modelValue = JSON.stringify(quillEditor.getContents())\n      } catch (e) {\n        modelValue = quillEditor.getText()\n      }\n    }\n\n    return modelValue\n  }\n\n  @Input()\n  valueSetter = (quillEditor: QuillEditor, value: any): any => {\n    const format = getFormat(this.format, this.config.format)\n    if (format === 'html') {\n      if (this.sanitize) {\n        value = this.domSanitizer.sanitize(SecurityContext.HTML, value)\n      }\n      return quillEditor.clipboard.convert(value)\n    } else if (format === 'json') {\n      try {\n        return JSON.parse(value)\n      } catch (e) {\n        return [{ insert: value }]\n      }\n    }\n\n    return value\n  }\n\n  ngAfterViewInit() {\n    if (isPlatformServer(this.platformId)) {\n      return\n    }\n    if (!Quill) {\n      this.zone.runOutsideAngular(() => {\n        Quill = require('quill')\n      })\n    }\n\n    this.elementRef.nativeElement.insertAdjacentHTML(\n      this.customToolbarPosition === 'top' ? 'beforeend' : 'afterbegin',\n      this.preserveWhitespace ? '<pre quill-editor-element></pre>' : '<div quill-editor-element></div>'\n    )\n\n    this.editorElem = this.elementRef.nativeElement.querySelector(\n      '[quill-editor-element]'\n    )\n\n    const toolbarElem = this.elementRef.nativeElement.querySelector(\n      '[quill-editor-toolbar]'\n    )\n    const modules = Object.assign({}, this.modules || (this.config.modules || defaultModules))\n\n    if (toolbarElem) {\n      modules.toolbar = toolbarElem\n    } else if (modules.toolbar === undefined) {\n      modules.toolbar = defaultModules.toolbar\n    }\n\n    let placeholder = this.placeholder !== undefined ? this.placeholder : this.config.placeholder\n    if (placeholder === undefined) {\n      placeholder = 'Insert text here ...'\n    }\n\n    if (this.styles) {\n      Object.keys(this.styles).forEach((key: string) => {\n        this.renderer.setStyle(this.editorElem, key, this.styles[key])\n      })\n    }\n\n    if (this.classes) {\n      this.addClasses(this.classes)\n    }\n\n    this.customOptions.forEach((customOption) => {\n      const newCustomOption = Quill.import(customOption.import)\n      newCustomOption.whitelist = customOption.whitelist\n      Quill.register(newCustomOption, true)\n    })\n\n    let bounds = this.bounds && this.bounds === 'self' ? this.editorElem : this.bounds\n    if (!bounds) {\n      bounds = this.config.bounds ? this.config.bounds : this.doc.body\n    }\n\n    let debug = this.debug\n    if (!debug && debug !== false && this.config.debug) {\n      debug = this.config.debug\n    }\n\n    let readOnly = this.readOnly\n    if (!readOnly && this.readOnly !== false) {\n      readOnly = this.config.readOnly !== undefined ? this.config.readOnly : false\n    }\n\n    let scrollingContainer = this.scrollingContainer\n    if (!scrollingContainer && this.scrollingContainer !== null) {\n      scrollingContainer = this.config.scrollingContainer === null || this.config.scrollingContainer ? this.config.scrollingContainer : null\n    }\n\n    let formats = this.formats\n    if (!formats && formats === undefined) {\n      formats = this.config.formats ? [...this.config.formats] : (this.config.formats === null ? null : undefined)\n    }\n\n    this.zone.runOutsideAngular(() => {\n      this.quillEditor = new Quill(this.editorElem, {\n        bounds,\n        debug,\n        formats,\n        modules,\n        placeholder,\n        readOnly,\n        scrollingContainer,\n        strict: this.strict,\n        theme: this.theme || (this.config.theme ? this.config.theme : 'snow')\n      })\n    })\n\n    if (this.content) {\n      const format = getFormat(this.format, this.config.format)\n      if (format === 'object') {\n        this.quillEditor.setContents(this.content, 'silent')\n      } else if (format === 'text') {\n        this.quillEditor.setText(this.content, 'silent')\n      } else if (format === 'json') {\n        try {\n          this.quillEditor.setContents(JSON.parse(this.content), 'silent')\n        } catch (e) {\n          this.quillEditor.setText(this.content, 'silent')\n        }\n      } else {\n        if (this.sanitize) {\n          this.content = this.domSanitizer.sanitize(SecurityContext.HTML, this.content)\n        }\n        const contents = this.quillEditor.clipboard.convert(this.content)\n        this.quillEditor.setContents(contents, 'silent')\n      }\n\n      this.quillEditor.history.clear()\n    }\n\n    // initialize disabled status based on this.disabled as default value\n    this.setDisabledState()\n\n    // triggered if selection or text changed\n    this.quillEditor.on(\n      'editor-change',\n      this.editorChangeHandler\n    )\n\n    // mark model as touched if editor lost focus\n    this.quillEditor.on(\n      'selection-change',\n      this.selectionChangeHandler\n    )\n\n    // update model if text changes\n    this.quillEditor.on(\n      'text-change',\n      this.textChangeHandler\n    )\n\n    // trigger created in a timeout to avoid changed models after checked\n    // if you are using the editor api in created output to change the editor content\n    setTimeout(() => {\n      this.onValidatorChanged()\n      this.onEditorCreated.emit(this.quillEditor)\n    })\n  }\n\n  selectionChangeHandler = (range: Range | null, oldRange: Range | null, source: string) => {\n    const shouldTriggerOnModelTouched = !range && this.onModelTouched\n\n    // only emit changes when there's any listener\n    if (!this.onBlur.observers.length &&\n        !this.onFocus.observers.length &&\n        !this.onSelectionChanged.observers.length &&\n        !shouldTriggerOnModelTouched) {\n      return\n    }\n\n    this.zone.run(() => {\n      if (range === null) {\n        this.onBlur.emit({\n          editor: this.quillEditor,\n          source\n        })\n      } else if (oldRange === null) {\n        this.onFocus.emit({\n          editor: this.quillEditor,\n          source\n        })\n      }\n\n      this.onSelectionChanged.emit({\n        editor: this.quillEditor,\n        oldRange,\n        range,\n        source\n      })\n\n      if (shouldTriggerOnModelTouched) {\n        this.onModelTouched()\n      }\n    })\n  }\n\n  textChangeHandler = (delta: QuillDelta, oldDelta: QuillDelta, source: string): void => {\n    // only emit changes emitted by user interactions\n    const text = this.quillEditor.getText()\n    const content = this.quillEditor.getContents()\n\n    let html: string | null = this.editorElem!.querySelector('.ql-editor')!.innerHTML\n    if (html === '<p><br></p>' || html === '<div><br></div>') {\n      html = null\n    }\n\n    const trackChanges = this.trackChanges || this.config.trackChanges\n    const shouldTriggerOnModelChange = (source === Quill.sources.USER || trackChanges && trackChanges === 'all') && this.onModelChange\n\n    // only emit changes when there's any listener\n    if (!this.onContentChanged.observers.length && !shouldTriggerOnModelChange) {\n      return\n    }\n\n    this.zone.run(() => {\n      if (shouldTriggerOnModelChange) {\n        this.onModelChange(\n          this.valueGetter(this.quillEditor, this.editorElem!)\n        )\n      }\n\n      this.onContentChanged.emit({\n        content,\n        delta,\n        editor: this.quillEditor,\n        html,\n        oldDelta,\n        source,\n        text\n      })\n    })\n  }\n\n  editorChangeHandler = (event: 'text-change' | 'selection-change', current: any | Range | null, old: any | Range | null, source: string): void => {\n    // only emit changes when there's any listener\n    if (!this.onEditorChanged.observers.length) {\n      return\n    }\n\n    // only emit changes emitted by user interactions\n    if (event === 'text-change') {\n      const text = this.quillEditor.getText()\n      const content = this.quillEditor.getContents()\n\n      let html: string | null = this.editorElem!.querySelector('.ql-editor')!.innerHTML\n      if (html === '<p><br></p>' || html === '<div><br></div>') {\n        html = null\n      }\n\n      this.zone.run(() => {\n        this.onEditorChanged.emit({\n          content,\n          delta: current,\n          editor: this.quillEditor,\n          event,\n          html,\n          oldDelta: old,\n          source,\n          text\n        })\n      })\n    } else {\n      this.onEditorChanged.emit({\n        editor: this.quillEditor,\n        event,\n        oldRange: old,\n        range: current,\n        source\n      })\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.quillEditor) {\n      this.quillEditor.off('selection-change', this.selectionChangeHandler)\n      this.quillEditor.off('text-change', this.textChangeHandler)\n      this.quillEditor.off('editor-change', this.editorChangeHandler)\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (!this.quillEditor) {\n      return\n    }\n    // tslint:disable:no-string-literal\n    if (changes['readOnly']) {\n      this.quillEditor.enable(!changes['readOnly'].currentValue)\n    }\n    if (changes['placeholder']) {\n      this.quillEditor.root.dataset.placeholder =\n        changes['placeholder'].currentValue\n    }\n    if (changes['styles']) {\n      const currentStyling = changes['styles'].currentValue\n      const previousStyling = changes['styles'].previousValue\n\n      if (previousStyling) {\n        Object.keys(previousStyling).forEach((key: string) => {\n          this.renderer.removeStyle(this.editorElem, key)\n        })\n      }\n      if (currentStyling) {\n        Object.keys(currentStyling).forEach((key: string) => {\n          this.renderer.setStyle(this.editorElem, key, this.styles[key])\n        })\n      }\n    }\n    if (changes['classes']) {\n      const currentClasses = changes['classes'].currentValue\n      const previousClasses = changes['classes'].previousValue\n\n      if (previousClasses) {\n        this.removeClasses(previousClasses)\n      }\n\n      if (currentClasses) {\n        this.addClasses(currentClasses)\n      }\n    }\n    // tslint:enable:no-string-literal\n  }\n\n  addClasses(classList: string): void {\n    QuillEditorComponent.normalizeClassNames(classList).forEach((c: string) => {\n      this.renderer.addClass(this.editorElem, c)\n    })\n  }\n\n  removeClasses(classList: string): void {\n    QuillEditorComponent.normalizeClassNames(classList).forEach((c: string) => {\n      this.renderer.removeClass(this.editorElem, c)\n    })\n  }\n\n  writeValue(currentValue: any) {\n    this.content = currentValue\n    const format = getFormat(this.format, this.config.format)\n\n    if (this.quillEditor) {\n      if (currentValue) {\n        if (format === 'text') {\n          this.quillEditor.setText(currentValue)\n        } else {\n          this.quillEditor.setContents(\n            this.valueSetter(this.quillEditor, this.content)\n          )\n        }\n        return\n      }\n      this.quillEditor.setText('')\n    }\n  }\n\n  setDisabledState(isDisabled: boolean = this.disabled): void {\n    // store initial value to set appropriate disabled status after ViewInit\n    this.disabled = isDisabled\n    if (this.quillEditor) {\n      if (isDisabled) {\n        this.quillEditor.disable()\n        this.renderer.setAttribute(this.elementRef.nativeElement, 'disabled', 'disabled')\n      } else {\n        if (!this.readOnly) {\n          this.quillEditor.enable()\n        }\n        this.renderer.removeAttribute(this.elementRef.nativeElement, 'disabled')\n      }\n    }\n  }\n\n  registerOnChange(fn: (modelValue: any) => void): void {\n    this.onModelChange = fn\n  }\n\n  registerOnTouched(fn: () => void): void {\n    this.onModelTouched = fn\n  }\n\n  registerOnValidatorChange(fn: () => void) {\n    this.onValidatorChanged = fn\n  }\n\n  validate() {\n    if (!this.quillEditor) {\n      return null\n    }\n\n    const err: {\n      minLengthError?: {\n        given: number\n        minLength: number\n      }\n      maxLengthError?: {\n        given: number\n        maxLength: number\n      }\n      requiredError?: { empty: boolean }\n    } = {}\n    let valid = true\n\n    const text = this.quillEditor.getText()\n    // trim text if wanted + handle special case that an empty editor contains a new line\n    const textLength = this.trimOnValidation ? text.trim().length : (text.length === 1 && text.trim().length === 0 ? 0 : text.length - 1)\n\n    if (this.minLength && textLength && textLength < this.minLength) {\n      err.minLengthError = {\n        given: textLength,\n        minLength: this.minLength\n      }\n\n      valid = false\n    }\n\n    if (this.maxLength && textLength > this.maxLength) {\n      err.maxLengthError = {\n        given: textLength,\n        maxLength: this.maxLength\n      }\n\n      valid = false\n    }\n\n    if (this.required && !textLength) {\n      err.requiredError = {\n        empty: true\n      }\n\n      valid = false\n    }\n\n    return valid ? null : err\n  }\n}\n","import { DomSanitizer, SafeHtml } from '@angular/platform-browser'\n\nimport { QUILL_CONFIG_TOKEN, QuillConfig } from './quill-editor.interfaces'\n\nimport {\n  Component,\n  Inject,\n  Input,\n  OnChanges,\n  SimpleChanges,\n  ViewEncapsulation\n} from '@angular/core'\n\n@Component({\n  encapsulation: ViewEncapsulation.None,\n  selector: 'quill-view-html',\n  styles: [`\n.ql-container.ngx-quill-view-html {\n  border: 0;\n}\n`],\n  template: `\n  <div class=\"ql-container\" [ngClass]=\"themeClass\">\n    <div class=\"ql-editor\" [innerHTML]=\"innerHTML\">\n    </div>\n  </div>\n`\n})\nexport class QuillViewHTMLComponent implements OnChanges {\n  innerHTML: SafeHtml = ''\n  themeClass = 'ql-snow'\n\n  @Input() content = ''\n  @Input() theme?: string\n\n  constructor(\n    @Inject(DomSanitizer) private sanitizer: DomSanitizer,\n    @Inject(QUILL_CONFIG_TOKEN) private config: QuillConfig\n  ) {}\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.theme) {\n      const theme = changes.theme.currentValue || (this.config.theme ? this.config.theme : 'snow')\n      this.themeClass = `ql-${theme} ngx-quill-view-html`\n    } else if (!this.theme) {\n      const theme = this.config.theme ? this.config.theme : 'snow'\n      this.themeClass = `ql-${theme} ngx-quill-view-html`\n    }\n    if (changes.content) {\n      this.innerHTML = this.sanitizer.bypassSecurityTrustHtml(changes.content.currentValue)\n    }\n  }\n}\n","import { isPlatformServer } from '@angular/common'\n\nimport { QUILL_CONFIG_TOKEN, QuillConfig, QuillModules } from './quill-editor.interfaces'\n\nimport {\n  AfterViewInit,\n  Component,\n  ElementRef,\n  Inject,\n  Input,\n  OnChanges,\n  PLATFORM_ID,\n  Renderer2,\n  SimpleChanges,\n  ViewEncapsulation,\n  NgZone\n} from '@angular/core'\n\nimport { defaultModules } from './quill-defaults'\nimport { CustomOption } from './quill-editor.component'\nimport {getFormat} from './helpers'\nimport { QuillEditor } from './quill.interfaces'\n\n// Because quill uses `document` directly, we cannot `import` during SSR\n// instead, we load dynamically via `require('quill')` in `ngAfterViewInit()`\ndeclare const require: any\nlet Quill: any = null\n\n@Component({\n  encapsulation: ViewEncapsulation.None,\n  selector: 'quill-view',\n  styles: [`\n.ql-container.ngx-quill-view {\n  border: 0;\n}\n`],\n  template: `\n`\n})\nexport class QuillViewComponent implements AfterViewInit, OnChanges {\n  quillEditor!: QuillEditor\n  editorElem: HTMLElement | undefined\n\n  @Input() format?: 'object' | 'html' | 'text' | 'json'\n  @Input() theme?: string\n  @Input() modules?: QuillModules\n  @Input() debug?: 'warn' | 'log' | 'error' | false\n  @Input() formats?: string[] | null\n  @Input() strict = true\n  @Input() content: any\n  @Input() customOptions: CustomOption[] = []\n  @Input() preserveWhitespace = false\n\n  constructor(\n    @Inject(PLATFORM_ID) private platformId: any,\n    @Inject(QUILL_CONFIG_TOKEN) private config: QuillConfig,\n    @Inject(Renderer2) private renderer: Renderer2,\n    @Inject(ElementRef) private elementRef: ElementRef,\n    @Inject(NgZone) private zone: NgZone\n  ) {}\n\n  valueSetter = (quillEditor: QuillEditor, value: any): any => {\n    const format = getFormat(this.format, this.config.format)\n    let content = value\n    if (format === 'html' || format === 'text') {\n      content = quillEditor.clipboard.convert(value)\n    } else if (format === 'json') {\n      try {\n        content = JSON.parse(value)\n      } catch (e) {\n        content = [{ insert: value }]\n      }\n    }\n    quillEditor.setContents(content)\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (!this.quillEditor) {\n      return\n    }\n    if (changes.content) {\n      this.valueSetter(this.quillEditor, changes.content.currentValue)\n    }\n  }\n\n  ngAfterViewInit() {\n    if (isPlatformServer(this.platformId)) {\n      return\n    }\n    if (!Quill) {\n      this.zone.runOutsideAngular(() => {\n        Quill = require('quill')\n      })\n    }\n\n    const modules = Object.assign({}, this.modules || (this.config.modules || defaultModules))\n    modules.toolbar = false\n\n    this.customOptions.forEach((customOption) => {\n      const newCustomOption = Quill.import(customOption.import)\n      newCustomOption.whitelist = customOption.whitelist\n      Quill.register(newCustomOption, true)\n    })\n\n    let debug = this.debug\n    if (!debug && debug !== false && this.config.debug) {\n      debug = this.config.debug\n    }\n\n    let formats = this.formats\n    if (!formats && formats === undefined) {\n      formats = this.config.formats ? Object.assign({}, this.config.formats) : (this.config.formats === null ? null : undefined)\n    }\n    const theme = this.theme || (this.config.theme ? this.config.theme : 'snow')\n\n    this.elementRef.nativeElement.insertAdjacentHTML(\n      'afterbegin',\n      this.preserveWhitespace ? '<pre quill-view-element></pre>' : '<div quill-view-element></div>'\n    )\n\n    this.editorElem = this.elementRef.nativeElement.querySelector(\n      '[quill-view-element]'\n    )\n\n    this.zone.runOutsideAngular(() => {\n      this.quillEditor = new Quill(this.editorElem, {\n        debug,\n        formats,\n        modules,\n        readOnly: true,\n        strict: this.strict,\n        theme\n      })\n    })\n\n    this.renderer.addClass(this.editorElem, 'ngx-quill-view')\n\n    if (this.content) {\n      this.valueSetter(this.quillEditor, this.content)\n    }\n  }\n}\n","import { CommonModule } from '@angular/common'\nimport { ModuleWithProviders, NgModule } from '@angular/core'\n\nimport { defaultModules } from './quill-defaults'\nimport { QuillEditorComponent } from './quill-editor.component'\nimport { QUILL_CONFIG_TOKEN, QuillConfig } from './quill-editor.interfaces'\nimport { QuillViewHTMLComponent } from './quill-view-html.component'\nimport { QuillViewComponent } from './quill-view.component'\n\n@NgModule({\n  declarations: [\n    QuillEditorComponent,\n    QuillViewComponent,\n    QuillViewHTMLComponent\n  ],\n  exports: [QuillEditorComponent, QuillViewComponent, QuillViewHTMLComponent],\n  imports: [CommonModule],\n  providers: []\n})\nexport class QuillModule {\n  static forRoot(config?: QuillConfig): ModuleWithProviders {\n    return {\n      ngModule: QuillModule,\n      providers: [\n        {\n          provide: QUILL_CONFIG_TOKEN,\n          useValue: config || { modules: defaultModules }\n        }\n      ]\n    }\n  }\n}\n"]}