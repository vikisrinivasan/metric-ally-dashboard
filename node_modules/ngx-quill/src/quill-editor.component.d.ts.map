{"version":3,"file":"quill-editor.component.d.ts","sources":["quill-editor.component.d.ts"],"names":[],"mappingssourcesContent":["import { DomSanitizer } from '@angular/platform-browser';\nimport { QuillConfig, QuillModules } from './quill-editor.interfaces';\nimport { AfterViewInit, ElementRef, EventEmitter, NgZone, OnChanges, OnDestroy, Renderer2, SimpleChanges } from '@angular/core';\nimport { ControlValueAccessor, Validator } from '@angular/forms';\nimport { QuillDelta, QuillEditor } from './quill.interfaces';\nexport interface CustomOption {\n    import: string;\n    whitelist: any[];\n}\nexport interface Range {\n    index: number;\n    length: number;\n}\nexport interface ContentChange {\n    content: any;\n    delta: QuillDelta;\n    editor: QuillEditor;\n    html: string | null;\n    oldDelta: QuillDelta;\n    source: string;\n    text: string;\n}\nexport interface SelectionChange {\n    editor: QuillEditor;\n    oldRange: Range | null;\n    range: Range | null;\n    source: string;\n}\nexport interface Blur {\n    editor: QuillEditor;\n    source: string;\n}\nexport interface Focus {\n    editor: QuillEditor;\n    source: string;\n}\nexport declare type EditorChangeContent = ContentChange & {\n    event: 'text-change';\n};\nexport declare type EditorChangeSelection = SelectionChange & {\n    event: 'selection-change';\n};\nexport declare class QuillEditorComponent implements AfterViewInit, ControlValueAccessor, OnChanges, OnDestroy, Validator {\n    private elementRef;\n    private domSanitizer;\n    private doc;\n    private platformId;\n    private renderer;\n    private zone;\n    private config;\n    static normalizeClassNames(classes: string): string[];\n    quillEditor: QuillEditor;\n    editorElem: HTMLElement | undefined;\n    content: any;\n    format?: 'object' | 'html' | 'text' | 'json';\n    theme?: string;\n    modules?: QuillModules;\n    debug?: 'warn' | 'log' | 'error' | false;\n    readOnly?: boolean;\n    placeholder?: string;\n    maxLength?: number;\n    minLength?: number;\n    required: boolean;\n    formats?: string[] | null;\n    customToolbarPosition: 'top' | 'bottom';\n    sanitize: boolean;\n    styles: any;\n    strict: boolean;\n    scrollingContainer?: HTMLElement | string | null;\n    bounds?: HTMLElement | string;\n    customOptions: CustomOption[];\n    trackChanges?: 'user' | 'all';\n    preserveWhitespace: boolean;\n    classes?: string;\n    trimOnValidation: boolean;\n    onEditorCreated: EventEmitter<QuillEditor>;\n    onEditorChanged: EventEmitter<EditorChangeContent | EditorChangeSelection>;\n    onContentChanged: EventEmitter<ContentChange>;\n    onSelectionChanged: EventEmitter<SelectionChange>;\n    onFocus: EventEmitter<Focus>;\n    onBlur: EventEmitter<Blur>;\n    disabled: boolean;\n    constructor(elementRef: ElementRef, domSanitizer: DomSanitizer, doc: any, platformId: any, renderer: Renderer2, zone: NgZone, config: QuillConfig);\n    onModelChange(_modelValue?: any): void;\n    onModelTouched(): void;\n    onValidatorChanged(): void;\n    valueGetter: (quillEditor: QuillEditor, editorElement: HTMLElement) => any;\n    valueSetter: (quillEditor: QuillEditor, value: any) => any;\n    ngAfterViewInit(): void;\n    selectionChangeHandler: (range: Range, oldRange: Range, source: string) => void;\n    textChangeHandler: (delta: QuillDelta, oldDelta: QuillDelta, source: string) => void;\n    editorChangeHandler: (event: \"text-change\" | \"selection-change\", current: any, old: any, source: string) => void;\n    ngOnDestroy(): void;\n    ngOnChanges(changes: SimpleChanges): void;\n    addClasses(classList: string): void;\n    removeClasses(classList: string): void;\n    writeValue(currentValue: any): void;\n    setDisabledState(isDisabled?: boolean): void;\n    registerOnChange(fn: (modelValue: any) => void): void;\n    registerOnTouched(fn: () => void): void;\n    registerOnValidatorChange(fn: () => void): void;\n    validate(): {\n        minLengthError?: {\n            given: number;\n            minLength: number;\n        };\n        maxLengthError?: {\n            given: number;\n            maxLength: number;\n        };\n        requiredError?: {\n            empty: boolean;\n        };\n    };\n}\n"]}