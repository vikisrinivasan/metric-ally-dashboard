/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Directive, ElementRef, HostListener, Input } from '@angular/core';
import { DRAG_START, REGISTER_HANDLE } from '../nestable.constant';
import * as ɵngcc0 from '@angular/core';
export class NestableDragHandleDirective {
    /**
     * @param {?} _el
     */
    constructor(_el) {
        this._el = _el;
    }
    /**
     * @param {?} event
     * @return {?}
     */
    onMouseDown(event) {
        /** @type {?} */
        const detail = {
            param: this.ngxNestableDragHandle,
            event: event
        };
        this._el.nativeElement.dispatchEvent(new CustomEvent(DRAG_START, { bubbles: true, detail: detail }));
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        this._el.nativeElement.dispatchEvent(new CustomEvent(REGISTER_HANDLE, { bubbles: true, detail: this.ngxNestableDragHandle }));
    }
}
NestableDragHandleDirective.ɵfac = function NestableDragHandleDirective_Factory(t) { return new (t || NestableDragHandleDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };
NestableDragHandleDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: NestableDragHandleDirective, selectors: [["", "ngxNestableDragHandle", ""]], hostBindings: function NestableDragHandleDirective_HostBindings(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵlistener("mousedown", function NestableDragHandleDirective_mousedown_HostBindingHandler($event) { return ctx.onMouseDown($event); });
    } }, inputs: { ngxNestableDragHandle: "ngxNestableDragHandle" } });
/** @nocollapse */
NestableDragHandleDirective.ctorParameters = () => [
    { type: ElementRef }
];
NestableDragHandleDirective.propDecorators = {
    ngxNestableDragHandle: [{ type: Input }],
    onMouseDown: [{ type: HostListener, args: ['mousedown', ['$event'],] }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NestableDragHandleDirective, [{
        type: Directive,
        args: [{
                selector: '[ngxNestableDragHandle]'
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, { 
    /**
     * @param {?} event
     * @return {?}
     */
    onMouseDown: [{
            type: HostListener,
            args: ['mousedown', ['$event']]
        }], ngxNestableDragHandle: [{
            type: Input
        }] }); })();
if (false) {
    /** @type {?} */
    NestableDragHandleDirective.prototype.ngxNestableDragHandle;
    /**
     * @type {?}
     * @private
     */
    NestableDragHandleDirective.prototype._el;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmVzdGFibGUtZHJhZy1oYW5kbGUuZGlyZWN0aXZlLmpzIiwic291cmNlcyI6WyJuZ3gtbmVzdGFibGUvbGliL25lc3RhYmxlLWRyYWctaGFuZGxlL25lc3RhYmxlLWRyYWctaGFuZGxlLmRpcmVjdGl2ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxVQUFVLEVBQUUsWUFBWSxFQUFFLEtBQUssRUFBVSxNQUFNLGVBQWUsQ0FBQztBQUVuRixPQUFPLEVBQUUsVUFBVSxFQUFFLGVBQWUsRUFBRSxNQUFNLHNCQUFzQixDQUFDOztBQUtuRSxNQUFNLE9BQU8sMkJBQTJCO0FBQUc7QUFBUTtBQUN2QztBQUFRLElBYWhCLFlBQW9CLEdBQWU7QUFBSSxRQUFuQixRQUFHLEdBQUgsR0FBRyxDQUFZO0FBQUMsSUFBRSxDQUFDO0FBQzNDO0FBQ087QUFDQztBQUFtQjtBQUFRLElBYnhCLFdBQVcsQ0FBQyxLQUFLO0FBQzVCO0FBQ0EsY0FEYyxNQUFNLEdBQUc7QUFDdkIsWUFBWSxLQUFLLEVBQUUsSUFBSSxDQUFDLHFCQUFxQjtBQUM3QyxZQUFZLEtBQUssRUFBRSxLQUFLO0FBQ3hCLFNBQVM7QUFDVCxRQUFRLElBQUksQ0FBQyxHQUFHLENBQUMsYUFBYSxDQUFDLGFBQWEsQ0FDaEMsSUFBSSxXQUFXLENBQUMsVUFBVSxFQUFFLEVBQUUsT0FBTyxFQUFFLElBQUksRUFBRSxNQUFNLEVBQUUsTUFBTSxFQUFFLENBQUMsQ0FDakUsQ0FBQztBQUNWLElBQUksQ0FBQztBQUNMO0FBQ087QUFBbUI7QUFBUSxJQUU5QixRQUFRO0FBQUssUUFDVCxJQUFJLENBQUMsR0FBRyxDQUFDLGFBQWEsQ0FBQyxhQUFhLENBQ2hDLElBQUksV0FBVyxDQUFDLGVBQWUsRUFBRSxFQUFFLE9BQU8sRUFBRSxJQUFJLEVBQUUsTUFBTSxFQUFFLElBQUksQ0FBQyxxQkFBcUIsRUFBRSxDQUFDLENBQzFGLENBQUM7QUFDVixJQUFJLENBQUM7QUFDTDt1REF4QkMsU0FBUyxTQUFDLGtCQUNQLFFBQVEsRUFBRSx5QkFBeUIsY0FDdEM7Ozt1RUFDSTtBQUFDO0FBQW1CO0FBQ1IsWUFSRyxVQUFVO0FBQUc7QUFBRztBQUErQyxvQ0FROUUsS0FBSztBQUFLLDBCQUVWLFlBQVksU0FBQyxXQUFXLEVBQUUsQ0FBQyxRQUFRLENBQUM7QUFDckM7Ozs7Ozs7Ozs7Ozs7Ozs7b0JBQUU7QUFBQztBQUFhO0FBQ1gsSUFKTCw0REFBc0M7QUFDMUM7QUFDTztBQUFpQjtBQUFnQjtBQUNuQyxJQVVXLDBDQUF1QjtBQUFDO0FBQUUiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBEaXJlY3RpdmUsIEVsZW1lbnRSZWYsIEhvc3RMaXN0ZW5lciwgSW5wdXQsIE9uSW5pdCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5pbXBvcnQgeyBEUkFHX1NUQVJULCBSRUdJU1RFUl9IQU5ETEUgfSBmcm9tICcuLi9uZXN0YWJsZS5jb25zdGFudCc7XG5cbkBEaXJlY3RpdmUoe1xuICAgIHNlbGVjdG9yOiAnW25neE5lc3RhYmxlRHJhZ0hhbmRsZV0nXG59KVxuZXhwb3J0IGNsYXNzIE5lc3RhYmxlRHJhZ0hhbmRsZURpcmVjdGl2ZSBpbXBsZW1lbnRzIE9uSW5pdCB7XG4gICAgQElucHV0KCkgcHVibGljIG5neE5lc3RhYmxlRHJhZ0hhbmRsZTtcblxuICAgIEBIb3N0TGlzdGVuZXIoJ21vdXNlZG93bicsIFsnJGV2ZW50J10pXG4gICAgcHVibGljIG9uTW91c2VEb3duKGV2ZW50KSB7XG4gICAgICAgIGNvbnN0IGRldGFpbCA9IHtcbiAgICAgICAgICAgIHBhcmFtOiB0aGlzLm5neE5lc3RhYmxlRHJhZ0hhbmRsZSxcbiAgICAgICAgICAgIGV2ZW50OiBldmVudFxuICAgICAgICB9O1xuICAgICAgICB0aGlzLl9lbC5uYXRpdmVFbGVtZW50LmRpc3BhdGNoRXZlbnQoXG4gICAgICAgICAgICBuZXcgQ3VzdG9tRXZlbnQoRFJBR19TVEFSVCwgeyBidWJibGVzOiB0cnVlLCBkZXRhaWw6IGRldGFpbCB9KVxuICAgICAgICApO1xuICAgIH1cblxuICAgIGNvbnN0cnVjdG9yKHByaXZhdGUgX2VsOiBFbGVtZW50UmVmKSB7fVxuXG4gICAgbmdPbkluaXQoKTogdm9pZCB7XG4gICAgICAgIHRoaXMuX2VsLm5hdGl2ZUVsZW1lbnQuZGlzcGF0Y2hFdmVudChcbiAgICAgICAgICAgIG5ldyBDdXN0b21FdmVudChSRUdJU1RFUl9IQU5ETEUsIHsgYnViYmxlczogdHJ1ZSwgZGV0YWlsOiB0aGlzLm5neE5lc3RhYmxlRHJhZ0hhbmRsZSB9KVxuICAgICAgICApO1xuICAgIH1cbn1cbiJdfQ==