{"version":3,"file":"angular-fire-auth-guard.umd.js","sources":["../../../src/auth-guard/auth-guard.ts","../../../src/auth-guard/auth-guard.module.ts"],"names":["map","take","ɵAngularFireSchedulers","ɵkeepUnstableUntilFirstFactory","of","observeOn","switchMap","ɵfirebaseAppFactory","shareReplay","Observable","Injectable","Inject","FIREBASE_OPTIONS","Optional","FIREBASE_APP_NAME","NgZone","Router","pipe","NgModule"],"mappings":"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","sourcesContent":["import { Inject, Injectable, NgZone, Optional } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from '@angular/router';\nimport { Observable, of, pipe, UnaryFunction } from 'rxjs';\nimport { map, observeOn, shareReplay, switchMap, take, tap } from 'rxjs/operators';\nimport { User } from 'firebase/app';\nimport {\n  ɵAngularFireSchedulers,\n  FirebaseOptions,\n  FirebaseAppConfig,\n  FIREBASE_OPTIONS,\n  FIREBASE_APP_NAME,\n  ɵfirebaseAppFactory,\n  ɵkeepUnstableUntilFirstFactory\n} from '@angular/fire';\n\nexport type AuthPipeGenerator = (next: ActivatedRouteSnapshot, state: RouterStateSnapshot) => AuthPipe;\nexport type AuthPipe = UnaryFunction<Observable<User|null>, Observable<boolean|any[]>>;\n\nexport const loggedIn: AuthPipe = map(user => !!user);\n\n@Injectable({\n  providedIn: 'any'\n})\nexport class AngularFireAuthGuard implements CanActivate {\n\n  authState: Observable<User|null>;\n\n  constructor(\n    @Inject(FIREBASE_OPTIONS) options: FirebaseOptions,\n    @Optional() @Inject(FIREBASE_APP_NAME) nameOrConfig: string|FirebaseAppConfig|null|undefined,\n    zone: NgZone,\n    private router: Router\n  ) {\n\n    const schedulers = new ɵAngularFireSchedulers(zone);\n    const keepUnstableUntilFirst = ɵkeepUnstableUntilFirstFactory(schedulers);\n\n    const auth = of(undefined).pipe(\n      observeOn(new ɵAngularFireSchedulers(zone).outsideAngular),\n      switchMap(() => zone.runOutsideAngular(() => import('firebase/auth'))),\n      map(() => ɵfirebaseAppFactory(options, zone, nameOrConfig)),\n      map(app => zone.runOutsideAngular(() => app.auth())),\n      shareReplay({ bufferSize: 1, refCount: false }),\n    );\n\n    this.authState = auth.pipe(\n      switchMap(auth => new Observable<User|null>(auth.onAuthStateChanged.bind(auth))),\n      keepUnstableUntilFirst\n    );\n  }\n\n  canActivate = (next: ActivatedRouteSnapshot, state: RouterStateSnapshot) => {\n    const authPipeFactory = next.data.authGuardPipe as AuthPipeGenerator || (() => loggedIn);\n    return this.authState.pipe(\n      take(1),\n      authPipeFactory(next, state),\n      map(can => typeof can === 'boolean' ? can : this.router.createUrlTree(can as any[]))\n    );\n  }\n\n}\n\nexport const canActivate = (pipe: AuthPipeGenerator) => ({\n    canActivate: [ AngularFireAuthGuard ], data: { authGuardPipe: pipe }\n});\n\n\nexport const isNotAnonymous: AuthPipe = map(user => !!user && !user.isAnonymous);\nexport const idTokenResult = switchMap((user: User|null) => user ? user.getIdTokenResult() : of(null));\nexport const emailVerified: AuthPipe = map(user => !!user && user.emailVerified);\nexport const customClaims = pipe(idTokenResult, map(idTokenResult => idTokenResult ? idTokenResult.claims : []));\nexport const hasCustomClaim: (claim: string) => AuthPipe =\n  (claim) => pipe(customClaims, map(claims =>  claims.hasOwnProperty(claim)));\nexport const redirectUnauthorizedTo: (redirect: any[]) => AuthPipe =\n  (redirect) => pipe(loggedIn, map(loggedIn => loggedIn || redirect));\nexport const redirectLoggedInTo: (redirect: any[]) => AuthPipe =\n  (redirect) => pipe(loggedIn, map(loggedIn => loggedIn && redirect || true));\n","import { NgModule } from '@angular/core';\nimport { AngularFireAuthGuard } from './auth-guard';\n\n@NgModule({\n  providers: [ AngularFireAuthGuard ]\n})\nexport class AngularFireAuthGuardModule { }\n"]}