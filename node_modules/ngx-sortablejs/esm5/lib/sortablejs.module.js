/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { NgModule } from '@angular/core';
import { GLOBALS } from './globals';
import { SortablejsDirective } from './sortablejs.directive';
import * as ɵngcc0 from '@angular/core';
var SortablejsModule = /** @class */ (function () {
    function SortablejsModule() {
    }
    /**
     * @param {?} globalOptions
     * @return {?}
     */
    SortablejsModule.forRoot = /**
     * @param {?} globalOptions
     * @return {?}
     */
    function (globalOptions) {
        return {
            ngModule: SortablejsModule,
            providers: [
                { provide: GLOBALS, useValue: globalOptions },
            ],
        };
    };
SortablejsModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: SortablejsModule });
SortablejsModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function SortablejsModule_Factory(t) { return new (t || SortablejsModule)(); } });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(SortablejsModule, { declarations: function () { return [SortablejsDirective]; }, exports: function () { return [SortablejsDirective]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SortablejsModule, [{
        type: NgModule,
        args: [{
                declarations: [SortablejsDirective],
                exports: [SortablejsDirective]
            }]
    }], function () { return []; }, null); })();
    return SortablejsModule;
}());
export { SortablejsModule };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic29ydGFibGVqcy5tb2R1bGUuanMiLCJzb3VyY2VzIjpbIm5neC1zb3J0YWJsZWpzL2xpYi9zb3J0YWJsZWpzLm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUF1QixRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDOUQsT0FBTyxFQUFFLE9BQU8sRUFBRSxNQUFNLFdBQVcsQ0FBQztBQUVwQyxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSx3QkFBd0IsQ0FBQzs7QUFFN0Q7QUFFQyxJQUZEO0FBQ2tCLElBY2xCLENBQUM7QUFDRDtBQUFRO0FBQWdDO0FBQW1CO0FBQVEsSUFWbkQsd0JBQU87QUFBTztBQUFnQztBQUM5RDtBQUFRLElBRE4sVUFBc0IsYUFBZ0M7QUFBSSxRQUN4RCxPQUFPO0FBQ1gsWUFBTSxRQUFRLEVBQUUsZ0JBQWdCO0FBQ2hDLFlBQU0sU0FBUyxFQUFFO0FBQ2pCLGdCQUFRLEVBQUUsT0FBTyxFQUFFLE9BQU8sRUFBRSxRQUFRLEVBQUUsYUFBYSxFQUFFO0FBQ3JELGFBQU87QUFDUCxTQUFLLENBQUM7QUFDTixJQUFFLENBQUM7b0RBYkYsUUFBUSxTQUFDO2NBQ1IsWUFBWSxFQUFFLENBQUMsbUJBQW1CLENBQUMsc0JBQ25DLE9BQU8sRUFBRSxDQUFDLG1CQUFtQixDQUFDLG1CQUMvQjs7Ozs7Ozs7Z0RBQ1E7QUFBQyxJQVdWLHVCQUFDO0FBQ0EsQ0FEQSxBQWZELElBZUM7QUFDRCxTQVphLGdCQUFnQjtBQUU3QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE1vZHVsZVdpdGhQcm92aWRlcnMsIE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBHTE9CQUxTIH0gZnJvbSAnLi9nbG9iYWxzJztcbmltcG9ydCB7IFNvcnRhYmxlanNPcHRpb25zIH0gZnJvbSAnLi9zb3J0YWJsZWpzLW9wdGlvbnMnO1xuaW1wb3J0IHsgU29ydGFibGVqc0RpcmVjdGl2ZSB9IGZyb20gJy4vc29ydGFibGVqcy5kaXJlY3RpdmUnO1xuXG5ATmdNb2R1bGUoe1xuICBkZWNsYXJhdGlvbnM6IFtTb3J0YWJsZWpzRGlyZWN0aXZlXSxcbiAgZXhwb3J0czogW1NvcnRhYmxlanNEaXJlY3RpdmVdLFxufSlcbmV4cG9ydCBjbGFzcyBTb3J0YWJsZWpzTW9kdWxlIHtcblxuICBwdWJsaWMgc3RhdGljIGZvclJvb3QoZ2xvYmFsT3B0aW9uczogU29ydGFibGVqc09wdGlvbnMpOiBNb2R1bGVXaXRoUHJvdmlkZXJzIHtcbiAgICByZXR1cm4ge1xuICAgICAgbmdNb2R1bGU6IFNvcnRhYmxlanNNb2R1bGUsXG4gICAgICBwcm92aWRlcnM6IFtcbiAgICAgICAgeyBwcm92aWRlOiBHTE9CQUxTLCB1c2VWYWx1ZTogZ2xvYmFsT3B0aW9ucyB9LFxuICAgICAgXSxcbiAgICB9O1xuICB9XG5cbn1cbiJdfQ==